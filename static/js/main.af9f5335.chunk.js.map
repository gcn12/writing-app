{"version":3,"sources":["firebase.js","redux/actions/appActions.js","Components/Signup/Signup.js","Components/Signup/Signin.js","globalFunctions.js","Components/Edit/Outline/EditCardModal.js","Components/Edit/Outline/DeleteCardModal.js","Components/Edit/Outline/CreateCardModal.js","Icons/IconComponent.js","Components/Edit/Outline/Toolbar.js","Components/Edit/Outline/CardIcons.js","Components/Edit/Outline/Card.js","Components/Edit/Outline/SortableItem.js","Components/Edit/Outline/Outline.js","Components/Edit/Screenplay/Autocomplete.js","Components/Edit/Screenplay/EditorAssets.js","Components/Edit/Screenplay/Editor.js","fonts/CourierPrime-Regular-normal.js","fonts/CourierPrime-Bold-normal.js","fonts/CourierPrime-BoldItalic-bolditalic.js","fonts/CourierPrime-Italic-italic.js","Components/Edit/Screenplay/CreatePDFButton.js","Components/Edit/Screenplay/Toolbar.js","Components/Edit/Screenplay/Screenplay.js","Components/Edit/Notes/Toolbar.js","Components/Edit/Notes/Notes.js","GlobalStyles.js","Components/LandingPage/Header.js","Components/LandingPage/EditorPreview.js","Components/LandingPage/MainSection.js","Components/LandingPage/FormattingSection.js","Components/LandingPage/ColorsSection.js","Components/LandingPage/OutliningSection.js","Components/LandingPage/Footer.js","Components/LandingPage/LandingPage.js","Components/Dashboard/FilesList/CreateDocModal.js","Components/Dashboard/FilesList/NewDocListItem.js","Components/Dashboard/FilesList/CreateDocButton.js","redux/actions/dashboardActions.js","Components/Dashboard/Breadcrumbs.js","Components/Dashboard/FilesList/Table/FileIcons.js","Components/Dashboard/FilesList/Table/ModifierIcon.js","Components/Dashboard/FilesList/Table/TableBodyComponent.js","Components/Dashboard/FilesList/RenameDocModal.js","Components/Dashboard/FilesList/DeleteDocModal.js","Components/Dashboard/FilesList/Table/TableHeadComponent.js","Components/Dashboard/FilesList/DocsTable.js","Components/Dashboard/FilesList/AllFiles.js","Components/Goals/DailyGoals/CircleProgress.js","Components/Goals/DailyGoals/CirclePlaceholder.js","Components/Goals/DailyGoals/DailyGoalModal.js","Components/Goals/DailyGoals/DailyGoals.js","Components/Dashboard/Sidebar/SidebarItem.js","Components/Dashboard/Sidebar/Signout.js","Components/Dashboard/Sidebar/Sidebar.js","Components/Goals/ToDo/GoalCard.js","Components/Goals/ToDo/CardComponent.js","Components/Goals/ToDo/ToDo.js","Components/MobileNavigation/MobileNavItem.js","Components/MobileNavigation/MobileSignout.js","Components/MobileNavigation/MobileNavigation.js","Components/MobileNavigation/MobileHeader.js","Components/ChangeColors/ColorPicker.js","Components/ChangeColors/ColorSelection.js","Components/ChangeColors/ColorThemeCard.js","Components/ChangeColors/ColorTemplates.js","Components/ChangeColors/ChangeColors.js","Components/Dashboard/Dashboard.js","Components/Homepage.js","App.js","reportWebVitals.js","redux/reducers/appReducer.js","redux/reducers/dashboardReducer.js","redux/rootReducer.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","db","firestore","CURRENT_PROJECT_ID","USER_DATA","PROJECT_FILES","CURRENT_FILE_ID","OUTLINE_DATA","OUTLINE_ITEMS_DISPLAY","OUTLINE_ITEMS_FOR_UPDATE","NOTES_DATA","DASHBOARD_CURRENT_SECTION","ROOT_DOCS","LAYER_ONE_DOCS","LAYER_TWO_DOCS","LAYER_THREE_DOCS","CURRENT_LAYER","COLOR_THEMES","COLORS","TASKS","GOALS","RESET","GOAL_IS_VISIBLE","IS_ARROW_VISIBLE","reset","dispatch","type","goals","data","payload","tasks","colors","colorThemes","currentLayer","layerThreeDocs","layerTwoDocs","layerOneDocs","rootDocs","outlineItemsForUpdate","outlineItemsDisplay","dashboardCurrentSection","userData","connect","state","props","useState","email","setEmail","password","setPassword","message","setMessage","history","useHistory","useEffect","updateColors","background","primaryText","addUserFilesToDatabase","userCredential","userID","user","uid","collection","doc","set","addUserIDToDatabase","then","preferences","name","highlight","secondary","sidebar","catch","err","console","log","addUserColorsToDatabase","themes","addColorThemesToDatabase","goal","wordsWritten","date","moment","format","words","addGoalsToDatabase","todo","addTasksToDatabase","parentID","sortMethod","createFilesFolders","push","Container","Form","Logo","InputLabelContainer","Label","htmlFor","Email","id","onChange","e","target","value","Password","length","Message","Submit","onClick","preventDefault","auth","createUserWithEmailAndPassword","error","code","BackgroundColorDecoration","color","blur","minHeight","minWidth","height","width","top","left","opacity","right","bottom","styled","h3","div","label","form","button","input","h1","isDefault","setBackgroundColors","signin","signInWithEmailAndPassword","get","colorsData","getUserPreferences","onSubmit","updateLastModified","projectID","fileID","timestamp","Date","now","undefined","updateDatabaseFile","update","lastModified","outlineData","currentFileID","newTitle","setNewTitle","newText","setNewText","text","title","saveCardEdits","updatedCard","createUpdatedCard","newOutlineForDisplay","updateOutlineForDisplay","newOutlineForUpdate","updateOutlineForUpdate","addChangesToState","addChangesToDatabase","String","docID","match","params","index","cardIndex","newCard","itemIndexes","newOutline","setShowEditModal","onEnter","key","Modal","onDismiss","aria-label","isOpen","showEditModal","LabelInputContainer","Title","onKeyDown","autoComplete","defaultValue","style","marginBottom","Text","Cancel","document","getElementById","focus","closeModal","onMouseDown","Save","Header","textarea","Dialog","showDeleteModal","setShowDeleteModal","Delete","outlineNewIndexes","updatedOutline","splice","map","card","removeCardFromOutline","dataIndexArray","i","setItemIndexes","createNewIndexes","sendUpdatedOutlineToDatabase","setTitle","setText","location","setLocation","createNewOutlineCard","checkConditions","addNewIndexesToState","dataObject","updateCopy","getUpdatedOutline","addUpdatedCardsToState","setShowCreateModal","clearState","showCreateModal","Description","LocationContainer","Location","ButtonsComponent","Create","IconComponent","Fill","fill","xmlns","viewBox","children","svg","Toolbar","Home","to","d","ToolbarRightContainer","CardsPerRowContainer","CardsPerRowLabel","CardsPerRow","onBlur","newCardsPerRow","isNaN","setCardsPerRow","cardsPerRow","savingStatus","Link","CardIcons","IconBackgroundContainer","ariaLabel","idValue","role","click","keyDown","IconTitle","IconBackground","Icon","Card","editCard","setCardIndex","deleteCard","keyBoardDelete","stopPropagation","nativeEvent","stopImmediatePropagation","keyBoardEdit","ref","innerRef","MainContentContainer","IconTitleContainer","IconContainer","Icons","DragIconContainerDesktop","CardNumber","IconsMobile","DragIconContainerMobile","DragIconContainer","p","h2","article","useSortable","attributes","listeners","setNodeRef","transform","transition","CSS","Transform","toString","Number","setSavingStatus","getOutline","result","exists","outline","outlineItems","createOutlineIndexes","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","updateStateAndDatabase","updateToDatabase","window","onbeforeunload","announcements","onDragStart","onDragOver","overId","onDragEnd","onDragCancel","OutlineContainer","CreateNew","Plus","aria-hidden","screenReaderInstructions","collisionDetection","closestCenter","active","over","oldIndex","indexOf","newIndex","arrayMove","itemsCopy","removedItem","item","switchCardPosition","items","strategy","rectSortingStrategy","Grid","itemIndex","span","Autocomplete","AutocompleteContainer","AutocompleteBackground","position","AutocompleteItem","isSelected","display","CenteredItemsContainer","DialogStyles","Character","CharacterStyles","SceneHeading","SceneHeadingStyles","Paragraph","ParagraphStyles","Transition","TransitionStyles","Parenthetical","ParentheticalStyles","Decorations","italics","weight","TIME_OF_DAY","editor","useMemo","withReact","withHistory","createEditor","setTarget","setIndex","setPosition","searchType","setSearchType","searchQuery","setSearchQuery","searchResults","names","characters","times","locations","filter","startsWith","toUpperCase","selection","path","currentText","rect","ReactEditor","toDOMRange","getBoundingClientRect","newPosition","pageYOffset","pageXOffset","renderElement","useCallback","element","insertNodes","obj","Transforms","setNodes","preventStyle","n","isText","split","replaceLocationAddDash","intExt","Range","edges","endPosition","offset","startPosition","range","Editor","insertText","replaceLocation","includes","setNode","newType","isBlock","replaceCharacter","addCharacter","replaceTime","before","unit","heading","addLocation","at","handleReplace","insertBreak","replaceCharacterEnter","replaceTimeEnter","character","pasteText","currentIndex","maxIndex","pasteBlankLine","checkPaste","current","previous","next","pasteCheckHeading","pasteCheckCharacter","trim","pastecheckParenthetical","pasteCheckDialog","insertData","getData","splitText","handleUndo","timesOnChange","newValue","splitValue","timeSearch","pop","join","handleOnChange","currentOffset","anchor","startValue","shift","joinedValue","minOffset","maxOffset","Infinity","splitDash","locationsOnChange","namesOnChange","Leaf","leaf","bold","parent","renderLeaf","setValue","StyledEditable","autoFocus","placeholder","ctrlKey","isHotKey","nodes","checkIsPreventStyle","isPreventSave","setIsPreventSave","incrementIndex","handleDelete","handleEnter","handleTab","shiftKey","checkTransition","checkHeading","nextType","previousText","previousPreviousType","currentTextUppercase","checkDescription","currentType","checkCharacter","mode","checkParenthetical","previousType","checkDialog","Editable","jsPDF","API","events","this","addFileToVFS","addFont","CreatePDFButton","line","newPage","currentPage","selectFont","wordItem","decrementLine","addNewPage","script","addPage","internal","pageSize","insertPageBreak","addParenthetical","splitTextToSize","forEach","dialogLineLengthMax","dialogLineLength","addDialogWords","word","wordIndex","wordLength","getTextWidth","handleDialogPageBreak","descriptionLineLengthMax","descriptionLineLength","addDescriptionWords","addItems","stringWidth","addTransiton","setFont","addHeading","Array","isArray","splitWords","addDialog","addDescription","createPDF","orientation","setFontSize","Object","values","assignWords","save","CreatePDF","RightContainer","scriptID","setScriptID","currentWords","setCurrentWords","setCharacters","charactersObj","setCharactersObj","setLocations","locationsObj","setLocationsObj","lastSaved","setLastSaved","updateSavingStatus","setTimeout","saveScript","clearTimeout","getScript","scriptData","getCharacters","getLocations","getWords","updateLastUpdatedFunction","currentTime","collectionName","updateLastUpdated","scriptObject","updateWordCount","saveScriptToDatabase","newWordCount","change","incrementWordsInDatabase","wordsAdded","wordsToAdd","FieldValue","increment","sortArray","array","sort","a","b","characterCount","charactersObject","nameNoParentheses","removeParenthesesFromCharacter","incrementItem","getCharacterCount","charactersArray","entries","charactersList","itemName","itemCount","characterName","splitHeading","locationsArray","locationsList","status","InterfaceContainer","locationsCopy","characterUppercase","characterNoParentheses","characterCopy","notesData","note","setNote","savedStatus","setSavedStatus","getNotes","autosave","timeout","saveWork","notesInfo","fitTextarea","watch","sendToDatabase","NotesContainer","TextAreaPage","rows","GlobalStyles","createGlobalStyle","page","UL","LI","StyledLink","nav","ul","li","SignIn","SignUp","EditorPreview","StyledSlate","Slate","isArrowVisible","ContentContainer","Span","Subtitle","GetStarted","TryItAbsolute","TryItRelative","Arrow","TryItText","FormattingSection","Preview","playsInline","autoPlay","muted","loop","src","section","video","ColorsSection","ImageColorsContainer","Image","alt","Colors","Color","img","OutliningSection","Footer","setIsLoading","breadcrumbs","dashboard","setName","createProject","createType","createFolder","startFileCreation","getParentId","folderProperties","addFileToPreviews","setIsCreateProjectModal","fileProperties","addDocToStore","addFileToDatabase","fileProps","openFileInNewTab","projectSelectedData","open","generateIDAndCreateFile","charactersLength","charAt","Math","floor","random","generateID","where","empty","createFile","addDocID","isCreateProjectModal","CloseDialog","DocumentTitle","NewDocListItem","Item","onSelect","openModal","docType","Type","MenuItem","setCreateType","List","MenuButton","MenuList","BREADCRUMBS","SORT_METHOD","RESET_DASHBOARD","resetDashboard","breadcrumbChangeRoute","indexToRoute","changeCurrentLayer","breadcrumbsReduced","slice","removeBreadcrumbs","clearFilesFromState","crumb","CrumbContainer","LastCrumb","Crumb","FileIcons","DocIconNameContainer","IconsContainer","hide","DocIcon","Name","docName","ModifierIcon","labelName","TableBodyComponent","TableBody","folderMap","Row","tabIndex","buttonPress","onFocus","selectProject","selectItem","Cell","CellDate","showRenameProject","showDeleteProject","renameFile","renameStoreDocs","setShowRenameModal","0","1","2","3","renamedItems","NewModal","showRenameModal","deleteDoc","docData","deleteFolder","deleteFileAndPreview","delete","deleteFile","deletePreview","deleteDatabaseID","deleteFolderContents","removeDocFromStore","deletedItem","TableHeadComponent","TableHead","ColumnNameButton","sortMethodValue1","sortMap","sortMethodValue2","changeSortOrder","sortType","ArrowIcon","isVisible","rotate","currentProjectID","addSortedFilesToState","files","sortMethodToUse","sortProjectsDateAsc","sortProjectsDateDesc","sortProjectsTypeAsc","sortProjectsTypeDesc","sortProjectsNameAsc","sortProjectsNameDesc","getSortMethod","sortedFiles","openFolder","getFolderContents","unsortedFiles","sendFilesToState","breadcrumb","breadcrumbsCopy","addBreadcrumbToState","activeElement","openFile","fileType","localeCompare","getSortMethodData","sortMethodName","sendSortedFilesToState","addSortMethodToDatabase","dateAsc","dateDesc","nameAsc","nameDesc","typeAsc","typeDesc","Table","Head","RowHeader","setProjectSelectedData","RenameDocModal","projects","getInitialFilesAndFolders","sortMethodType","projectArr","project","sortFiles","Test","Input","CircleProgress","circumference","radius","PI","progress","className","oldRadius","Cicle","dasharray","dashoffset","strokeWidth","r","cx","cy","circle","CirclePlaceholder","setGoal","updateGoal","setShowChangeGoal","sendGoalToDatabase","updateStateGoal","goalsCopy","showChangeGoal","Close","TitleCloseContainer","GoalInput","maxLength","goalIsVisible","Met","Goal","SetGoal","CircleContainer","CirclePlaceholderContainer","link","LiButton","menuItem","highlightParam","hover","NavigationItem","signOut","projectFiles","ListContainer","GoalsContainer","SignoutContainer","GoalCard","task","deleteTask","CardComponent","CardContainer","newTask","setNewTask","getToDoItems","reverse","createTask","toUpload","arrayUnion","sendTaskToDatabase","tasksCopy","unshift","sendTaskToState","Background","AddTask","CreateTaskContainer","TaskInput","CreateTask","toDelete","removeTaskFromState","arrayRemove","removeTaskFromDatabase","setShowMobileNav","Button","MobileNavigation","showMobileNav","NavContainer","MobileHeader","ColorPicker","isPickerVisible","setIsPickerVisible","addEventListener","checkElement","checkElementFocus","removeEventListener","Picker","ColorLabel","PickerLabel","ColorPickerContainer","StyledColorPicker","setColor","HexColorPicker","setBackground","setPrimaryText","setSidebar","setHighlight","setSecondary","handleColorPickerChange","colorType","colorTypeName","changeColor","saveTheme","addTheme","ColorPickers","InputContainer","NameLabel","ButtonInputContainer","ThemeName","SaveTheme","ColorThemeCard","Option","theme","SelectOption","selectTheme","backgroundColor","DeleteOption","deleteTheme","themeColors","colorsArray","colorsObject","updateColorPickers","Cards","getColors","deleteThemeFromState","newThemes","deleteThemeFromDatabase","reversedThemes","themesCopy","themeIndex","showProjects","FilesContainer","exact","render","FileContainer","isLoading","unsubscribe","goalListener","checkAuthentication","handleAuthenticatedUser","getGoalData","getUserData","sendPreferencesToState","onAuthStateChanged","createGoalsObject","currentDate","onSnapshot","goalsObject","updateGoalsInState","updateGoalsAfterListen","handleGoalData","resetDailyGoalDatabase","resetDailyGoalState","Signup","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","appReducer","action","actions","docId","dashboardReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","StrictMode"],"mappings":"2OAUIA,G,OAAMC,IAASC,cAPJ,CACbC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,+BAIXC,EAAKR,EAAIS,Y,OCZFC,EAAqB,qBACrBC,EAAY,YACZC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAe,eACfC,EAAwB,wBACxBC,EAA2B,2BAC3BC,EAAa,aACbC,EAA4B,4BAC5BC,EAAY,YACZC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAe,eACfC,EAAS,SACTC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAkB,kBAClBC,EAAmB,mBAczB,SAASC,IACZ,OAAM,SAACC,GACHA,EAAS,CAACC,KAAML,KAIjB,SAASM,EAAMC,GAClB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMN,EAAOS,QAASD,KAIjC,SAASE,EAAMF,GAClB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMP,EAAOU,QAASD,KAIjC,SAASG,EAAOH,GACnB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMR,EAAQW,QAASD,KAIlC,SAASI,EAAYJ,GACxB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMT,EAAcY,QAASD,KAKxC,SAASK,EAAaL,GACzB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMV,EAAea,QAASD,KAIzC,SAASM,EAAeN,GAC3B,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMX,EAAkBc,QAASD,KAI5C,SAASO,EAAaP,GACzB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMZ,EAAgBe,QAASD,KAI1C,SAASQ,EAAaR,GACzB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMb,EAAgBgB,QAASD,KAI1C,SAASS,EAAST,GACrB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMd,EAAWiB,QAASD,KAIrC,SAASU,EAAsBV,GAClC,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMjB,EAA0BoB,QAASD,KAIpD,SAASW,EAAoBX,GAChC,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMlB,EAAuBqB,QAASD,KAIjD,SAASY,EAAwBZ,GACpC,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMf,EAA2BkB,QAASD,KA4BrD,SAASa,EAASb,GACrB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMtB,EAAWyB,QAASD,K,kSCqB7Bc,gBAFS,SAAAC,GAAK,MAAK,KAEnBD,EAvJA,SAACE,GAAW,IAAD,EAEIC,mBAAS,IAFb,mBAEfC,EAFe,KAERC,EAFQ,OAGUF,mBAAS,IAHnB,mBAGfG,EAHe,KAGLC,EAHK,OAIQJ,mBAAS,IAJjB,mBAIfK,EAJe,KAINC,EAJM,KAKhBC,EAAUC,eAChBC,qBAAU,WACNC,MAED,IAEH,IAAMA,EAAe,WACjBX,EAAMnB,SAASM,EAAO,CAClByB,WAAY,QACZC,YAAa,YAuFfC,EAAyB,SAACC,GAC5B,IAAMC,EAASD,EAAeE,KAAKC,KApFX,SAACF,GACzB,OAAO3D,EAAG8D,WAAW,SAASC,IAAIJ,GAAQK,IAAI,CAC1CL,OAAQA,KAmFZM,CAAoBN,GAAQO,MAAK,YA/EL,SAACP,GACtB3D,EAAG8D,WAAW,SAASC,IAAIJ,GAAQK,IAAI,CAC1CG,YAAa,CACTrC,OAAQ,CACJsC,KAAM,UACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,cAIpBC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAmEpBG,CAAwBjB,GAhEC,SAACA,GACvB3D,EAAG8D,WAAW,SACpBC,IAAIJ,GACJG,WAAW,oBACXC,IAAI,gBACJC,IAAI,CACDa,YAEHL,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAyDpBK,CAAyBnB,GAtDN,SAACA,GACjB3D,EAAG8D,WAAW,SACpBC,IAAIJ,GACJG,WAAW,SACXC,IAAI,cACJC,IAAI,CACDe,KAAM,IACNC,aAAc,CACVC,KAAMC,OAASC,OAAO,KACtBC,MAAO,KAGdZ,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MA2CpBY,CAAmB1B,GAxCA,SAACA,GACjB3D,EAAG8D,WAAW,SACpBC,IAAIJ,GACJG,WAAW,SACXC,IAAI,QACJC,IAAI,CACDsB,KAAM,KAETd,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAiCpBc,CAAmB5B,GA9BA,SAACA,GACjB3D,EAAG8D,WAAW,SACpBC,IAAIJ,GACJG,WAAW,iBACXC,IAAI,eACJC,IAAI,CACDwB,SAAU7B,EACV8B,WAAY,aAEfjB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAsBpBiB,CAAmB/B,GAVvBhB,EAAMnB,SAASM,EARG,CACdsC,KAAM,UACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,aAcTpB,EAAQwC,KAAK,oBAerB,OACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,sBACA,gBAACC,GAAD,WACI,eAACC,GAAD,CAAOC,QAAQ,eAAf,mBACA,eAACC,GAAD,CAAOC,GAAG,eAAe1E,KAAK,QAAQ2E,SAAU,SAACC,GAAD,OAAKvD,EAASuD,EAAEC,OAAOC,aAE3E,gBAACR,GAAD,WACI,eAACC,GAAD,CAAOC,QAAQ,kBAAf,sBACA,eAACO,GAAD,CAAUL,GAAG,kBAAkBC,SAAU,SAACC,GAAD,OAAKrD,EAAYqD,EAAEC,OAAOC,QAAQ9E,KAAK,gBAEnFwB,EAAQwD,OAAS,GACd,eAACC,GAAD,UAAUzD,IAEd,eAAC0D,GAAD,CAAQC,QA1BL,SAACP,GACZA,EAAEQ,iBACFpH,IAASqH,OAAOC,+BAA+BlE,EAAOE,GACrDmB,MAAK,SAACR,GACHD,EAAuBC,MAE1Bc,OAAM,SAACwC,GACJ,MAAgB,uBAAbA,EAAMC,KAAoC/D,EAAW,iBACxC,uBAAb8D,EAAMC,KAAoC/D,EAAW,iDAAxD,MAkBI,+BAEJ,eAACgE,GAAD,CAA2BC,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOC,IAAI,IAAIC,KAAK,IAAKC,QAAQ,MAC/I,eAACT,GAAD,CAA2BC,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOC,IAAI,MAAMG,MAAM,IAAID,QAAQ,OACjJ,eAACT,GAAD,CAA2BC,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOK,OAAO,KAAKH,KAAK,MAAMC,QAAQ,aAS1JjB,GAAUoB,IAAOC,GAAV,6FAMPhC,GAAsB+B,IAAOE,IAAV,8FAMnBhC,GAAQ8B,IAAOG,MAAV,qDAILpC,GAAOiC,IAAOI,KAAV,4XAiBJvB,GAASmB,IAAOK,OAAV,iQAaNvC,GAAYkC,IAAOE,IAAV,iHAOT9B,GAAQ4B,IAAOM,MAAV,mHAOL5B,GAAWsB,IAAOM,MAAV,mHAORlB,GAA4BY,IAAOE,IAAV,ySACjB,SAAArF,GAAK,OAAEA,EAAM4E,UACd,SAAA5E,GAAK,OAAEA,EAAM6E,SACR,SAAA7E,GAAK,OAAEA,EAAM0E,aACd,SAAA1E,GAAK,OAAEA,EAAM2E,YAEN,SAAA3E,GAAK,OAAEA,EAAMwE,SAClB,SAAAxE,GAAK,OAAEA,EAAMyE,QACjB,SAAAzE,GAAK,OAAEA,EAAMgF,WAEjB,SAAAhF,GAAK,OAAEA,EAAM8E,OACZ,SAAA9E,GAAK,OAAEA,EAAM+E,QACX,SAAA/E,GAAK,OAAEA,EAAMkF,UACd,SAAAlF,GAAK,OAAEA,EAAMiF,SAGpB9B,GAAOgC,IAAOO,GAAV,qGAMJxD,GAAS,CACX,CAAC/C,OAAQ,CACLwG,WAAW,EACXlE,KAAM,UACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,YAEb,CAACzC,OAAQ,CACLwG,WAAW,EACXlE,KAAM,UACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,YAEb,CAACzC,OAAQ,CACLwG,WAAW,EACXlE,KAAM,UACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,YAEb,CAACzC,OAAQ,CACLwG,WAAW,EACXlE,KAAM,SACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,YAEb,CAACzC,OAAQ,CACLwG,WAAW,EACXlE,KAAM,SACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,YAEb,CAACzC,OAAQ,CACLwG,WAAW,EACXlE,KAAM,SACNb,WAAY,UACZc,UAAW,UACXb,YAAa,UACbc,UAAW,UACXC,QAAS,aChOF9B,gBAFS,SAAAC,GAAK,MAAK,KAEnBD,EAxEA,SAACE,GAEZ,IAAMQ,EAAUC,eAChBC,qBAAU,WACNkF,MAED,IAEH,IAAMA,EAAsB,WACxB5F,EAAMnB,SAASM,EAAO,CAClByB,WAAY,QACZC,YAAa,YAXC,EAeIZ,mBAAS,IAfb,mBAefC,EAfe,KAeRC,EAfQ,OAgBUF,mBAAS,IAhBnB,mBAgBfG,EAhBe,KAgBLC,EAhBK,OAiBQJ,mBAAS,IAjBjB,mBAiBfK,EAjBe,KAiBNC,EAjBM,KAgChBsF,EAAS,SAACnC,GACZA,EAAEQ,iBACFpH,IAASqH,OAAO2B,2BAA2B5F,EAAOE,GACjDmB,MAAK,SAACR,GACH,IAAMC,EAASD,EAAeE,KAAKC,IACnClB,EAAMnB,SAASgB,EAAS,CAAEmB,YAlBP,SAACA,GACxB3D,EAAG8D,WAAW,SACbC,IAAIJ,GACJ+E,MACAxE,MAAK,SAAAvC,GACF,IACMgH,EADchH,EAAKA,OAAOwC,YACDrC,OAC/Ba,EAAMnB,SAASM,EAAO6G,IACtBxF,EAAQwC,KAAK,oBAEhBnB,OAAM,SAACwC,GAAD,OAAWtC,QAAQC,IAAIqC,MAS1B4B,CAAmBjF,MAEtBa,OAAM,SAACwC,GACJ9D,EAAW,6BACXwB,QAAQC,IAAIqC,OAIpB,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,CAAM6B,SAAUL,EAAhB,UACI,eAAC,GAAD,2BACA,gBAAC,GAAD,WACI,eAAC,GAAD,CAAOvC,QAAQ,eAAf,mBACA,eAAC,GAAD,CAAOxE,KAAK,QAAQ0E,GAAG,eAAeC,SAAU,SAACC,GAAD,OAAKvD,EAASuD,EAAEC,OAAOC,aAE3E,gBAAC,GAAD,WACI,eAAC,GAAD,CAAON,QAAQ,kBAAf,sBACA,eAAC,GAAD,CAAUE,GAAG,kBAAkB1E,KAAK,WAAW2E,SAAU,SAACC,GAAD,OAAKrD,EAAYqD,EAAEC,OAAOC,aAEtFtD,EAAQwD,OAAS,GACd,eAAC,GAAD,UAAUxD,IAEd,eAAC,GAAD,CAAQ2D,QAAS4B,EAAjB,wBAEJ,eAAC,GAAD,CAA2BrB,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOC,IAAI,IAAIC,KAAK,IAAKC,QAAQ,OAC/I,eAAC,GAAD,CAA2BR,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOC,IAAI,MAAMG,MAAM,IAAID,QAAQ,OACjJ,eAAC,GAAD,CAA2BR,MAAM,UAAUC,KAAK,OAAOC,UAAU,QAAQC,SAAS,QAAQC,OAAO,OAAOC,MAAM,OAAOK,OAAO,KAAKH,KAAK,MAAMC,QAAQ,aAS1JjB,GAAUoB,IAAOC,GAAV,yEAKPhC,GAAsB+B,IAAOE,IAAV,gGAMnBhC,GAAQ8B,IAAOG,MAAV,uDAILpC,GAAOiC,IAAOI,KAAV,4XAiBJvB,GAASmB,IAAOK,OAAV,uOAYNvC,GAAYkC,IAAOE,IAAV,iHAOT9B,GAAQ4B,IAAOM,MAAV,mHAOL5B,GAAWsB,IAAOM,MAAV,mHAORlB,GAA4BY,IAAOE,IAAV,ySACjB,SAAArF,GAAK,OAAEA,EAAM4E,UACd,SAAA5E,GAAK,OAAEA,EAAM6E,SACR,SAAA7E,GAAK,OAAEA,EAAM0E,aACd,SAAA1E,GAAK,OAAEA,EAAM2E,YAEN,SAAA3E,GAAK,OAAEA,EAAMwE,SAClB,SAAAxE,GAAK,OAAEA,EAAMyE,QACjB,SAAAzE,GAAK,OAAEA,EAAMgF,WAEjB,SAAAhF,GAAK,OAAEA,EAAM8E,OACZ,SAAA9E,GAAK,OAAEA,EAAM+E,QACX,SAAA/E,GAAK,OAAEA,EAAMkF,UACd,SAAAlF,GAAK,OAAEA,EAAMiF,SAGpB9B,GAAOgC,IAAOO,GAAV,qG,SCvJGS,GAAqB,SAACnF,EAAQoF,EAAWC,GAClD,IAAMC,EAAYC,KAAKC,MAEvB,QADeC,IAAZL,GAAuBM,GAAmBN,EAAWpF,EAAQsF,GAC7DD,EAAQ,OAAOK,GAAmBL,EAAQrF,EAAQsF,IAGnDI,GAAqB,SAAClD,EAAIxC,EAAQsF,GACpCjJ,EAAG8D,WAAW,SACbC,IAAIJ,GACJG,WAAW,iBACXC,IAAIoC,GACJmD,OAAO,CACJC,aAAcN,IAEjBzE,OAAM,SAACC,GAAD,OAAQC,QAAQC,IAAIF,O,SCsFhBhC,I,MAAAA,aARS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBgH,YAAa9G,EAAMlD,IAAIgK,YACvBC,cAAe/G,EAAMlD,IAAIiK,cACzBnH,oBAAqBI,EAAMlD,IAAI8C,oBAC/BD,sBAAuBK,EAAMlD,IAAI6C,yBAGtBI,EAvGO,SAACE,GAAW,IAAD,EACGC,mBAAS,IADZ,mBACtB8G,EADsB,KACZC,EADY,OAEC/G,mBAAS,IAFV,mBAEtBgH,EAFsB,KAEbC,EAFa,KAI7BxG,qBAAU,WACNwG,EAAWlH,EAAMmH,MACjBH,EAAYhH,EAAMoH,SACnB,CAACpH,EAAMoH,MAAOpH,EAAMmH,OAEvB,IAAME,EAAgB,WAClBtF,QAAQC,IAAI+E,EAAUE,GACtB,IAAMK,EAAcC,IACdC,EAAuBC,EAAwBH,GAC/CI,EAAsBC,EAAuBL,GACnDM,EAAkBF,EAAqBF,GACvCK,EAAqBH,GACrBvB,GAAmBnG,EAAMH,SAASmB,OAAQ8G,OAAO9H,EAAM6G,YAAYkB,OAAQ/H,EAAMgI,MAAMC,OAAO5B,SAG5FkB,EAAoB,WACtB,MAAO,CACHW,MAAOlI,EAAMmI,UACbf,MAAOL,EACPI,KAAMF,IAIRQ,EAA0B,SAACW,GAC7B,IAAMZ,EAAoB,aAAOxH,EAAML,qBAEvC,OADA6H,EAAqBxH,EAAMqI,YAAYrI,EAAMmI,YAAcC,EACpDZ,GAGLG,EAAyB,SAACS,GAC5BrG,QAAQC,IAAIhC,EAAMN,uBAClB,IAAM4I,EAAU,aAAOtI,EAAMN,uBAE7B,OADA4I,EAAWtI,EAAMmI,WAAaC,EACvBE,GAGLV,EAAoB,SAACF,EAAqBF,GAC5CxH,EAAMnB,SAASc,EAAoB,aAAI6H,KACvCxH,EAAMnB,SAASa,EAAsBgI,KAGnCG,EAAuB,SAACS,GAC1BjL,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBM,OAAO,CACJQ,KAAMmB,IAET/G,MAAK,kBAAKvB,EAAMuI,kBAAiB,MACjC1G,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAWxB0G,EAAU,SAAC9E,GACF,UAARA,EAAE+E,MACD/E,EAAEQ,iBACFmD,MAIR,OACI,gBAACqB,GAAD,CAAOC,UAAW,kBAAI3I,EAAMuI,kBAAiB,IAAQK,aAAW,YAAYC,OAAQ7I,EAAM8I,cAA1F,UACI,eAAC,GAAD,wBACA,iCACI,gBAACC,GAAD,WACI,eAAC,GAAD,CAAOzF,QAAQ,wBAAf,oBACA,eAAC0F,GAAD,CAAOC,UAAWT,EAASU,aAAa,MAAMzF,SAAU,SAACC,GAAD,OAAKsD,EAAYtD,EAAEC,OAAOC,QAAQJ,GAAG,wBAAwB2F,aAAcnJ,EAAMoH,WAE7I,sBAAKgC,MAAO,CAACC,aAAc,UAC3B,gBAACN,GAAD,WACI,eAAC,GAAD,CAAOzF,QAAQ,uBAAf,sBACA,eAACgG,GAAD,CAAML,UAAWT,EAAS/E,SAAU,SAACC,GAAD,OAAKwD,EAAWxD,EAAEC,OAAOC,QAAQJ,GAAG,uBAAuB2F,aAAcnJ,EAAMmH,aAG3H,iCACI,eAACoC,GAAD,CAAQN,UAAW,SAACvF,GAAD,OA9BZ,SAACA,GACJ,UAATA,EAAEY,MAA2B,UAATZ,EAAEY,MAA2B,WAATZ,EAAEY,OACzCZ,EAAEQ,iBACFlE,EAAMuI,kBAAiB,GACvBiB,SAASC,eAAT,2BAA4CzJ,EAAMmI,YAAauB,SA0BlCC,CAAWjG,IAAIkG,YAAa,kBAAI5J,EAAMuI,kBAAiB,IAAhF,oBACA,eAACsB,GAAD,CAAM5F,QAASoD,EAAf,4BAiBV0B,GAAsB5D,IAAOE,IAAV,+EAKnBhC,GAAQ8B,IAAOG,MAAV,wDAILwE,GAAS3E,IAAOO,GAAV,uDAIN6D,GAASpE,IAAOK,OAAV,6FAONqE,GAAO1E,IAAOK,OAAV,+JAQJwD,GAAQ7D,IAAOM,MAAV,qRAYL6D,GAAOnE,IAAO4E,SAAV,kRAYJrB,GAAQvD,YAAO6E,KAAP7E,CAAH,ygBCxFIrF,gBARS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBgH,YAAa9G,EAAMlD,IAAIgK,YACvBC,cAAe/G,EAAMlD,IAAIiK,cACzBpH,sBAAuBK,EAAMlD,IAAI6C,sBACjCC,oBAAqBI,EAAMlD,IAAI8C,uBAGpBG,EAtES,SAACE,GAiDrB,OACI,gBAAC,GAAD,CAAO4I,aAAW,6CAA6CC,OAAQ7I,EAAMiK,gBAAiBtB,UAAW,kBAAI3I,EAAMkK,oBAAmB,IAAtI,UACI,eAAC,GAAD,0BACA,4EACA,iCACI,eAAC,GAAD,CAAQjB,UAbD,SAACvF,GACJ,UAATA,EAAEY,MAA2B,UAATZ,EAAEY,MAA2B,WAATZ,EAAEY,OACzCZ,EAAEQ,iBACFlE,EAAMkK,oBAAmB,GACzBV,SAASC,eAAT,6BAA8CzJ,EAAMmI,YAAauB,UAS9BE,YAAa,kBAAI5J,EAAMkK,oBAAmB,IAAzE,oBACA,eAACC,GAAD,CAAQlG,QAtBD,WACf,IAxByBmG,EAwBnBC,EAhCoB,WAC1B,IAAI/B,EAAU,aAAOtI,EAAMN,uBAE3B,OADA4I,EAAWgC,OAAOtK,EAAMmI,UAAW,GAC5BG,EAAWiC,KAAI,SAACC,EAAMtC,GACzB,OAAO,2BAAIsC,GAAX,IAAiBtC,aA4BEuC,IAnBF,WAErB,IADA,IAAMC,EAAiB,GACfC,EAAI,EAAGA,EAAE3K,EAAMqI,YAAYvE,OAAS,EAAG6G,IAC3CD,EAAe1H,KAAK8E,OAAO6C,IAE/B3K,EAAM4K,eAAeF,GAerBG,GAzByBT,EA0BLC,EAzBpBrK,EAAMnB,SAASa,EAAsB0K,IACrCpK,EAAMnB,SAASc,EAAoByK,IAWF,SAACA,GAClC/M,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBM,OAAO,CAAEQ,KAAMiD,IACf7I,MAAK,kBAAKvB,EAAMkK,oBAAmB,MACnCrI,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAO1BgJ,CAA6BT,GAC7BlE,GAAmBnG,EAAMH,SAASmB,OAAQ8G,OAAO9H,EAAM6G,YAAYkB,OAAQ/H,EAAMgI,MAAMC,OAAO5B,SAiBtF,6BAiBVyD,GAAS3E,IAAOO,GAAV,uDAIN6D,GAASpE,IAAOK,OAAV,6FAON2E,GAAShF,IAAOK,OAAV,mJASNkD,GAAQvD,YAAO6E,KAAP7E,CAAH,ycCcIrF,gBAPS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBgH,YAAa9G,EAAMlD,IAAIgK,YACvBnH,sBAAuBK,EAAMlD,IAAI6C,sBACjCC,oBAAqBI,EAAMlD,IAAI8C,uBAGpBG,EAzGS,SAACE,GAAW,IAAD,EACLC,mBAAS,IADJ,mBACxBmH,EADwB,KACjB2D,EADiB,OAEP9K,mBAAS,IAFF,mBAExBkH,EAFwB,KAElB6D,EAFkB,OAGC/K,mBAAS,MAHV,mBAGxBgL,EAHwB,KAGdC,EAHc,KAK/BxK,qBAAU,WAAM,IAAD,EACXwK,GAAiB,OAALlL,QAAK,IAALA,GAAA,UAAAA,EAAON,6BAAP,eAA8BoE,QAAS,KAEpD,CAAC9D,EAAMN,wBAEV,IAoCMyL,EAAuB,WACzB,GAAIC,IAAJ,EATyB,WAEzB,IADA,IAAMV,EAAiB,GACfC,EAAI,EAAGA,EAAE3K,EAAMqI,YAAYvE,OAAS,EAAG6G,IAC3CD,EAAe1H,KAAK8E,OAAO6C,IAE/B3K,EAAM4K,eAAeF,GAKrBW,GACA,IA1BuBjB,EA0BjBC,EAvCgB,WACtB,IAAMiB,EAAa,CACflE,QACAD,OACAe,MAAO+C,GAELM,EAAU,aAAOvL,EAAMN,uBAE7B,OADA6L,EAAWjB,OAAOW,EAAW,EAAG,EAAGK,GAC5BC,EAAWhB,KAAI,SAACC,EAAMtC,GACzB,OAAO,2BAAIsC,GAAX,IAAiBtC,aA8BEsD,IA1BApB,EA2BLC,EA1BXhN,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBM,OAAO,CACJQ,KAAMiD,KAsBT7I,MAAK,YAlBqB,SAAC6I,GAC5BpK,EAAMnB,SAASc,EAAoByK,IACnCpK,EAAMnB,SAASa,EAAsB0K,IAiBjCqB,CAAuBpB,GACvBrK,EAAM0L,oBAAmB,MAE7BC,IACAxF,GAAmBnG,EAAMH,SAASmB,OAAQ8G,OAAO9H,EAAM6G,YAAYkB,OAAQ/H,EAAMgI,MAAMC,OAAO5B,UAG5F+E,EAAkB,WACpB,OAAoB,IAAjBhE,EAAMtD,SACU,IAAhBqD,EAAKrD,UACLmH,EAAW,GAAKA,EAAWjL,EAAMN,sBAAsBoE,OAAS,KAIjE6H,EAAa,WACfX,EAAQ,IACRD,EAAS,IACTG,EAAY,OAGV1C,EAAU,SAAC9E,GACF,UAARA,EAAE+E,MACD/E,EAAEQ,iBACFiH,MAIR,OACI,gBAAC,GAAD,CAAOvC,aAAW,cAAcC,OAAQ7I,EAAM4L,gBAAiBjD,UAAW,kBAAI3I,EAAM0L,oBAAmB,IAAvG,UACI,eAAC,GAAD,8BACA,eAAC,GAAD,CAAOpI,QAAQ,oBAAf,mBACA,eAAC,GAAD,CAAO4F,aAAa,MAAM1F,GAAG,oBAAoByF,UAAWT,EAAS/E,SAAU,SAACC,GAAD,OAAKqH,EAASrH,EAAEC,OAAOC,UACtG,eAAC,GAAD,CAAON,QAAQ,0BAAf,yBACA,eAACuI,GAAD,CAAarI,GAAG,0BAA0ByF,UAAWT,EAAS/E,SAAU,SAACC,GAAD,OAAKsH,EAAQtH,EAAEC,OAAOC,UAC1F,eAAC,GAAD,CAAOgF,aAAA,6BAAkC5I,EAAMN,sBAAsBoE,OAAS,EAAvE,eAA+E9D,EAAML,oBAAoBmE,OAAS,GAAMR,QAAQ,uBAAvI,gCACJ,gBAACwI,GAAD,WACI,eAACC,GAAD,CAAUvI,GAAG,uBAAuByF,UAAWT,EAASW,aAAcnJ,EAAMN,sBAAsBoE,OAAS,EAAGL,SAAU,SAACC,GAAD,OAAKwH,EAAYxH,EAAEC,OAAOC,UADtJ,MACoK5D,EAAML,oBAAoBmE,OAAS,KAEvM,gBAACkI,GAAD,WACI,eAAC,GAAD,CAAQ/H,QAAS,kBAAIjE,EAAM0L,oBAAmB,IAA9C,oBACA,eAACO,GAAD,CAAQhI,QAASkH,EAAjB,6BAeVa,GAAmB7G,IAAOE,IAAV,kDAIhByE,GAAS3E,IAAOO,GAAV,iFAKNmG,GAAc1G,IAAO4E,SAAV,mYAiBXf,GAAQ7D,IAAOM,MAAV,+WAgBLqG,GAAoB3G,IAAOE,IAAV,uDAIjB0G,GAAW5G,IAAOM,MAAV,gPAURpC,GAAQ8B,IAAOG,MAAV,wDAILiE,GAASpE,IAAOK,OAAV,uFAMNyG,GAAS9G,IAAOK,OAAV,+JAQNkD,GAAQvD,YAAO6E,KAAP7E,CAAH,4gBCtLI+G,GANO,SAAClM,GACnB,OACI,eAACmM,GAAD,CAAMC,KAAMpM,EAAMoM,KAAMC,MAAM,6BAA6BxH,MAAM,KAAKD,OAAO,KAAK0H,QAAQ,YAA1F,SAAuGtM,EAAMuM,YAM/GJ,GAAOhH,IAAOqH,IAAV,8D,SC0BKC,GA/BC,SAACzM,GAeb,OACI,gBAAC,GAAD,WACI,eAAC0M,GAAD,CAAM9D,aAAW,qBAAqB+D,GAAG,eAAzC,SACI,eAAC,GAAD,UAAe,uBAAMC,EAAE,qFAE3B,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAAkBzJ,QAAQ,gBAA1B,4BACA,eAAC0J,GAAD,CAAaC,OAtBH,SAACvJ,GACvB,IAAMwJ,EAAiBxJ,EAAEC,OAAOC,MAC7BuJ,MAAMD,IACNA,EAAiB,IAAMA,EAAiB,IAC3ClN,EAAMoN,eAAeF,GACrB7P,EAAG8D,WAAW,SACbC,IAAIpB,EAAMgB,QACVG,WAAW,SACXC,IAAIpB,EAAMqG,QACVM,OAAO,CACJ0G,YAAaH,IAEhBrL,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAU0BqH,aAAcnJ,EAAMqN,YAAa7J,GAAG,qBAE/ExD,EAAMsN,oBAQjBR,GAAuB3H,IAAOE,IAAV,6FAMpBwH,GAAwB1H,IAAOE,IAAV,4EAKrB0H,GAAmB5H,IAAOG,MAAV,uDAIhB0H,GAAc7H,IAAOM,MAAV,iMAQXiH,GAAOvH,YAAOoI,KAAPpI,CAAH,6DAIJlC,GAAYkC,IAAOE,IAAV,6e,kBChDAmI,GAdG,SAACxN,GACf,OACI,gBAACyN,GAAD,CAAyB7E,aAAY5I,EAAM0N,UAAWlK,GAAIxD,EAAM2N,QAASC,KAAK,SAAS3J,QAASjE,EAAM6N,MAAO5E,UAAWjJ,EAAM8N,QAA9H,UACI,eAACC,GAAD,UAAY/N,EAAMyB,OAClB,eAACuM,GAAD,IACA,eAACC,GAAD,UACI,eAAC,GAAD,UACKjO,EAAMuM,iBASrBwB,GAAY5I,IAAOE,IAAV,6YAiBT2I,GAAiB7I,IAAOE,IAAV,gTAgBdoI,GAA0BtI,IAAOK,OAAV,qUAInBwI,GAGAD,GAKAC,GAGAD,IAMJE,GAAO9I,IAAOE,IAAV,0JCIK6I,GAzEF,SAAClO,GAEV,IAAMmO,EAAW,WACbnO,EAAM+K,SAAS/K,EAAMoH,OACrBpH,EAAMgL,QAAQhL,EAAMmH,MACpBnH,EAAMuI,kBAAiB,GACvBvI,EAAMoO,aAAapO,EAAMkI,QAGvBmG,EAAa,WACfrO,EAAMkK,oBAAmB,GACzBlK,EAAMoO,aAAapO,EAAMkI,QAGvBoG,EAAiB,SAAC5K,GACT,UAARA,EAAE+E,KAAuB,UAAR/E,EAAE+E,MAClB4F,IACA3K,EAAE6K,kBACF7K,EAAE8K,YAAYC,2BACd/K,EAAEQ,mBAIJwK,EAAe,SAAChL,GACP,UAARA,EAAE+E,KAAuB,UAAR/E,EAAE+E,MAClB0F,EAASnO,EAAMoH,MAAOpH,EAAMmH,MAC5BzD,EAAE6K,kBACF7K,EAAE8K,YAAYC,2BACd/K,EAAEQ,mBAIV,OACI,gBAAC,GAAD,2BAAelE,GAAf,IAAsB2O,IAAK3O,EAAM4O,SAAjC,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,GAAD,UAAQ9O,EAAMoH,QACd,gBAAC2H,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,GAAD,CAAWrB,QAAO,2BAAsB3N,EAAMkI,OAASzG,KAAK,SAASiM,UAAU,cAAcxF,MAAOlI,EAAMkI,MAAQ2F,MAAOM,EAAUL,QAASY,EAA5I,SACI,uBAAM9B,EAAE,8QAEZ,eAAC,GAAD,CAAWe,QAAO,6BAAwB3N,EAAMkI,OAASzG,KAAK,SAASiM,UAAU,cAAcxF,MAAOlI,EAAMkI,MAAO2F,MAAOQ,EAAYP,QAASQ,EAA/I,SACI,uBAAM1B,EAAE,4UAGhB,eAACqC,GAAD,UACI,eAAC,GAAD,UACI,uBAAMrC,EAAE,uFAGhB,eAACsC,GAAD,CAAYtG,aAAA,eAAoB5I,EAAMkI,MAAQ,GAA9C,SAAoDlI,EAAMkI,MAAQ,UAG1E,eAAC,GAAD,UAAOlI,EAAMmH,UAEjB,gBAACgI,GAAD,WACI,eAAC,GAAD,CAAWxB,QAAO,2BAAsB3N,EAAMkI,OAASzG,KAAK,SAASiM,UAAU,cAAcxF,MAAOlI,EAAMkI,MAAQ2F,MAAOM,EAAUL,QAASY,EAA5I,SACI,uBAAM9B,EAAE,8QAEZ,eAAC,GAAD,CAAWe,QAAO,6BAAwB3N,EAAMkI,OAASzG,KAAK,SAASiM,UAAU,cAAcxF,MAAOlI,EAAMkI,MAAO2F,MAAOQ,EAAYP,QAASQ,EAA/I,SACI,uBAAM1B,EAAE,yUAEZ,eAACwC,GAAD,UACI,eAAC,GAAD,UACI,uBAAMxC,EAAE,+FAU1BiC,GAAuB1J,IAAOE,IAAV,+EAKpBgK,GAAoBlK,IAAOE,IAAV,yTAgBjB4J,GAA2B9J,YAAOkK,GAAPlK,CAAH,6FAMxBiK,GAA0BjK,YAAOkK,GAAPlK,CAAH,sIAQvB+J,GAAa/J,IAAOmK,EAAV,2KAUVN,GAAQ7J,IAAOE,IAAV,iQAYL8J,GAAchK,IAAOE,IAAV,uTAeXyJ,GAAqB3J,IAAOE,IAAV,iHAMlB0J,GAAgB5J,IAAOE,IAAV,qMAMT2J,IAMJhG,GAAQ7D,IAAOO,GAAV,iIAOL4D,GAAOnE,IAAOoK,GAAV,8EAKJtM,GAAYkC,IAAOqK,QAAV,kYAaLR,I,SC1JKlP,gBAJS,SAAAC,GAAK,MAAK,CAChCJ,oBAAqBI,EAAMlD,IAAI8C,uBAGlBG,EAnCM,SAACE,GAAW,IAAD,MAO1ByP,aAAY,CAACjM,GAAIxD,EAAMwD,KALzBkM,EAF4B,EAE5BA,WACAC,EAH4B,EAG5BA,UACAC,EAJ4B,EAI5BA,WACAC,EAL4B,EAK5BA,UACAC,EAN4B,EAM5BA,WAGI1G,EAAQ,CACZyG,UAAWE,KAAIC,UAAUC,SAASJ,GAClCC,cAGF,OACE,0DAAKnB,IAAKiB,EAAYxG,MAAOA,GAAWsG,GAAgBC,GAAxD,cACQ,OAAL3P,QAAK,IAALA,OAAA,EAAAA,EAAOmH,OACN,eAAC,GAAD,CACEe,MAAOlI,EAAMkI,MACbkG,aAAcpO,EAAMoO,aACpBrD,SAAU/K,EAAM+K,SAAUC,QAAShL,EAAMgL,QACzCzC,iBAAkBvI,EAAMuI,iBACxB2B,mBAAoBlK,EAAMkK,mBAC1B/C,MAAW,OAALnH,QAAK,IAALA,GAAA,UAAAA,EAAOmH,KAAK+I,OAAOlQ,EAAMwD,YAAzB,eAA+B2D,OAAQ,GAC7CC,OAAY,OAALpH,QAAK,IAALA,GAAA,UAAAA,EAAOmH,KAAK+I,OAAOlQ,EAAMwD,YAAzB,eAA+B4D,QAAS,WCqJ1CtH,gBARS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBgH,YAAa9G,EAAMlD,IAAIgK,YACvBC,cAAe/G,EAAMlD,IAAIiK,cACzBpH,sBAAuBK,EAAMlD,IAAI6C,sBACjCC,oBAAqBI,EAAMlD,IAAI8C,uBAGpBG,EAvJC,SAACE,GAAW,IAAD,IACmBC,oBAAS,GAD5B,mBAChB6I,EADgB,KACDP,EADC,OAEuBtI,oBAAS,GAFhC,mBAEhBgK,EAFgB,KAECC,EAFD,OAGuBjK,oBAAS,GAHhC,mBAGhB2L,EAHgB,KAGCF,EAHD,OAIGzL,mBAAS,IAJZ,mBAIhBmH,EAJgB,KAIT2D,EAJS,OAKC9K,mBAAS,IALV,mBAKhBkH,EALgB,KAKV6D,EALU,OAMW/K,mBAAS,MANpB,mBAMhBkI,EANgB,KAMLiG,EANK,OAOenO,mBAAS,IAPxB,mBAOhBoI,EAPgB,KAOHuC,EAPG,OAQiB3K,mBAAS,qBAR1B,mBAQhBqN,EARgB,KAQF6C,EARE,OASelQ,mBAAS,GATxB,mBAShBoN,EATgB,KASHD,EATG,KAWvB1M,qBAAU,WACN0P,MAED,CAACpQ,EAAMgI,QAEV,IAgBMoI,EAAa,WAfR/S,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBN,MAaAxE,MAAK,SAAC8O,GACH,GAAIA,EAAOC,OAAX,CACA,IZwDgBtR,EYxDVuR,EAAUF,EAAOrR,OACvBgB,EAAMnB,UZuDUG,EYvDWuR,EZwD7B,SAAC1R,GACHA,EAAS,CAACC,KAAMnB,EAAcsB,QAASD,OYxDnCwK,SAASpC,MAAQmJ,EAAQ9O,KACzB2L,EAAemD,EAAQlD,aACvB,IAAMmD,EAAeD,EAAQpJ,KAC7BnH,EAAMnB,SAASc,EAAoB6Q,IACnCxQ,EAAMnB,SAASa,EAAsB8Q,IAlBhB,SAACA,GAE1B,IADA,IAAM9F,EAAiB,GACfC,EAAI,EAAGA,EAAE6F,EAAa1M,OAAQ6G,IAClCD,EAAe1H,KAAK8E,OAAO6C,IAE/BC,EAAeF,GAcX+F,CAAqBD,QAgBvBE,EAAUC,aACZC,aAAUC,MACVD,aAAUE,KAAgB,CACtBC,iBAAkBC,QAapBC,EAAyB,SAAC5G,GAC5BrK,EAAMnB,SAASa,EAAsB2K,IA7BhB,SAACA,GACtBhN,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBM,OAAO,CACJQ,KAAMkD,IAET9I,MAAK,kBAAK4O,EAAgB,wBAC3BhK,GAAmBnG,EAAMH,SAASmB,OAAQ8G,OAAO9H,EAAM6G,YAAYkB,OAAQ/H,EAAMgI,MAAMC,OAAO5B,QAqB9F6K,CAAiB7G,IAcrB8G,OAAOC,eAAiB,WACpB,GAAkB,cAAf9D,EACC,MAAO,UAIf,IAMM+D,EAAgB,CAClBC,YADkB,SACN9N,GACR,MAAM,uBAAN,OAA8B0M,OAAO1M,EAAK,GAA1C,aAAiDxD,EAAML,oBAAoB6D,GAAI4D,QAEnFmK,WAJkB,SAIP/N,EAAIgO,GACX,MAAM,qCAAN,OAA4CtB,OAAOsB,GAAU,EAA7D,eAAqExR,EAAML,oBAAoBmE,SAEnG2N,UAPkB,SAORjO,EAAIgO,GACV,MAAM,GAAN,OAAUxR,EAAML,oBAAoB6D,GAApC,yCAAwE0M,OAAOsB,GAAU,EAAzF,eAAiGxR,EAAML,oBAAoBmE,SAE/H4N,aAVkB,WAWd,MAAM,uBAId,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAASrL,OAAQrG,EAAMgI,MAAMC,OAAO5B,OAAQrF,OAAQhB,EAAMH,SAASmB,OAAQoM,eAAgBA,EAAgBC,YAAaA,EAAaC,aAAcA,IACnJ,eAAC,GAAD,CAAiB1B,gBAAiBA,EAAiBvD,YAAaA,EAAcuC,eAAgBA,EAAiB5C,MAAOhI,EAAMgI,MAAO0D,mBAAoBA,EAAoB0E,WAAYA,IACvL,gBAACuB,GAAD,WACI,eAAC,GAAD,iBAAQ3R,QAAR,IAAQA,GAAR,UAAQA,EAAO6G,mBAAf,aAAQ,EAAoBpF,OAC5B,gBAACmQ,GAAD,CAAW3N,QAAS,kBAAIyH,GAAmB,IAA3C,UAAkD,eAACmG,GAAD,CAAMC,eAAA,EAAN,eAAlD,sBACA,eAAC,KAAD,CAAYC,yBA5BM,sMA4B8CV,cAAeA,EAAeX,QAASA,EAASsB,mBAAoBC,KAAeR,UA7CzI,SAAC/N,GAAO,IACnBwO,EAAgBxO,EAAhBwO,OAAQC,EAAQzO,EAARyO,KACf,GAAGD,EAAO1O,KAAO2O,EAAK3O,GAAtB,CACA2M,EAAgB,aAChB,IAAMiC,EAAW/J,EAAYgK,QAAQH,EAAO1O,IACtC8O,EAAWjK,EAAYgK,QAAQF,EAAK3O,IAC1CoH,EAAe2H,aAAUlK,EAAa+J,EAAUE,IAChD,IAAMjI,EArBiB,SAAC+H,EAAUE,GAClC,IAAIE,EAAS,aAAOxS,EAAMN,uBACpB+S,EAAcD,EAAUlI,OAAO8H,EAAU,GAE/C,OADAI,EAAUlI,OAAV,MAAAkI,EAAS,CAAQF,EAAU,GAAlB,oBAAwBG,KAC1BD,EAAUjI,KAAI,SAACmI,EAAMxK,GACxB,OAAO,2BAAIwK,GAAX,IAAiBxK,aAgBEyK,CAAmBP,EAAUE,GACpDrB,EAAuB5G,KAqCf,SACA,eAAC,KAAD,CAAiBuI,MAAOvK,EAAawK,SAAUC,KAA/C,SACI,eAACC,GAAD,CAAM1F,YAAaA,EAAnB,SACKhF,EAAYkC,KAAI,SAACyI,EAAW9K,GACzB,OACI,eAAC,GAAD,CAAcA,MAAOA,EAAOkG,aAAcA,EAAcrD,SAAUA,EAAUC,QAASA,EAASzC,iBAAkBA,EAAkB2B,mBAAoBA,EAAoC1G,GAAIwP,EAAW7L,KAAMnH,EAAML,qBAAtCqT,eAOnM,eAAC,GAAD,CAAelK,cAAeA,EAAeT,YAAaA,EAAaL,MAAOhI,EAAMgI,MAAOG,UAAWA,EAAWI,iBAAkBA,EAAkBnB,MAAOA,EAAOD,KAAMA,IACzK,eAAC,GAAD,CAAiB8C,gBAAiBA,EAAiBW,eAAgBA,EAAgBvC,YAAaA,EAAaL,MAAOhI,EAAMgI,MAAOG,UAAWA,EAAW+B,mBAAoBA,UAejL2H,GAAO1M,IAAO8N,KAAV,oIAOJhQ,GAAYkC,IAAOE,IAAV,gDAITuM,GAAYzM,IAAOK,OAAV,mRAYTmM,GAAmBxM,IAAOE,IAAV,iEAIhB2D,GAAQ7D,IAAOO,GAAV,gFAKLqN,GAAO5N,IAAOE,IAAV,4OAE0B,SAAArF,GAAK,OAAEA,EAAMqN,e,0BCxMlC6F,GAZM,SAAClT,GAClB,OACI,eAACmT,GAAD,UACI,eAACC,GAAD,CAAwBC,SAAUrT,EAAMqT,SAAxC,SACKrT,EAAM4S,MAAMrI,KAAI,SAACmI,EAAMxK,GACpB,OAAO,eAACoL,GAAD,CAAkBC,WAAYrL,IAAQlI,EAAMkI,MAA5C,SAA+DwK,GAAPA,WAS7ES,GAAwBhO,IAAOE,IAAV,mFAIrB+N,GAAyBjO,IAAOE,IAAV,kSAEjB,SAAArF,GAAK,OAAEA,EAAMqT,SAASvO,OACrB,SAAA9E,GAAK,OAAEA,EAAMqT,SAAStO,QACnB,SAAA/E,GAAK,OAAEA,EAAMqT,SAASG,WAQ/BF,GAAmBnO,IAAO8N,KAAV,iTAKE,SAAAjT,GAAK,OAAEA,EAAMuT,WAAa,qBAAuB,iB,oBCjC5DvJ,GAAS,SAAChK,GACnB,OACI,eAACyT,GAAD,UACI,eAACC,GAAD,2BAAkB1T,EAAM0P,YAAxB,aAAqC1P,EAAMuM,eAK1CoH,GAAY,SAAC3T,GACtB,OACI,eAACyT,GAAD,UACI,eAACG,GAAD,2BAAqB5T,EAAM0P,YAA3B,aAAwC1P,EAAMuM,eAK7CsH,GAAe,SAAC7T,GACzB,OAAO,eAAC8T,GAAD,2BAAwB9T,EAAM0P,YAA9B,aAA2C1P,EAAMuM,aAG/CwH,GAAY,SAAC/T,GACtB,OAAO,eAACgU,GAAD,2BAAqBhU,EAAM0P,YAA3B,aAAwC1P,EAAMuM,aAG5C0H,GAAa,SAACjU,GACvB,OAAO,eAACkU,GAAD,2BAAsBlU,EAAM0P,YAA5B,aAAyC1P,EAAMuM,aAG7C4H,GAAgB,SAACnU,GAC1B,OACI,eAACyT,GAAD,UACI,eAACW,GAAD,2BAAyBpU,EAAM0P,YAA/B,aAA4C1P,EAAMuM,eAOjD2H,GAAmB/O,IAAOmK,EAAV,+QAWhBwE,GAAqB3O,IAAOmK,EAAV,2NASlB0E,GAAkB7O,IAAOmK,EAAV,oQAWfmE,GAAyBtO,IAAOE,IAAV,+HAOtBuO,GAAkBzO,IAAOmK,EAAV,0MAQf8E,GAAsBjP,IAAOmK,EAAV,gTAcnBoE,GAAevO,IAAOE,IAAV,uWAiBZpC,GAAYkC,IAAOE,IAAV,gXAeTgP,GAAclP,IAAO8N,KAAV,2EACN,SAAAjT,GAAK,OAAEA,EAAMsU,WACZ,SAAAtU,GAAK,OAAEA,EAAMuU,UAInBC,GAAc,CACvB,OACA,UACA,MACA,YACA,OACA,QACA,WCqjBW1U,gBAJS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,YAGTC,EAnrBS,SAACE,GAAW,IAAD,QACzByU,EAASC,mBAAQ,kBAAKC,aAAUC,aAAYC,mBAAkB,IADrC,EAEH5U,qBAFG,mBAExB0D,EAFwB,KAEhBmR,EAFgB,OAGL7U,mBAAS,GAHJ,mBAGxBiI,EAHwB,KAGjB6M,EAHiB,OAIC9U,mBAAS,CAAC6E,IAAK,UAAWC,KAAM,UAAWyO,QAAS,SAJrD,mBAIxBH,EAJwB,KAId2B,EAJc,OAKK/U,mBAAS,IALd,mBAKxBgV,EALwB,KAKZC,EALY,OAMOjV,mBAAS,IANhB,mBAMxBkV,EANwB,KAMXC,EANW,KAczBC,EAAa,UAND,CACdC,MAAOtV,EAAMuV,WACbC,MAAOhB,GACPiB,UAAWzV,EAAMyV,WAGWR,UAAb,aAAG,EAAuBS,QAAO,SAAAhD,GAChD,OAAOA,EAAKiD,WAAWR,EAAYS,gBAAkBlD,IAAOyC,EAAYS,iBAG5ElV,qBAAU,WACN,GAAG+T,EAAOoB,UAAW,CAAC,IAAD,IACTC,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACFC,EAAW,UAAG/V,EAAM4D,MAAMkS,EAAK,WAApB,iBAAG,EAAsBvJ,SAAS,UAAlC,aAAG,EAAmCpF,KACvD,GAAIxD,GAAUsR,EAAWnR,OAAS,IAAkB,OAAbuR,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,IAAgB,OAAXiS,QAAW,IAAXA,OAAA,EAAAA,EAAajS,QAAS,EAAG,CACzF,IACMkS,EADWC,KAAYC,WAAWzB,EAAQ9Q,GAC1BwS,wBAChBC,EAAc,CAChBtR,IAAI,GAAD,OAAKkR,EAAKlR,IAAMqM,OAAOkF,YAAc,GAArC,MACH7C,QAAS,QAGT4C,EAAW,KAAX,UAAyBJ,EAAKjR,KAAOoM,OAAOmF,YAAc,GAA1D,MAEY,UAAbrB,IACCmB,EAAW,KAAX,UAAyBJ,EAAKjR,KAAOoM,OAAOmF,YAA5C,OAEJtB,EAAYoB,QAEZpB,EAAY,CACRlQ,IAAK,UACLC,KAAM,UACNyO,QAAS,YAKtB,QAAC6B,QAAD,IAACA,OAAD,EAACA,EAAevR,OAAQoE,EAAO+M,EAAYR,EAAQU,EAAaxR,IAEnE,IAAM4S,EAAgBC,uBAAY,SAACxW,GAAU,IACjClB,EAASkB,EAAMyW,QAAf3X,KACR,MAAU,cAAPA,EAA2B,eAAC,GAAD,eAAekB,IACnC,WAAPlB,EAAwB,eAAC,GAAD,eAAYkB,IAC7B,YAAPlB,EAAyB,eAAC,GAAD,eAAkBkB,IACpC,eAAPlB,EAA4B,eAAC,GAAD,eAAgBkB,IACrC,kBAAPlB,EAA+B,eAAC,GAAD,eAAmBkB,IAC9C,eAAC,GAAD,eAAeA,MACvB,IAmIG0W,EAAc,SAAC5X,GACjB,IAAI6X,EAAM,CAACpK,SAAU,CAAC,CAAEpF,KAAM,MAC3BrI,IAAM6X,EAAG,KAAW7X,GACb,OAAPA,GAAwB,WAATA,EACd8X,KAAWF,YAAYjC,EAAQ,CAACkC,KAEhCC,KAAWF,YAAYjC,EAAQ,CAACkC,IAChCC,KAAWC,SACPpC,EACA,CAACqC,cAAc,GACf,CAAC9O,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,MAkB1CC,EAAyB,SAACpB,GAC5B,IAAMC,EAAc/V,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAASuJ,EAAK,IAAI3O,MAdvC,SAAC2O,EAAMC,GAC3B,IAAMoB,EAASpB,EAAYkB,MAAM,KAAK,GAAGrB,cADE,EAErBwB,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAFoC,oBAGvCC,EAAS,EACA,SAAVJ,GAA+B,SAAXA,IAAmBI,EAAS,GACtC,cAAVJ,IAAuBI,EAAS,IACnC,IAAMC,EAAgB,CAAED,SAAQzB,QAC1B2B,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDK,EAAWtC,EAAcnN,GAAQuP,GACjC1C,EAAS,GACTK,EAAe,IAKfwC,CAAgB9B,EAAMC,GAClBA,EAAY8B,SAAS,MACrBF,EAAW,QA2BbG,EAAU,SAACC,GACb,OAAa,OAAVA,GAA8B,WAAZA,GACjBnB,KAAWC,SACPpC,EACA,CAACqC,cAAc,GACf,CAAC9O,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAEjCL,KAAWC,SACdpC,EACA,CAAE3V,KAAMiZ,GACR,CAAE/P,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,QAGzCH,KAAWC,SACPpC,EACA,CAACqC,cAAc,GACf,CAAC9O,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAEjCL,KAAWC,SACdpC,EACA,CAAE3V,KAAMiZ,GACR,CAAE/P,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,QAK3CkB,EAAmB,SAACnC,GACtB6B,EAAWtC,EAAcnN,GAAO0N,cAAe,CAACE,EAAK,KACrD9V,EAAMkY,aAAa7C,EAAcnN,KAW/BiQ,EAAc,SAACrC,GAAU,IAAD,EACJsB,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EADmB,oBAEpBE,EAAgBE,KAAOU,OAAO3D,EAAQ6C,EAAa,CAAEe,KAAM,SAC3DZ,EAASC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAC7CgB,EAAUtY,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAGjD,OAFAwQ,EAAWW,EAAQ1C,cAAe,CAACE,EAAK,KACxC6B,EAAWtC,EAAcnN,GAAQuP,GAC1BzX,EAAMuY,YAAYD,IAuCvBX,EAAa,SAACxQ,EAAMkM,GACtBuD,KAAWe,WACPlD,EACAtN,EACA,CAAEqR,GAAInF,KAIRoF,EAAgB,SAAC3C,EAAMpS,EAAG5E,GAC5B,IAAgB,OAAbuW,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,GAAKmR,EAAWnR,OAAS,GAAKqR,EAAYrR,OAAO,EAIxE,OAHAJ,EAAEQ,iBACFkR,EAAe,IACfL,EAAS,GACO,UAAbE,EAnEmB,SAACa,GAE3B,OADAmC,EAAiBnC,GACc,cAA5B9V,EAAM4D,MAAMkS,EAAK,IAAIhX,KACb4X,EAAY,UAEhBjC,EAAOiE,cA8DsBC,CAAsB7C,GACtC,cAAbb,EAAiCiC,EAAuBpB,GAlD1C,SAACA,GAGtB,OAFAqC,EAAYrC,GACZY,EAAY,MACLA,EAAY,MAgDRkC,CAAiB9C,GACrB,GAAa,cAAThX,EAAsB,CAC7B4E,EAAEQ,iBACF,IAAM2U,EAAY7Y,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAGnD,OAFAwQ,EAAWkB,EAAUjD,cAAe,CAACE,EAAK,KAC1C9V,EAAMkY,aAAaW,GACZnC,EAAY,UAChB,GAAa,YAAT5X,EAAoB,CAC3B4E,EAAEQ,iBACF,IAAMoU,EAAUtY,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAIjD,OAHAwQ,EAAWW,EAAQ1C,cAAe,CAACE,EAAK,KACxC9V,EAAMuY,YAAYD,GAClB5B,EAAY,MACLA,EAAY,QAiFrBoC,EAAY,SAAC3R,EAAMrI,EAAMia,EAAcC,EAAUC,GAEnDrC,KAAWC,SAASpC,EAAQ,CAAC3V,SAC7B8X,KAAWe,WAAWlD,EAAQtN,GAC3B4R,IAAiBC,EAAW,GAC/BtC,EAAY,OAMVwC,EAAa,SAACC,EAASC,EAAUC,EAAMN,EAAcC,GAEvD,OAAgC,IAtDV,SAAC7R,GACvB,IAAM8P,EAAQ9P,EAAK8P,MAAM,KACzB,SACIA,EAAM,GAAGrB,cAAciC,SAAS,SAC7BZ,EAAM,GAAGrB,cAAciC,SAAS,SAChCZ,EAAM,GAAGrB,cAAciC,SAAS,cAiDpCyB,CAAkBH,GAAwBL,EAAUK,EAAS,UAAWJ,EAAcC,IArC/D7R,EAsCFgS,GApCfvD,gBAAkBzO,GACpBA,EAAK0Q,SAAS,KAmCoBiB,EAAUK,EAAS,aAAcJ,EAAcC,GA7ChE,SAAC7R,EAAMkS,GAC/B,QAAIA,GACe,IAAhBA,EAAKvV,QACLqD,EAAKyO,gBAAkBzO,EA2CvBoS,CAAoBJ,EAASE,GAAcP,EAAUK,EAAS,YAAaJ,EAAcC,GA/BhE,SAACG,EAASC,GACtC,QAAIA,MACAA,EAAStV,OAAS,IACG,MAAtBqV,EAAQK,OAAO,GA6BfC,CAAwBN,EAASC,GAAkBN,EAAUK,EAAS,gBAAiBJ,EAAcC,GAzBnF,SAACG,EAASC,GAE/B,OADArX,QAAQC,IAAIoX,KACRA,GACmB,IAApBA,EAAStV,SACTsV,EAASxD,gBAAgBwD,GACT,MAAhBA,EAAS,IAqBTM,CAAiBP,EAASC,GAAkBN,EAAUK,EAAS,SAAUJ,EAAcC,GACnFF,EAAUK,EAAS,KAAMJ,EAAcC,GA1CrB,IAAC7R,GA6C9BsN,EAAOkF,WAAa,SAAC3a,GACjB,IAAM+W,EAAc/W,EAAK4a,QAAQ,cAAcJ,OAC/CzX,QAAQC,IAAI+T,GAEZ,IADA,IAAM8D,EAAY9D,EAAYkB,MAAM,MAC3BtM,EAAI,EAAGA,EAAIkP,EAAU/V,OAAQ6G,IAAM,CACxC,IAAMwO,EAAUU,EAAUlP,GAAG6O,OACzBJ,OAAQ,EACRC,OAAI,EACL1O,EAAI,GAAK,GACRyO,EAAWS,EAAUlP,EAAI,GAAG6O,OACN,IAAnBL,EAAQrV,QAAoC,IAApBsV,EAAStV,SAG7B6G,EAAI,EAAIkP,EAAU/V,SAAQuV,EAAOQ,EAAUlP,EAAI,GAAG6O,QACrDN,EAAWC,EAASC,EAAUC,EAAM1O,EAAGkP,EAAU/V,WAGlD6G,EAAI,EAAIkP,EAAU/V,SAAQuV,EAAOQ,EAAUlP,EAAI,GAAG6O,QACrDN,EAAWC,EAASC,EAAUC,EAAM1O,EAAGkP,EAAU/V,WAK7D,IAAMgW,EAAa,WACfhF,EAAU,OA4GRiF,EAAgB,SAACC,EAAUjE,EAAaD,GAC1CZ,EAAc,SAjaC,SAAC8E,GAAc,IAExBjE,EAAciE,EADHvF,EAAOoB,UAAUnM,MAA1BoM,KAC0B,IAAIvJ,SAAS,GAAGpF,KAClD,GAAI4O,EAAY8B,SAAS,KAAzB,CACA,IAAMoC,EAAalE,EAAYkB,MAAM,KAClCgD,EAAWnW,OAAS,GACnBsR,EAAgB6E,EAAWA,EAAWnW,OAAS,GAAI0V,SA4ZvDU,CAAWF,GACX,IAAMH,EAAY9D,EAAYkB,MAAM,KACpC4C,EAAUM,MACV,IACI5C,EADesC,EAAUO,KAAK,IACVtW,OAAS,EANkB,EAO7BsT,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAP4C,oBAQ7CE,EAAgB,CAAE1B,OAAMyB,UACxBE,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,IAGR4C,EAAiB,SAACL,GAAc,IAAD,IACzBlE,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACFC,EAAW,UAAGiE,EAASlE,EAAK,WAAjB,iBAAG,EAAmBvJ,SAASuJ,EAAK,WAApC,aAAG,EAAsC3O,KAC1D,MACe,OAAX4O,QAAW,IAAXA,OAAA,EAAAA,EAAajS,QAAS,IACS,cAA3BkW,EAASlE,EAAK,IAAIhX,MACnBiX,IAAcA,EAAYH,gBAE1B,OAACG,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,WACvB,OAAC9B,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,WACvB,OAAC9B,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,cAGxB,GAA8B,YAA3BmC,EAASlE,EAAK,IAAIhX,KAAoB,CAC3C,IAAMwb,EAAgB7F,EAAOoB,UAAU0E,OAAOhD,OACxC0C,EAAU,OAAGlE,QAAH,IAAGA,OAAH,EAAGA,EAAakB,MAAM,KAChCuD,EAAaP,EAAWQ,QACxBC,EAAcT,EAAWG,KAAK,KAC9BO,EAAYH,EAAW1W,OACzB8W,EAAYC,IAChB,GAAGH,EAAY7C,SAAS,KAAK,CACzB,IAAMiD,EAAYJ,EAAYzD,MAAM,KACpC2D,EAAY7E,EAAYjS,OAASgX,EAAUhX,OAAS,EAErDwW,EAAgBK,GAAaL,EAAgBM,EAlD9B,SAACJ,EAAYE,EAAa5E,GAChDZ,EAAc,aACdE,EAAesF,EAAYzD,MAAM,KAAK,GAAGuC,QAFgB,MAGnCpC,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAHkD,oBAIrDC,EAAS,EACPJ,EAASqD,EAAW5E,cACb,SAAVuB,GAA+B,SAAXA,IAAmBI,EAAS,GACtC,cAAVJ,IAAuBI,EAAS,GACnC,IAAMC,EAAgB,CAAED,SAAQzB,QAC1B2B,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,GAyCFsD,CAAkBP,EAAYE,EAAa5E,GACpCwE,EAAgBM,GACvBb,EAAcC,EAAUjE,EAAaD,QAGzChB,EAAU,MACVI,EAAc,SAlEA,SAAC8E,EAAUlE,GAC7BZ,EAAc,SACdE,EAAe4E,EAASlE,EAAK,IAAIvJ,SAAS,GAAGpF,MAFP,MAGhBiQ,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAH+B,oBAIhCE,EAAgBE,KAAOU,OAAO3D,EAAQ6C,EAAa,CAAEe,KAAM,SAC3DZ,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,GAyCNuD,CAAchB,EAAUlE,IAuB1BmF,EAAO,SAACjb,GAAW,IAAD,MAChBuU,EAQJ,OANIA,EADDvU,EAAMkb,KAAKC,MAEkC,aAAlC,OAALnb,QAAK,IAALA,GAAA,UAAAA,EAAOuM,gBAAP,mBAAiBvM,aAAjB,mBAAwBob,cAAxB,eAAgCtc,MAD5B,IAIA,IAGT,eAACuV,GAAD,2BAAiBrU,EAAM0P,YAAvB,IACI6E,OAAQA,EACRD,QAAStU,EAAMkb,KAAK5G,QAAU,SAAW,SAF7C,SAIKtU,EAAMuM,aAKb8O,EAAa7E,uBAAY,SAAAxW,GAC3B,OAAO,eAACib,EAAD,eAAUjb,MAClB,IAEH,OACI,gBAAC,GAAD,WACK+B,QAAQC,IAAIhC,EAAM4D,OACnB,gBAAC,KAAD,CAAOA,MAAO5D,EAAM4D,MAAO6Q,OAAQA,EAAQhR,SAAU,SAAAuW,GACjDha,EAAMsb,SAAStB,GACZvF,EAAOoB,WACNwE,EAAeL,IAHvB,UAMI,eAACuB,GAAD,CAAgBF,WAAYA,EAAYG,WAAS,EAACC,YAAY,wBAAwBxS,UAlLhF,SAACvF,GAAO,IACdoS,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACAhX,EAASkB,EAAM4D,MAAMkS,EAAK,IAA1BhX,KASR,GARW,MAAR4E,EAAE+E,KAAa/E,EAAEgY,UAChB5D,EAAQ,aACRpB,EAAY,MACZA,EAAY,OAEL,MAARhT,EAAE+E,KAAa/E,EAAEgY,SAChB5D,EAAQ,MAED,eAARpU,EAAE+E,KACM,cAAR/E,EAAE+E,MACM,YAAR/E,EAAE+E,KAAwC,IAArB0M,EAAYrR,UACzB,cAARJ,EAAE+E,KAA0C,IAArB0M,EAAYrR,QAAtC,CAEA,GAAG6X,KAAS,QAASjY,GAAI,CAErB,GADAA,EAAEQ,iBAxBkB,WAAO,IAAD,EACdwT,KAAOkE,MAAMnH,EAAQ,CACjCzM,MAAO,SAAA+O,GAAC,OAAuB,IAAnBA,EAAED,gBAElB,OAJ8B,oBAyBvB+E,GAAuB,OAFL,MAGLnE,KAAOkE,MAAMnH,EAAQ,CACjCzM,MAAO,SAAA+O,GAAC,OAAe,IAAXA,EAAEoE,QADXnT,EAHc,oBAMrB4O,KAAWC,SACPpC,EACA,CAAC0G,MAAMnT,GACP,CAACA,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAG5C,GAAG0E,KAAS,QAASjY,GAAI,CACrBA,EAAEQ,iBADmB,MAELwT,KAAOkE,MAAMnH,EAAQ,CACjCzM,MAAO,SAAA+O,GAAC,OAAkB,IAAdA,EAAEzC,WADXtM,EAFc,oBAKrB4O,KAAWC,SACPpC,EACA,CAACH,SAAStM,GACV,CAACA,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAG5C,IAAG0E,KAAS,QAASjY,KAClBiY,KAAS,QAASjY,KAClBiY,KAAS,QAASjY,GAArB,CACA,GAAGiY,KAAS,cAAejY,GAAI,OAAOoW,IACtC,GAAG6B,KAAS,QAASjY,GAAI,OAAOoW,IAChC,IAAG6B,KAAS,MAAOjY,GAAnB,CACGiY,KAAS,gBAAiBjY,KACzBoR,EAAU,MACVM,EAAe,KAEnB,IAAMmF,EAAS9F,EAAOoB,UAAU0E,OAC1B7Q,EAAQ+K,EAAOoB,UAAUnM,MAC/B,GAAG6Q,EAAOzE,KAAK,KAAOpM,EAAMoM,KAAK,IAC9ByE,EAAOhD,SAAW7N,EAAM6N,SAExBvX,EAAM8b,eAAe9b,EAAM+b,kBAAiB,GAC3CtH,EAAOoB,aACRV,EAAYrR,OAAS,GAAKmR,EAAWnR,OAAS,GAAKuR,EAAcvR,OAAS,GAnY1D,SAACJ,GACpB,MAAW,YAARA,EAAE+E,KACD/E,EAAEQ,iBACF6Q,EAAmB,IAAV7M,EAAcmN,EAAcvR,OAAS,EAAIoE,EAAQ,IACnD,GAEA,cAARxE,EAAE+E,KACD/E,EAAEQ,iBACF6Q,EAAS7M,IAAUmN,EAAcvR,OAAS,EAAI,EAAIoE,EAAQ,IACnD,QAHX,EA8XO8T,CAAetY,KADtB,CAGA,IAAMqS,EAAc/V,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAC/C0S,EAAY9D,EAAYkB,MAAM,KACpC,GAAY,cAARvT,EAAE+E,IAAmB,OA7UR,SAACqN,EAAMpS,EAAG5E,GAC3B,IAAMyb,EAAS9F,EAAOoB,UAAU0E,OAC1B7Q,EAAQ+K,EAAOoB,UAAUnM,MAC/B,GAAG6Q,EAAOzE,KAAK,KAAOpM,EAAMoM,KAAK,IAC9ByE,EAAOhD,SAAW7N,EAAM6N,OAA3B,CACA,IAAMxB,EAAc/V,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAASuJ,EAAK,IAAI3O,KAC3D,GAAU,YAAPrI,EAAkB,CACjB,IAAMmY,EAAQlB,EAAYkB,MAAM,KAIhC,GAHoB,IAAjBA,EAAMnT,QAAyC,IAAzBmT,EAAM,GAAGuC,OAAO1V,QACrCgR,EAAU,MAEK,IAAhByF,EAAOhD,OAAY,OAE1B,GAAIzY,GACmB,IAAhByb,EAAOhD,OADd,CAGA,IAAMA,EAAS9C,EAAOoB,UAAUnM,MAAM6N,OACtC,KAAGxB,EAAYjS,OAAS,GAAKyT,EAAS,KACnB,KAAhBxB,GAA8B,YAAPjX,GAAqBA,GAG/C,OADA4E,EAAEQ,iBACK4T,EAAQ,QAwTiBmE,CAAanG,EAAMpS,EAAG5E,GACtD,GAAc,UAAV4E,EAAE+E,IAAiB,OAlMP,SAACqN,EAAMpS,EAAG5E,GAC1B,MAAY,eAATA,GACC2V,EAAOiE,cACAZ,EAAQ,OAEfhZ,GAAQkB,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,OAASnH,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAAKyO,cAGhF,WAAT9W,GACC4E,EAAEQ,iBACFwS,EAAY,MACqB,kBAA9B1W,EAAM4D,MAAMkS,EAAK,GAAG,GAAGhX,KACtBkB,EAAMkY,aAAalY,EAAM4D,MAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,MAEtDnH,EAAMkY,aAAalY,EAAM4D,MAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,MAEnDuP,EAAY,cAEX,kBAAT5X,GACC4E,EAAEQ,iBACKwS,EAAY,WAEhB+B,EAAc3C,EAAMpS,EAAG5E,GAhBnB2V,EAAOiE,cA4LYwD,CAAYpG,EAAMpS,EAAG5E,GACnD,GAAc,QAAV4E,EAAE+E,IAAe,OA1KP,SAACqN,EAAMpS,GACrB,IAAgB,OAAb2R,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,GAAKmR,EAAWnR,OAAS,GAAKqR,EAAYrR,OAAO,EAIxE,OAHAJ,EAAEQ,iBACFkR,EAAe,IACfL,EAAS,GACO,UAAbE,EAA6BgD,EAAiBnC,GACjC,cAAbb,EAAiCiC,EAAuBpB,GACpDqC,EAAYrC,GAmKKqG,CAAUrG,EAAMpS,GAC5C,IAlQoB,SAACA,EAAGqS,EAAajX,GACrC,MAAU,eAAPA,IAEU,cAAT4E,EAAEY,MACCZ,EAAE0Y,UACFrG,IAAgBA,EAAYH,iBAM/BG,IAAgBA,EAAYH,gBACzBG,EAAY8B,SAAS,SALxBC,EAAQ,eACD,GA0PPuE,CAAgB3Y,EAAGqS,EAAajX,KA9OnB,SAAC+a,EAAW/a,GAC7B,GAAU,YAAPA,EAAkB,OAAO,EAC5B,IAAMqY,EAAS0C,EAAU,GAAGjE,cAC5B,OAAc,SAAXuB,GAAgC,SAAXA,GAAgC,cAAXA,KACzCW,EAAQ,YACD,GA0OPwE,CAAazC,EAAW/a,KACzBgX,EAAK,GAAK,GAvfQ,SAACA,EAAMpS,EAAGqS,EAAajX,GAC5C,IAAIA,EAAM,OAAO,EACjB,IAGIyd,EAHEC,EAAexc,EAAM4D,MAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KAClDsV,EAAuBzc,EAAM4D,MAAMkS,EAAK,GAAG,GAAGhX,KAC9C4d,EAAuB3G,EAAYH,cAEtC5V,EAAM4D,MAAMkS,EAAK,GAAG,KACnByG,EAAWvc,EAAM4D,MAAMkS,EAAK,GAAG,GAAGhX,QAGjB,KAAjB0d,GACa,UAAV9Y,EAAE+E,KACDiU,EAAqB7E,SAAS,SAC9B6E,EAAqB7E,SAAS,SAC9B6E,EAAqB7E,SAAS,cACN,WAAzB4E,GACa,WAAbF,GACa,kBAAbA,IAEHzE,EAAQ,MAqeR6E,CAAiB7G,EAAMpS,EAAGqS,EAAajX,IAlaxB,SAACgX,EAAMC,EAAa6G,GACvC,MAAkB,cAAdA,QACD9G,EAAK,GAAK,GAGY,WAFA9V,EAAM4D,MAAMkS,EAAK,GAAG,GAAGhX,MAGrC8d,GACA7G,IAAgBA,EAAYH,gBAC3BG,EAAY8B,SAAS,SACrB9B,EAAY8B,SAAS,SACrB9B,EAAY8B,SAAS,cACrB9B,EAAY8B,SAAS,QAEzBC,EAAQ,cACD,IAsZX+E,CAAe/G,EAAMC,EAAajX,IACnCgX,EAAK,GAAK,GAAG,CACZ,GA3bmB,SAACA,EAAMC,EAAarS,EAAG5E,GAC9C,GAAW,kBAAPA,EAAwB,OAAO,EACnC,IAAM+Z,EAAY7Y,EAAM4D,MAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KACrD,QAAG0R,IAAcA,EAAUjD,iBACJ,MAAnBG,EAAY,IAAuB,MAARrS,EAAE+E,KAAa/E,EAAE0Y,aAE5CtE,EAAQ,iBACRlB,KAAWC,SACPpC,EACA,CAAE3V,KAAM,aACR,CACI0Z,GAAI,CAAC1C,EAAK,GAAG,GACb9N,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,IACnC+F,KAAM,YAGP,GA2aHC,CAAmBjH,EAAMC,EAAarS,EAAG5E,GAAO,OACpD,GApeY,SAACgX,EAAMhX,GACvB,GAAU,WAAPA,EAAiB,OAAO,EAC3B,IAAMiX,EAAc/V,EAAM4D,MAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAC/CqV,EAAexc,EAAM4D,MAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KAClD6V,EAAehd,EAAM4D,MAAMkS,EAAK,GAAG,GAAGhX,KAC5C,OACI0d,IAAiBA,EAAa5G,eAC3B4G,EAAa1Y,OAAS,GACoB,MAA1C0Y,EAAaA,EAAa1Y,OAAS,IACK,MAAxCiS,EAAYA,EAAYjS,OAAS,IACd,MAAnBiS,EAAY,KACXyG,EAAa3E,SAAS,UACtB2E,EAAa3E,SAAS,UACtB2E,EAAa3E,SAAS,cAE1BjB,KAAWC,SACPpC,EACA,CAAE3V,KAAM,aACR,CACI0Z,GAAI,CAAC1C,EAAK,GAAG,GACb9N,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,IACnC+F,KAAM,WAGdlG,KAAWC,SACPpC,EACA,CAACqC,cAAc,GACf,CAAC0B,GAAI,CAAC1C,EAAK,GAAG,GAAI9N,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAIzDa,EAAQ,WACD,GACF0E,EAAa1Y,OAAS,GAAyB,MAAnBiS,EAAY,KAAoC,MAApByG,EAAa,IAA6B,cAAfQ,KACxFlF,EAAQ,WACD,GAicHmF,CAAYnH,EAAMhX,GAAO,aA0GmFyX,cAAeA,KACxHpB,EAAYrR,OAAS,GAAkB,UAAbmR,GAA0BE,EAAYrR,OAAS,GAAkB,UAAbmR,GAA+E,eAAvD,UAAAjV,EAAM4D,MAAN,OAAY6Q,QAAZ,IAAYA,GAAZ,UAAYA,EAAQoB,iBAApB,iBAAY,EAAmBnM,aAA/B,aAAY,EAA0BoM,KAAK,WAA3C,eAAgDhX,QACzJ,eAAC,GAAD,CAAcuU,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,IAE9DiN,EAAYrR,OAAS,GAAkB,cAAbmR,IAAyC,OAAbI,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAQ,GAC9E,eAAC,GAAD,CAAcuP,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,IAE9DiN,EAAYrR,OAAS,GAAkB,UAAbmR,GAAwBI,EAAcvR,OAAQ,GACzE,eAAC,GAAD,CAAcuP,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,aAazEqT,GAAiBpW,YAAO+X,KAAP/X,CAAH,8E,SCpsBpBgY,KAAMC,IAAIC,OAAOra,KAAK,CAAC,WAJL,WAClBsa,KAAKC,aAAa,kCAFP,4txFAGXD,KAAKE,QAAQ,kCAAmC,uBAAwB,aCExEL,KAAMC,IAAIC,OAAOra,KAAK,CAAC,WAJL,WAClBsa,KAAKC,aAAa,+BAFP,o21FAGXD,KAAKE,QAAQ,+BAAgC,oBAAqB,aCElEL,KAAMC,IAAIC,OAAOra,KAAK,CAAC,WAJL,WAClBsa,KAAKC,aAAa,yCAFP,gxpGAGXD,KAAKE,QAAQ,yCAA0C,0BAA2B,iBCHlF,I,GAKAL,KAAMC,IAAIC,OAAOra,KAAK,CAAC,WAJL,WAClBsa,KAAKC,aAAa,iCAFP,gnnGAGXD,KAAKE,QAAQ,iCAAkC,sBAAuB,aCGtE,I,iOA2KeC,GA3KS,SAACzd,GACrB,IAAI0d,EAAO,EACPC,EAAU,GACVC,EAAc,IAUZC,EAAa,SAACC,GAChB,OAAGA,EAAS3C,MAAQ2C,EAASxJ,QAAgB,CAAC,0BAA2B,cACtEwJ,EAAS3C,KAAa,CAAC,oBAAqB,UAC5C2C,EAASxJ,QAAgB,CAAC,sBAAuB,UAC7C,CAAC,uBAAwB,WAQ9ByJ,EAAgB,WAClBJ,GAAW,EACXD,GAAO,KAGLM,EAAa,SAACC,IAVI,SAACA,EAAQL,GAC7BK,EAAOC,UACPD,EAAO9W,KAAKyW,EAAc,IAAKK,EAAOE,SAASC,SAASvZ,MAAQ,EAAG,IASnEwZ,CAAgBJ,EAAQL,GACxBA,EAAc9V,OAAOoI,OAAO0N,GAAe,GAC3CF,EAAO,EACPC,EAAU,IAcRzF,EAAe,SAAC+F,EAAQxb,GAC1Bwb,EAAO9W,KAAK1E,EAAMmT,cAAe,IAAK8H,IAGpCY,EAAmB,SAACL,EAAQxb,GACbwb,EAAOM,gBAAgB9b,EAAO,GACtC+b,SAAQ,SAAA9L,GACb,OAAOuL,EAAO9W,KAAKuL,EAAM,IAAKgL,OAwBlCe,EAAsB,IACtBC,EAAmB,EACjBC,EAAiB,SAAClc,EAAOwb,EAAQ/V,EAAOf,GAC1C1E,EAAM+b,SAAQ,SAACI,EAAMC,GACjB,IAAMC,EAAab,EAAOc,aAAaH,GACpCH,EAAsBK,EAAa,IAClCf,IACAU,EAAsB,IACtBC,EAAmB,EApBD,SAACT,EAAQxb,EAAOoc,EAAW1X,EAAMe,GAC3DnG,QAAQC,IAAI2b,GACG,IAAZA,GAAiBlb,EAAMqB,OAAS+a,EAAY,GAC3CP,EAAiBL,EAAQ,UACzBD,EAAWC,GACX/F,EAAa+F,EAAD,UAAY9W,EAAKe,EAAM,GAAGqE,SAAS,GAAGpF,KAAtC,cACZ4W,KACKJ,GAAW,GAChBK,EAAWC,GAaPe,CAAsBf,EAAQxb,EAAOoc,EAAW1X,EAAMe,IAE1D+V,EAAO9W,KAAKyX,EAAM,IAAMF,EAAkBhB,GAC1Ce,GAAwBK,EAAa,GACrCJ,GAAqBI,EAAa,OAmBtCG,EAA2B,EAC3BC,EAAwB,EACtBC,EAAsB,SAAC1c,EAAOwb,GAChCxb,EAAM+b,SAAQ,SAAAI,GACV,IAAIE,EAAab,EAAOc,aAAaH,GAClCK,EAA2BH,EAAa,IACpCnB,GAAW,GAAGK,EAAWC,GAC5BF,IACAkB,EAA2B,EAC3BC,EAAwB,GAE5BjB,EAAO9W,KAAKyX,EAAM,IAAMM,EAAuBxB,GAC/CuB,GAA6BH,EAAa,GAC1CI,GAA0BJ,EAAa,OAmBzCM,EAAW,SAACtgB,EAAMmf,EAAQxb,EAAO0E,EAAMe,GAC7B,eAATpJ,GAtGc,SAACmf,EAAQxb,GAC1B,IAAM4c,EAAcpB,EAAOc,aAAatc,GACjCwb,EAAO9W,KAAK1E,EAAMmT,cAAeqI,EAAOE,SAASC,SAASvZ,MAAQ,EAAIwa,EAAa3B,GAoGhE4B,CAAarB,EAAQxb,GACnC,cAAT3D,GAAsBoZ,EAAa+F,EAAQxb,GAClC,kBAAT3D,GAA0Bwf,EAAiBL,EAAQxb,GAC1C,YAAT3D,GAxFY,SAACmf,EAAQ9W,EAAMe,EAAOzF,GACrCwb,EAAOsB,QAAQ,oBAAqB,UACjCpY,EAAKe,EAAM,IAA8C,IAAxCf,EAAKe,EAAM,GAAGqE,SAAS,GAAGpF,KAAKrD,QAC/Cia,IAEJE,EAAO9W,KAAK1E,EAAMmT,cAAe,IAAK8H,GAmFf8B,CAAWvB,EAAQ9W,EAAMe,EAAOzF,GAC3C,WAAT3D,GApDW,SAACmf,EAAQxb,EAAOyF,EAAOf,GAGrC,GAFAsX,EAAsB,IACtBC,EAAmB,EAChBe,MAAMC,QAAQjd,GACbA,EAAM+b,SAAQ,SAAAV,GACVG,EAAOsB,QAAP,MAAAtB,EAAM,aAAYJ,EAAWC,KAC7B,IAAM6B,EAAa7B,EAAS3W,KAAKqS,OAAOvC,MAAM,KAC9C0H,EAAegB,EAAY1B,EAAQ/V,EAAOf,UAE5C,CACF,IAAMwY,EAAald,EAAM+W,OAAOvC,MAAM,KACtC0H,EAAegB,EAAY1B,EAAQ/V,EAAOf,IAyCxByY,CAAU3B,EAAQxb,EAAOyF,EAAOf,GAClDrI,GArBe,SAACmf,EAAQxb,GAG5B,GAFAwc,EAA2B,EAC3BC,EAAwB,EACrBO,MAAMC,QAAQjd,GACbA,EAAM+b,SAAQ,SAAAV,GACVG,EAAOsB,QAAP,MAAAtB,EAAM,aAAYJ,EAAWC,KAC7B,IAAM6B,EAAa7B,EAAS3W,KAAKqS,OAAOvC,MAAM,KAC9CkI,EAAoBQ,EAAY1B,UAEnC,CACD,IAAM0B,EAAald,EAAM+W,OAAOvC,MAAM,KACtCkI,EAAoBQ,EAAY1B,IAU1B4B,CAAe5B,EAAQxb,IAG/Bqd,EAAY,SAAC3Y,GACf,IAAM8W,EAnJC,IAAId,KAAM,CACb4C,YAAa,WACb1H,KAAM,KACN7V,OAAQ,CAAC,IAAK,MAiJlByb,EAAO+B,YAAY,IACnB7Y,EAAKqX,SAAQ,SAAC9L,EAAMxK,GAChB+V,EAAOsB,QAAQ,uBAAwB,UACpC5B,GAAW,GAAGK,EAAWC,GAC5B,IAAMxb,EAzHM,SAACiQ,GACjB,OAAGA,EAAKnG,SAASzI,OAAS,EAAUmc,OAAOC,OAAOxN,EAAKnG,UAC3B,IAAzBmG,EAAKnG,SAASzI,OAAqB4O,EAAKnG,SAAS,GAAGpF,UAAvD,EAuHkBgZ,CAAYzN,GAC1B0M,EAAS1M,EAAK5T,KAAMmf,EAAQxb,EAAO0E,EAAMe,GACzC6V,OAEJE,EAAOmC,KAAK,2BAIhB,OACI,eAACC,GAAD,CAAWpc,QAAS,kBAAI6b,EAAU9f,EAAM4D,QAAxC,0BAMFyc,GAAYlb,IAAOK,OAAV,mQCjKAiH,GAdC,SAACzM,GACb,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAM4I,aAAW,iBAAiB+D,GAAG,eAArC,SACI,eAAC,GAAD,UAAe,uBAAMC,EAAE,qFAE3B,gBAAC0T,GAAD,WACKtgB,EAAMsN,aACP,eAAC,GAAD,CAAiB1J,MAAO5D,EAAM4D,eAQxC0c,GAAiBnb,IAAOE,IAAV,4EAKdqH,GAAOvH,YAAOoI,KAAPpI,CAAH,6DAIJlC,GAAYkC,IAAOE,IAAV,4eC4NAvF,gBAJS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,YAGTC,EAjPI,SAACE,GAAW,IAAD,EACAC,mBAAS,CAAC,CAACnB,KAAM,YAAayN,SAAU,CAAC,CAACpF,KAAM,QADhD,mBACnBvD,EADmB,KACZ0X,EADY,OAEMrb,mBAAS,IAFf,mBAEnBsgB,EAFmB,KAETC,EAFS,OAGgBvgB,oBAAS,GAHzB,mBAGnB6b,EAHmB,KAGJC,EAHI,OAIc9b,mBAAS,GAJvB,mBAInBwgB,EAJmB,KAILC,EAJK,OAKczgB,mBAAS,qBALvB,mBAKnBqN,EALmB,KAKL6C,EALK,OAMUlQ,mBAAS,IANnB,mBAMnBsV,EANmB,KAMPoL,EANO,OAOgB1gB,mBAAS,IAPzB,mBAOnB2gB,EAPmB,KAOJC,EAPI,OAQQ5gB,mBAAS,IARjB,mBAQnBwV,EARmB,KAQRqL,EARQ,OASc7gB,mBAAS,IATvB,mBASnB8gB,EATmB,KASLC,EATK,OAUQ/gB,mBAAS,GAVjB,mBAUnBghB,EAVmB,KAURC,EAVQ,KAY1BxgB,qBAAU,WACN,IAAGob,EAAH,CACAqF,GAAmB,aACnB,IAAMf,EAAOgB,YAAW,kBAAKC,EAAWzd,EAAO5D,EAAMH,SAASmB,OAAQhB,EAAMgI,MAAMC,OAAO5B,UAAS,KAClG,OAAO,kBAAKib,aAAalB,OAE1B,CAACxc,IAEJlD,qBAAU,WACN6gB,MAED,IAEH,IAAMA,EAAY,WACdlkB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBN,MACAxE,MAAK,SAAAvC,GACF,IAAMwiB,EAAaxiB,EAAKA,OAClBif,EAASuD,EAAWra,KAC1BqC,SAASpC,MAAQoa,EAAW/f,KAC5B+e,EAAYxhB,EAAKA,OAAO+I,OACrBkW,EAAOna,OAAS,IACfwX,EAAS2C,GACTwD,GAAcxD,GACdyD,GAAazD,GACbyC,EAAgBiB,EAAS1D,SAKrC9M,OAAOC,eAAiB,WACpB,GAAkB,cAAf9D,EACC,MAAO,UAIf,IAAMsU,EAA4B,SAACC,EAAaC,EAAgBzb,GAC5DhJ,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW2gB,GACX1gB,IAAIiF,GACJM,OAAO,CACJC,aAAcib,IAEjBtgB,MAAK,WACFQ,QAAQC,IAAI,eAId+f,EAAoB,SAACF,GACpBA,EAAcZ,EAAY,MACzBW,EAA0BC,EAAa,gBAAiB7hB,EAAMgI,MAAMC,OAAO5B,QAC3Eub,EAA0BC,EAAa,gBAAiB/Z,OAAOyY,MAIjEoB,EAAW,SAAC1D,GACd,IAAIxb,EAAQ,EAWZ,OAVAwb,EAAOO,SAAQ,SAAA9L,GACX,GAAkC,IAA/BA,EAAKnG,SAAS,GAAGpF,KAAKrD,OAAzB,CACA,IAAIqD,EAAOuL,EAAKnG,SAAS,GAAGpF,KAAKqS,OAE7BrS,EADW,YAAZuL,EAAK5T,KACGqI,EAAK8P,MAAM,MAAMmD,KAAK,IAAInD,MAAM,KAEhC9P,EAAK8P,MAAM,KAEtBxU,GAAS0E,EAAKrD,WAEXrB,GAGL4e,EAAa,SAACW,EAAchhB,EAAQuf,GACtC,IAAMsB,EAActb,KAAKC,MACzByb,IACAC,EAAqBF,EAAchhB,EAAQuf,GAC3CwB,EAAkBF,GAClBX,EAAaW,IAGXI,EAAkB,WACpB,IAAME,EAAeR,EAAS/d,GACxBwe,EAASD,EAAe1B,EAE9B,GADAC,EAAgByB,GACbC,EAAS,EAAG,OAAOC,EAAyBD,IAG7CF,EAAuB,SAACF,EAAchhB,EAAQuf,GAChDljB,EAAG8D,WAAW,SACbC,IAAIJ,GACJG,WAAW,SACXC,IAAImf,GACJ5Z,OAAO,CACJQ,KAAM6a,IAETzgB,MAAK,WACF4f,GAAmB,yBAIrBkB,EAA2B,SAACC,GAC9B,IAAMC,EAAazlB,IAASQ,UAAUklB,WAAWC,UAAUH,GACrDhgB,EAAOC,OAASC,OAAO,KAC7BnF,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,cACJuF,OAAO,CACJ,qBAAsB4b,EACtB,oBAAqBjgB,KAevBogB,GAAY,SAACC,GAEf,OADAA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAASA,EAAE,GAAKD,EAAE,MACtBF,EAAMpY,KAAI,SAAAmI,GACb,OAAOA,EAAK,OAId+O,GAAgB,SAACO,GACnB,IAAMe,EAnBgB,SAACf,GACvB,IAAMgB,EAAmB,GAOzB,OANAhB,EAAaxD,SAAQ,SAAA9L,GACjB,GAAkB,eAAX,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM5T,MAAT,CACA,IAAM2C,EAAOiR,EAAKnG,SAAS,GAAGpF,KAAKyO,cAC7BqN,EAAoBC,GAA+BzhB,GACzD0hB,GAAcF,EAAmBD,OAE9BA,EAWgBI,CAAkBpB,GACzCnB,EAAiBkC,GACjB,IAAMM,EAAmBpD,OAAOqD,QAAQP,GAClCQ,EAAiBb,GAAUW,GACjC1C,EAAc4C,IAGZJ,GAAgB,SAACK,EAAUC,GAC7B,GAAqB,IAAlBD,EAAS1f,OACZ,OAAG2f,EAAUD,GACFC,EAAUD,IAAa,EAEvBC,EAAUD,GAAY,GAI/BN,GAAiC,SAACQ,GACpC,GAAGA,EAAc7L,SAAS,KAAM,CAC5B,IAAMZ,EAAQyM,EAAczM,MAAM,KAElC,OADAA,EAAMkD,MACClD,EAAMmD,KAAK,IAAIZ,OAE1B,OAAOkK,GAcLhC,GAAe,SAACM,GAClB,IAAMvM,EAAY,GAClBuM,EAAaxD,SAAQ,SAAA9L,GACjB,GAAkB,aAAX,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM5T,MAAoB,CACzB,IACM6kB,EADUjR,EAAKnG,SAAS,GAAGpF,KACJ8P,MAAM,KACnC,GAAG0M,EAAa7f,OAAS,EAAG,CACxB6f,EAAalJ,QACb,IACMK,EADS6I,EAAavJ,KAAK,KACRnD,MAAM,KAC/B6D,EAAUX,MACVW,EAAUV,KAAK,IACf,IAAMnP,EAAW6P,EAAU,GAAGtB,OAAO5D,cACrCuN,GAAclY,EAAUwK,QAIpCuL,EAAgBvL,GAChB,IAAMmO,EAAkB3D,OAAOqD,QAAQ7N,GACjCoO,EAAgBnB,GAAUkB,GAChC9C,EAAa+C,IAqBX1C,GAAqB,SAAC2C,GACxB3T,EAAgB2T,IAGpB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAASlgB,MAAOA,EAAO0J,aAAcA,IACrC,eAACyW,GAAD,UACI,eAACrM,GAAD,CAAiBoE,cAAeA,EAAeC,iBAAkBA,EAAkBnY,MAAOA,EAAO0X,SAAUA,EAAU7F,UAAWA,EAAW8C,YA1BnI,SAACD,GACjB,IAAMqL,EAAerL,EAAQrB,MAAM,KAC7B+M,EAAa,eAAOjD,GAC1B,KAAG4C,EAAa7f,OAAS,GAAzB,CACA6f,EAAalJ,QACb,IACMK,EADS6I,EAAavJ,KAAK,KACRnD,MAAM,KAC/B6D,EAAUX,MACVW,EAAUV,KAAK,IACf,IAAMnP,EAAW6P,EAAU,GAAGtB,OAAO5D,cACrCuN,GAAclY,EAAU+Y,GACxBhD,EAAgBgD,GAChB,IAAMJ,EAAiB3D,OAAOqD,QAAQU,GAChCH,EAAgBnB,GAAUkB,GAChC9C,EAAa+C,KAYgKnC,aAAcA,GAAcnM,WAAYA,EAAY2C,aA5DhN,SAACwL,GAClB,IAAMO,EAAqBP,EAAc9N,cACnCsO,EAAyBhB,GAA+Be,GACxDE,EAAa,eAAOvD,GAC1BuC,GAAce,EAAwBC,GACtCtD,EAAiBsD,GACjB,IAAMd,EAAmBpD,OAAOqD,QAAQa,GAClCZ,EAAiBb,GAAUW,GACjC1C,EAAc4C,IAoD+Ovb,MAAOhI,EAAMgI,MAAOyZ,cAAeA,GAAeN,mBAAoBA,aAYrU4C,GAAqB5e,IAAOE,IAAV,4JAQXpC,GAAYkC,IAAOE,IAAV,uD,mBCrPPoH,GAXC,SAACzM,GACb,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAM4I,aAAW,iBAAiB+D,GAAG,eAArC,SACI,eAAC,GAAD,UAAe,uBAAMC,EAAE,qFAE1B5M,EAAMsN,iBAObZ,GAAOvH,YAAOoI,KAAPpI,CAAH,6DAIJlC,GAAYkC,IAAOE,IAAV,2eCiGAvF,gBALS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBukB,UAAWrkB,EAAMlD,IAAIunB,aAGVtkB,EA9GD,SAACE,GAAW,IAAD,IAEGC,mBAAS,IAFZ,mBAEdokB,EAFc,KAERC,EAFQ,OAGarkB,mBAAS,GAHtB,mBAGdghB,EAHc,KAGHC,EAHG,OAIqBjhB,oBAAS,GAJ9B,mBAId6b,EAJc,KAICC,EAJD,OAKiB9b,mBAAS,qBAL1B,mBAKdskB,EALc,KAKDC,EALC,KAOrB9jB,qBAAU,WACN+jB,MAED,CAACzkB,EAAMgI,QAEVtH,qBAAU,WACN,GAAGV,EAAMH,SAASmB,SAAW8a,EACzB,OAAO4I,MAGZ,CAACL,IAEJ,IAAMK,EAAW,WACbF,EAAe,aACf,IAAMG,EAAUvD,YAAW,kBAAIwD,MAAY,KAC3C,OAAQ,kBAAItD,aAAaqD,KAGvBF,EAAW,WACbpnB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBN,MACAxE,MAAK,SAAA8O,GACF,GAAGA,EAAOC,OAAQ,CACd,IAAMuU,EAAYxU,EAAOrR,OACzBwK,SAASC,eAAe,kBAAkB7F,MAAQihB,EAAU1d,KAC5DqC,SAASpC,MAAQyd,EAAUpjB,KAC3BzB,EAAMnB,UxBqEIG,EwBrEe6lB,ExBsE/B,SAAChmB,GACHA,EAAS,CAACC,KAAMhB,EAAYmB,QAASD,OwBtE7B,IAAM+K,EAAWP,SAASC,eAAe,kBACzCqb,KAAYC,MAAMhb,GxBmE3B,IAAmB/K,MwB9DtBmS,OAAOC,eAAiB,WACpB,GAAiB,cAAdmT,EACC,MAAO,UAIf,IAaM3C,EAA4B,SAACC,EAAaC,EAAgBzb,GAC5DhJ,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW2gB,GACX1gB,IAAIiF,GACJM,OAAO,CACJC,aAAcib,IAEjBhgB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAUxB8iB,EAAW,WACb,IAAM/C,EAActb,KAAKC,OAhCN,SAAC6d,GACpBhnB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAIpB,EAAMgI,MAAMC,OAAO5B,QACvBM,OAAO,CACJQ,KAAMkd,IAET9iB,MAAK,WACFijB,EAAe,wBAwBnBQ,CAAeX,GATO,SAACxC,GACpBA,EAAcZ,EAAY,MACzBW,EAA0BC,EAAa,gBAAiB7hB,EAAMgI,MAAMC,OAAO5B,QAC3Eub,EAA0BC,EAAa,gBAAiB/Z,OAAO9H,EAAMokB,UAAUrc,SAOnFga,CAAkBF,GAClBX,EAAaW,IAQjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAASvU,aAAciX,IACvB,eAACU,GAAD,UACI,iCACI,eAAC,GAAD,iBAAQjlB,QAAR,IAAQA,GAAR,UAAQA,EAAOokB,iBAAf,aAAQ,EAAkB3iB,OAC1B,eAACyjB,GAAD,CAAcC,KAAK,IAAI1J,YAAY,mBAAmBhY,SAX9C,SAACC,GACrB4gB,EAAQ5gB,EAAEC,OAAOC,OACdkY,GAAeC,GAAiB,IAS0DP,WAAS,EAAChY,GAAG,8BAc5GyhB,GAAiB9f,IAAOE,IAAV,0LASdpC,GAAYkC,IAAOE,IAAV,8BAGT2D,GAAQ7D,IAAOO,GAAV,wKASLwf,GAAe/f,IAAO4E,SAAV,ySC3IZqb,GAAeC,YAAH,0nDAIM,SAAArlB,GAAK,OAAEA,EAAMb,OAAOyB,cACvB,SAAAZ,GAAK,OAAEA,EAAMb,OAAOyC,WACf,SAAA5B,GAAK,OAAEA,EAAMb,OAAO0B,eACvB,SAAAb,GAAK,OAAEA,EAAMb,OAAOuC,aACpB,SAAA1B,GAAK,OAAEA,EAAMb,OAAOwC,aASvB,SAAA3B,GAAK,MAAgB,UAAbA,EAAMslB,MAA+B,WAAbtlB,EAAMslB,WAAiC7e,IAAbzG,EAAMslB,MAAoBtlB,EAAMgB,OAAO8C,OAAS,EAAK,SAAW,YACzG,SAAA9D,GAAK,MAAgB,UAAbA,EAAMslB,MAA+B,WAAbtlB,EAAMslB,WAAiC7e,IAAbzG,EAAMslB,MAAoBtlB,EAAMgB,OAAO8C,OAAS,EAAK,OAAS,UA6D9IhE,gBAJS,SAAAC,GAAK,MAAK,CAC9BZ,OAAQY,EAAMlD,IAAIsC,UAGPW,CAAyBslB,IC5DzBtb,GAlBA,WACX,OACI,eAAC,GAAD,UACI,gBAACyb,GAAD,WACI,eAACC,GAAD,UAAI,eAAC,GAAD,wBACJ,gBAAC,GAAD,WACI,eAACA,GAAD,UACI,eAACC,GAAD,CAAY9Y,GAAG,sBAAf,SAAqC,eAAC,GAAD,0BAEzC,eAAC6Y,GAAD,UACI,eAACC,GAAD,CAAY9Y,GAAG,sBAAf,SAAqC,eAAC,GAAD,mCAUvD2T,GAAiBnb,IAAOE,IAAV,+IAQdpC,GAAYkC,IAAOugB,IAAV,iGAKTH,GAAKpgB,IAAOwgB,GAAV,8JAQFH,GAAKrgB,IAAOygB,GAAV,8BAGFC,GAAS1gB,IAAOE,IAAV,0VAgBNygB,GAAS3gB,IAAOE,IAAV,+XAkBNogB,GAAatgB,YAAOoI,KAAPpI,CAAH,sUAON0gB,GAGAC,IAMJ3iB,GAAOgC,IAAOO,GAAV,6SCwhBKqgB,GAtmBO,SAAC/lB,GAAW,IAAD,UACHC,mBAAS,CAC/B,CAACnB,KAAM,UAAWyN,SAAU,CAAC,CAACpF,KAAM,wBACpC,CAACoF,SAAU,CAAC,CAACpF,KAAM,MACnB,CAACoF,SAAU,CAAC,CAACpF,KAAM,mCACnB,CAACoF,SAAU,CAAC,CAACpF,KAAM,MACnB,CAACrI,KAAM,YAAayN,SAAU,CAAC,CAACpF,KAAM,aACtC,CAACrI,KAAM,gBAAiByN,SAAU,CAAC,CAACpF,KAAM,cAC1C,CAACrI,KAAM,SAAUyN,SAAU,CAAC,CAACpF,KAAM,qBACnC,CAACoF,SAAU,CAAC,CAACpF,KAAM,MACnB,CAACrI,KAAM,aAAcyN,SAAU,CAAC,CAACpF,KAAM,aACvC,CAACoF,SAAU,CAAC,CAACpF,KAAM,MACnB,CAACoF,SAAU,CAAC,CAACpF,KAAM,QAZM,mBACtBvD,EADsB,KACf0X,EADe,KAcvB7G,EAASC,mBAAQ,kBAAKC,aAAUC,aAAYC,mBAAkB,IAdvC,EAeD5U,qBAfC,mBAetB0D,EAfsB,KAedmR,EAfc,OAgBH7U,mBAAS,GAhBN,mBAgBtBiI,EAhBsB,KAgBf6M,EAhBe,OAiBG9U,mBAAS,CAAC6E,IAAK,UAAWC,KAAM,UAAWyO,QAAS,SAjBvD,mBAiBtBH,EAjBsB,KAiBZ2B,EAjBY,OAkBO/U,mBAAS,IAlBhB,mBAkBtBgV,EAlBsB,KAkBVC,EAlBU,OAmBSjV,mBAAS,IAnBlB,mBAmBtBkV,EAnBsB,KAmBTC,EAnBS,OAoBOnV,mBAAS,CAAC,YApBjB,mBAoBtBsV,EApBsB,KAoBVoL,EApBU,OAqBK1gB,mBAAS,CAAC,UArBf,mBAqBtBwV,EArBsB,KAqBXqL,EArBW,OAsBW7gB,mBAAS,IAtBpB,mBAsBtB8gB,EAtBsB,KAsBRC,EAtBQ,OAuBa/gB,mBAAS,IAvBtB,mBAuBtB2gB,EAvBsB,KAuBPC,EAvBO,KA+BvBxL,EAAa,UAND,CACdC,MAAOC,EACPC,MAAOhB,GACPiB,UAAWA,GAGiBR,UAAb,aAAG,EAAuBS,QAAO,SAAAhD,GAChD,OAAOA,EAAKiD,WAAWR,EAAYS,gBAAkBlD,IAAOyC,EAAYS,iBAG5ElV,qBAAU,WACN,GAAG+T,EAAOoB,UAAW,CAAC,IAAD,IACTC,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACFC,EAAW,UAAGnS,EAAMkS,EAAK,WAAd,iBAAG,EAAgBvJ,SAAS,UAA5B,aAAG,EAA6BpF,KACjD,GAAIxD,GAAUsR,EAAWnR,OAAS,IAAkB,OAAbuR,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,IAAgB,OAAXiS,QAAW,IAAXA,OAAA,EAAAA,EAAajS,QAAS,EAAG,CACzF,IACMkS,EADWC,KAAYC,WAAWzB,EAAQ9Q,GAC1BwS,wBAChBC,EAAc,CAChBtR,IAAI,GAAD,OAAKkR,EAAKlR,IAAMqM,OAAOkF,YAAc,GAArC,MACH7C,QAAS,QAGT4C,EAAW,KAAX,UAAyBJ,EAAKjR,KAAOoM,OAAOmF,YAAc,GAA1D,MAEa,UAAbrB,IACAmB,EAAW,KAAX,UAAyBJ,EAAKjR,KAAOoM,OAAOmF,YAA5C,OAEJtB,EAAYoB,QAEZpB,EAAY,CACRlQ,IAAK,UACLC,KAAM,UACNyO,QAAS,YAKtB,QAAC6B,QAAD,IAACA,OAAD,EAACA,EAAevR,OAAQmR,EAAYR,EAAOoB,UAAWV,EAAaxR,IAEtE,IAAM4S,EAAgBC,uBAAY,SAACxW,GAAU,IACjClB,EAASkB,EAAMyW,QAAf3X,KACR,MAAU,cAAPA,EAA2B,eAAC,GAAD,eAAekB,IACnC,WAAPlB,EAAwB,eAAC,GAAD,eAAYkB,IAC7B,YAAPlB,EAAyB,eAAC,GAAD,eAAkBkB,IACpC,eAAPlB,EAA4B,eAAC,GAAD,eAAgBkB,IACrC,kBAAPlB,EAA+B,eAAC,GAAD,eAAmBkB,IAC9C,eAAC,GAAD,eAAeA,MACvB,IAuIG0W,EAAc,SAAC5X,GACjB,IAAM6X,EAAM,CAACpK,SAAU,CAAC,CAAEpF,KAAM,MAC7BrI,IAAM6X,EAAG,KAAW7X,GACvB8X,KAAWF,YAAYjC,EAAQ,CAACkC,KAuB9BO,EAAyB,SAACpB,GAC5B,IAAMC,EAAcnS,EAAMkS,EAAK,IAAIvJ,SAASuJ,EAAK,IAAI3O,MArBjC,SAAC2O,EAAMC,GAC3B,IAAMoB,EAASpB,EAAYkB,MAAM,KAAK,GAAGrB,cADE,EAErBwB,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAFoC,oBAGvCC,EAAS,EACA,SAAVJ,GAA+B,SAAXA,IAAmBI,EAAS,GACtC,cAAVJ,IAAuBI,EAAS,IACnC,IAAMC,EAAgB,CAAED,SAAQzB,QAC1B2B,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDK,GAAWtC,EAAcnN,GAAQuP,GACjC1C,EAAS,GACTK,EAAe,IAYfwC,CAAgB9B,EAAMC,GAClBA,EAAY8B,SAAS,MACrBF,GAAW,QA2BbG,EAAU,SAACC,GACb,OAAOnB,KAAWC,SACdpC,EACA,CAAE3V,KAAMiZ,GACR,CAAE/P,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,OAIvCkB,GAAmB,SAACnC,GACtB6B,GAAWtC,EAAcnN,GAAO0N,cAAe,CAACE,EAAK,KACrDoC,GAAa7C,EAAcnN,KAWzBiQ,GAAc,SAACrC,GAAU,IAAD,EACJsB,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EADmB,oBAEpBE,EAAgBE,KAAOU,OAAO3D,EAAQ6C,EAAa,CAAEe,KAAM,SAC3DZ,EAASC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAC7CgB,EAAU1U,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAG3C,OAFAwQ,GAAWW,EAAQ1C,cAAe,CAACE,EAAK,KACxC6B,GAAWtC,EAAcnN,GAAQuP,GAC1Bc,GAAYD,IAmBjBX,GAAa,SAACxQ,EAAMkM,GACtBuD,KAAWe,WACPlD,EACAtN,EACA,CAAEqR,GAAInF,KAIRoF,GAAgB,SAAC3C,EAAMpS,EAAG5E,GAC5B,IAAgB,OAAbuW,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,GAAKmR,EAAWnR,OAAS,GAAKqR,EAAYrR,OAAO,EAIxE,OAHAJ,EAAEQ,iBACFkR,EAAe,IACfL,EAAS,GACO,UAAbE,EA/CmB,SAACa,GAE3B,OADAmC,GAAiBnC,GACQ,cAAtBlS,EAAMkS,EAAK,IAAIhX,KACP4X,EAAY,UAEhBjC,EAAOiE,cA0CsBC,CAAsB7C,GACtC,cAAbb,EAAiCiC,EAAuBpB,GA9B1C,SAACA,GAGtB,OAFAqC,GAAYrC,GACZY,EAAY,MACLA,EAAY,MA4BRkC,CAAiB9C,GACrB,GAAa,cAAThX,EAAsB,CAC7B4E,EAAEQ,iBACF,IAAM2U,EAAYjV,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAG7C,OAFAwQ,GAAWkB,EAAUjD,cAAe,CAACE,EAAK,KAC1CoC,GAAaW,GACNnC,EAAY,UAChB,GAAa,YAAT5X,EAAoB,CAC3B4E,EAAEQ,iBACF,IAAMoU,EAAU1U,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAI3C,OAHAwQ,GAAWW,EAAQ1C,cAAe,CAACE,EAAK,KACxCyC,GAAYD,GACZ5B,EAAY,MACLA,EAAY,QAyCrBoD,GAAa,WACfhF,EAAU,OAqFRiF,GAAgB,SAACC,EAAUjE,EAAaD,GAC1CZ,EAAc,SA9QC,SAAC8E,GAAc,IAExBjE,EAAciE,EADHvF,EAAOoB,UAAUnM,MAA1BoM,KAC0B,IAAIvJ,SAAS,GAAGpF,KAClD,GAAI4O,EAAY8B,SAAS,KAAzB,CACA,IAAMoC,EAAalE,EAAYkB,MAAM,KAClCgD,EAAWnW,OAAS,GACnBsR,EAAgB6E,EAAWA,EAAWnW,OAAS,GAAI0V,SAyQvDU,CAAWF,GACX,IAAMH,EAAY9D,EAAYkB,MAAM,KACpC4C,EAAUM,MACV,IACI5C,EADesC,EAAUO,KAAK,IACVtW,OAAS,EANkB,EAO7BsT,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAP4C,oBAQ7CE,EAAgB,CAAE1B,OAAMyB,UACxBE,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,IAGR4C,GAAiB,SAACL,GAAc,IAAD,IACzBlE,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACFC,EAAW,UAAGiE,EAASlE,EAAK,WAAjB,iBAAG,EAAmBvJ,SAASuJ,EAAK,WAApC,aAAG,EAAsC3O,KAE1D,MACe,OAAX4O,QAAW,IAAXA,OAAA,EAAAA,EAAajS,QAAS,IACS,cAA3BkW,EAASlE,EAAK,IAAIhX,MACnBiX,IAAcA,EAAYH,gBAE1B,OAACG,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,WACvB,OAAC9B,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,WACvB,OAAC9B,QAAD,IAACA,OAAD,EAACA,EAAa8B,SAAS,cAGxB,GAA8B,YAA3BmC,EAASlE,EAAK,IAAIhX,KAAoB,CAC3C,IAAMwb,EAAgB7F,EAAOoB,UAAU0E,OAAOhD,OACxC0C,EAAU,OAAGlE,QAAH,IAAGA,OAAH,EAAGA,EAAakB,MAAM,KAChCuD,EAAaP,EAAWQ,QACxBC,EAAcT,EAAWG,KAAK,KAC9BO,EAAYH,EAAW1W,OACzB8W,EAAYC,IAChB,GAAGH,EAAY7C,SAAS,KAAK,CACzB,IAAMiD,EAAYJ,EAAYzD,MAAM,KACpC2D,EAAY7E,EAAYjS,OAASgX,EAAUhX,OAAS,EAErDwW,EAAgBK,GAAaL,EAAgBM,EAnD9B,SAACJ,EAAYE,EAAa5E,GAChDZ,EAAc,aACdE,EAAesF,EAAYzD,MAAM,KAAK,GAAGuC,QAFgB,MAGnCpC,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAHkD,oBAIrDC,EAAS,EACPJ,EAASqD,EAAW5E,cACb,SAAVuB,GAA+B,SAAXA,IAAmBI,EAAS,GACtC,cAAVJ,IAAuBI,EAAS,GACnC,IAAMC,EAAgB,CAAED,SAAQzB,QAC1B2B,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,GA0CFsD,CAAkBP,EAAYE,EAAa5E,GACpCwE,EAAgBM,GACvBb,GAAcC,EAAUjE,EAAaD,QAGzChB,EAAU,MACVI,EAAc,SAnEA,SAAC8E,EAAUlE,GAC7BZ,EAAc,SACdE,EAAe4E,EAASlE,EAAK,IAAIvJ,SAAS,GAAGpF,MAFP,MAGhBiQ,KAAMC,MAAM5C,EAAOoB,WAAlCyB,EAH+B,oBAIhCE,EAAgBE,KAAOU,OAAO3D,EAAQ6C,EAAa,CAAEe,KAAM,SAC3DZ,EAAQC,KAAOD,MAAMhD,EAAQ+C,EAAeF,GAClDxC,EAAU2C,GA0CNuD,CAAchB,EAAUlE,IAuB1B4M,GAAY,SAACC,GAEf,OADAA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAASA,EAAE,GAAKD,EAAE,MACtBF,EAAMpY,KAAI,SAAAmI,GACb,OAAOA,EAAK,OAId6F,GAAc,SAACD,GACjB,IAAMqL,EAAerL,EAAQrB,MAAM,KAC7B+M,EAAa,eAAOjD,GAC1B,KAAG4C,EAAa7f,OAAS,GAAzB,CACA6f,EAAalJ,QACb,IACMK,EADS6I,EAAavJ,KAAK,KACRnD,MAAM,KAC/B6D,EAAUX,MACVW,EAAUV,KAAK,IACf,IAAMnP,EAAW6P,EAAU,GAAGtB,OAAO5D,cACrCuN,GAAclY,EAAU+Y,GACxBhD,EAAgBgD,GAChB,IAAMJ,EAAiB3D,OAAOqD,QAAQU,GAChCH,EAAgBnB,GAAUkB,GAChC9C,EAAa+C,KAGX3L,GAAe,SAACwL,GAClB,IAAMO,EAAqBP,EAAc9N,cACnCsO,EAAyBhB,GAA+Be,GACxDE,EAAa,eAAOvD,GAC1BuC,GAAce,EAAwBC,GACtCtD,EAAiBsD,GACjB,IAAMd,EAAmBpD,OAAOqD,QAAQa,GAClCZ,EAAiBb,GAAUW,GACjC1C,EAAc4C,IAGZL,GAAiC,SAACQ,GACpC,GAAGA,EAAc7L,SAAS,KAAM,CAC5B,IAAMZ,EAAQyM,EAAczM,MAAM,KAElC,OADAA,EAAMkD,MACClD,EAAMmD,KAAK,IAAIZ,OAE1B,OAAOkK,GAGLP,GAAgB,SAACK,EAAUC,GAC7B,GAAqB,IAAlBD,EAAS1f,OACZ,OAAG2f,EAAUD,GACFC,EAAUD,IAAa,EAEvBC,EAAUD,GAAY,GAI/BvI,GAAO,SAACjb,GAAW,IAAD,MAChBuU,EAQJ,OANIA,EADDvU,EAAMkb,KAAKC,MAEkC,aAAlC,OAALnb,QAAK,IAALA,GAAA,UAAAA,EAAOuM,gBAAP,mBAAiBvM,aAAjB,mBAAwBob,cAAxB,eAAgCtc,MAD5B,IAIA,IAGT,eAACuV,GAAD,2BAAiBrU,EAAM0P,YAAvB,IACI6E,OAAQA,EACRD,QAAStU,EAAMkb,KAAK5G,QAAU,SAAW,SAF7C,SAIKtU,EAAMuM,aAKb8O,GAAa7E,uBAAY,SAAAxW,GAC3B,OAAO,eAACib,GAAD,eAAUjb,MAClB,IAEH,OACI,eAAC,GAAD,UACI,gBAACgmB,GAAD,CAAapiB,MAAOA,EAAO6Q,OAAQA,EAAQhR,SAAU,SAAAuW,GACjDsB,EAAStB,GACNvF,EAAOoB,WACNwE,GAAeL,IAHvB,UAMI,eAAC,GAAD,CAAgBwB,WAAS,EAACH,WAAYA,GAAYpS,UAvN5C,SAACvF,GAEf,GAAGiY,KAAS,QAASjY,GAAI,CACrBA,EAAEQ,iBADmB,MAELwT,KAAOkE,MAAMnH,EAAQ,CACjCzM,MAAO,SAAA+O,GAAC,OAAe,IAAXA,EAAEoE,QADXnT,EAFc,oBAKrB4O,KAAWC,SACPpC,EACA,CAAC0G,MAAMnT,GACP,CAACA,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAG5C,GAAG0E,KAAS,QAASjY,GAAI,CACrBA,EAAEQ,iBADmB,MAELwT,KAAOkE,MAAMnH,EAAQ,CACjCzM,MAAO,SAAA+O,GAAC,OAAkB,IAAdA,EAAEzC,WADXtM,EAFc,oBAKrB4O,KAAWC,SACPpC,EACA,CAACH,SAAStM,GACV,CAACA,MAAO,SAAA+O,GAAC,OAAIzN,KAAK0N,OAAOD,IAAIE,OAAO,IAG5C,IAAG0E,KAAS,QAASjY,KAElBiY,KAAS,QAASjY,GAArB,CACA,GAAGiY,KAAS,cAAejY,GAAI,OAAOoW,KACtC,GAAG6B,KAAS,QAASjY,GAAI,OAAOoW,KAChC,IAAG6B,KAAS,MAAOjY,GAAnB,CACA,IAAM6W,EAAS9F,EAAOoB,UAAU0E,OAC1B7Q,EAAQ+K,EAAOoB,UAAUnM,MAC/B,GAAG6Q,EAAOzE,KAAK,KAAOpM,EAAMoM,KAAK,IAC9ByE,EAAOhD,SAAW7N,EAAM6N,SAExBvX,EAAM8b,eAAe9b,EAAM+b,kBAAiB,GAC3CtH,EAAOoB,aACRV,EAAYrR,OAAS,GAAKmR,EAAWnR,OAAS,GAAKuR,EAAcvR,OAAS,GA7O1D,SAACJ,GACpB,MAAW,YAARA,EAAE+E,KACD/E,EAAEQ,iBACF6Q,EAAmB,IAAV7M,EAAcmN,EAAcvR,OAAS,EAAIoE,EAAQ,IACnD,GAEA,cAARxE,EAAE+E,KACD/E,EAAEQ,iBACF6Q,EAAS7M,IAAUmN,EAAcvR,OAAS,EAAI,EAAIoE,EAAQ,IACnD,QAHX,EAwOO8T,CAAetY,KADtB,CArCqB,IAwCboS,EAASrB,EAAOoB,UAAUnM,MAA1BoM,KACAhX,EAAS8E,EAAMkS,EAAK,IAApBhX,KACFiX,EAAcnS,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KACzC0S,EAAY9D,EAAYkB,MAAM,KACpC,GAAY,cAARvT,EAAE+E,IAAmB,OA3LR,SAACqN,EAAMpS,EAAG5E,GAC3B,IAAMyb,EAAS9F,EAAOoB,UAAU0E,OAC1B7Q,EAAQ+K,EAAOoB,UAAUnM,MAC/B,GAAG6Q,EAAOzE,KAAK,KAAOpM,EAAMoM,KAAK,IAC9ByE,EAAOhD,SAAW7N,EAAM6N,OAA3B,CACA,IAAMxB,EAAcnS,EAAMkS,EAAK,IAAIvJ,SAASuJ,EAAK,IAAI3O,KACrD,GAAU,YAAPrI,EAAkB,CACjB,IAAMmY,EAAQlB,EAAYkB,MAAM,KAIhC,GAHoB,IAAjBA,EAAMnT,QAAyC,IAAzBmT,EAAM,GAAGuC,OAAO1V,QACrCgR,EAAU,MAEK,IAAhByF,EAAOhD,OAAY,OAE1B,GAAIzY,GACmB,IAAhByb,EAAOhD,OADd,CAGA,IAAMA,EAAS9C,EAAOoB,UAAUnM,MAAM6N,OACtC,KAAGxB,EAAYjS,OAAS,GAAKyT,EAAS,KACnB,KAAhBxB,GAA8B,YAAPjX,GAAqBA,GAG/C,OADA4E,EAAEQ,iBACK4T,EAAQ,QAsKiBmE,CAAanG,EAAMpS,EAAG5E,GACtD,GAAc,UAAV4E,EAAE+E,IAAiB,OAtFP,SAACqN,EAAMpS,EAAG5E,GAE1B,OADG8E,EAAME,QAAU,IAAIJ,EAAEQ,iBACb,eAATpF,GACC2V,EAAOiE,cACAZ,EAAQ,OAEfhZ,GAAQ8E,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,OAASvD,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KAAKyO,cAGpE,WAAT9W,GACC4E,EAAEQ,iBACFwS,EAAY,MACe,kBAAxB9S,EAAMkS,EAAK,GAAG,GAAGhX,KAChBoZ,GAAatU,EAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,MAE1C+Q,GAAatU,EAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,MAEvCuP,EAAY,cAEX,kBAAT5X,GACC4E,EAAEQ,iBACKwS,EAAY,WAEhB+B,GAAc3C,EAAMpS,EAAG5E,GAhBnB2V,EAAOiE,cA+EYwD,CAAYpG,EAAMpS,EAAG5E,GAEnD,GAAc,QAAV4E,EAAE+E,IAAe,OA9DP,SAACqN,EAAMpS,GACrB,IAAgB,OAAb2R,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAS,GAAKmR,EAAWnR,OAAS,GAAKqR,EAAYrR,OAAO,EAIxE,OAHAJ,EAAEQ,iBACFkR,EAAe,IACfL,EAAS,GACO,UAAbE,EAA6BgD,GAAiBnC,GACjC,cAAbb,EAAiCiC,EAAuBpB,GACpDqC,GAAYrC,GAuDKqG,CAAUrG,EAAMpS,GAC5C,IAtWoB,SAACA,EAAGqS,EAAajX,GACrC,MAAU,eAAPA,KACS,cAAT4E,EAAEY,OACFZ,EAAE0Y,UACFrG,IAAgBA,EAAYH,iBAE3BkC,EAAQ,eACD,GA+VPuE,CAAgB3Y,EAAGqS,EAAajX,KAnInB,SAAC+a,EAAW/a,GAC7B,GAAU,YAAPA,EAAkB,OAAO,EAC5B,IAAMqY,EAAS0C,EAAU,GAAGjE,cAC5B,OAAc,SAAXuB,GAAgC,SAAXA,GAAgC,cAAXA,KACzCW,EAAQ,YACD,GA+HPwE,CAAazC,EAAW/a,MACzBgX,EAAK,GAAK,GA5VQ,SAACA,EAAMpS,EAAGqS,EAAajX,GAC5C,IAAIA,EAAM,OAAO,EACjB,IAGIyd,EAHEC,EAAe5Y,EAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KAC5CsV,EAAuB7Y,EAAMkS,EAAK,GAAG,GAAGhX,KACxC4d,EAAuB3G,EAAYH,cAKzC,OAHGhS,EAAMkS,EAAK,GAAG,KACbyG,EAAW3Y,EAAMkS,EAAK,GAAG,GAAGhX,QAGX,KAAjB0d,GACa,UAAV9Y,EAAE+E,KACDiU,EAAqB7E,SAAS,SAC9B6E,EAAqB7E,SAAS,SAC9B6E,EAAqB7E,SAAS,cACN,WAAzB4E,GACa,WAAbF,KAEHzE,EAAQ,OACD,GA0UH6E,CAAiB7G,EAAMpS,EAAGqS,EAAajX,MA/Q5B,SAACgX,EAAMC,EAAa6G,EAAa9d,GACpD,MAAU,cAAPA,QACAgX,EAAK,GAAK,GAGY,WAFAlS,EAAMkS,EAAK,GAAG,GAAGhX,MAG/B8d,GACA7G,IAAgBA,EAAYH,gBAC3BG,EAAY8B,SAAS,SACrB9B,EAAY8B,SAAS,SACrB9B,EAAY8B,SAAS,cACrB9B,EAAY8B,SAAS,QAEzBC,EAAQ,cACD,IAmQX+E,CAAe/G,EAAMC,EAAajX,IACnCgX,EAAK,GAAK,EAAG,CACZ,GAxSmB,SAACA,EAAMC,EAAarS,EAAG5E,GAC9C,GAAU,kBAAPA,EAAwB,OAAO,EAClC,IAAM+Z,EAAYjV,EAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KAC/C,QAAG0R,IAAcA,EAAUjD,iBACJ,MAAnBG,EAAY,IAAuB,MAARrS,EAAE+E,KAAa/E,EAAE0Y,aAE5CtE,EAAQ,iBACRlB,KAAWC,SACPpC,EACA,CAAE3V,KAAM,aACR,CACI0Z,GAAI,CAAC1C,EAAK,GAAG,GACb9N,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,IACnC+F,KAAM,YAGP,GAwRHC,CAAmBjH,EAAMC,EAAarS,EAAG5E,GAAO,OACpD,GA1UY,SAACgX,EAAMhX,GACvB,GAAU,WAAPA,EAAiB,OAAO,EAC3B,IAAMiX,EAAcnS,EAAMkS,EAAK,IAAIvJ,SAAS,GAAGpF,KACzCqV,EAAe5Y,EAAMkS,EAAK,GAAG,GAAGvJ,SAAS,GAAGpF,KAC5C6V,EAAepZ,EAAMkS,EAAK,GAAG,GAAGhX,KACtC,OACI0d,IAAiBA,EAAa5G,eAC3B4G,EAAa1Y,OAAS,GACkB,MAAxCiS,EAAYA,EAAYjS,OAAS,IACd,MAAnBiS,EAAY,IAC8B,MAA1CyG,EAAaA,EAAa1Y,OAAS,KAClC0Y,EAAa3E,SAAS,UACtB2E,EAAa3E,SAAS,UACtB2E,EAAa3E,SAAS,cAE1BjB,KAAWC,SACPpC,EACA,CAAE3V,KAAM,aACR,CACI0Z,GAAI,CAAC1C,EAAK,GAAG,GACb9N,MAAO,SAAA+O,GAAC,OAAIW,KAAOM,QAAQvD,EAAQsC,IACnC+F,KAAM,WAGdhF,EAAQ,WACD,GACF0E,EAAa1Y,OAAS,GAAyB,MAAnBiS,EAAY,KAAoC,MAApByG,EAAa,IAA6B,cAAfQ,KACxFlF,EAAQ,WACD,GA8SHmF,CAAYnH,EAAMhX,GAAO,YA+J+CyX,cAAeA,KACpFpB,EAAYrR,OAAS,GAAkB,UAAbmR,GAA0BE,EAAYrR,OAAS,GAAkB,UAAbmR,GAAyE,eAAjD,UAAArR,EAAK,OAAC6Q,QAAD,IAACA,GAAD,UAACA,EAAQoB,iBAAT,iBAAC,EAAmBnM,aAApB,aAAC,EAA0BoM,KAAK,WAArC,eAA0ChX,QACnJ,eAAC,GAAD,CAAcuU,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,IAE9DiN,EAAYrR,OAAS,GAAkB,cAAbmR,IAAyC,OAAbI,QAAa,IAAbA,OAAA,EAAAA,EAAevR,QAAQ,GAC9E,eAAC,GAAD,CAAcuP,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,IAE9DiN,EAAYrR,OAAS,GAAkB,UAAbmR,GAAwBI,EAAcvR,OAAQ,GACzE,eAAC,GAAD,CAAcuP,SAAUA,EAAUT,MAAOyC,EAAenN,MAAOA,UASzE8d,GAAc7gB,YAAO8gB,KAAP9gB,CAAH,8BAGXlC,GAAYkC,IAAOE,IAAV,+cAkBTkW,GAAiBpW,YAAO+X,KAAP/X,CAAH,8EC1mBLrF,gBAJS,SAAAC,GAAK,MAAK,CAC9BmmB,eAAgBnmB,EAAMlD,IAAIqpB,kBAGfpmB,EA/BK,SAACE,GAOjB,OALAU,qBAAU,W5BaP,IAAwB1B,E4BZvBgB,EAAMnB,U5BYiBG,G4BZO,E5Ba5B,SAACH,GACHA,EAAS,CAACC,KAAMH,EAAkBM,QAASD,S4BZ5C,IAGC,eAAC,GAAD,UACI,gBAACmnB,GAAD,WACI,gBAAC,GAAD,6BAAsB,eAACC,GAAD,kCACtB,eAACC,GAAD,sEACA,eAAC,GAAD,IACA,eAAC,GAAD,CAAY1Z,GAAG,sBAAf,SACI,eAAC2Z,GAAD,gCAEJ,eAACC,GAAD,UACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAAOP,eAAgBlmB,EAAMkmB,eAAgB7Z,MAAM,6BAA6BC,QAAQ,YAAxF,SAAoG,uBAAMM,EAAE,4EAC5G,eAAC8Z,GAAD,CAAWR,eAAgBlmB,EAAMkmB,eAAjC,sCAclBE,GAAOjhB,IAAO8N,KAAV,wDAIJwT,GAAQthB,IAAOqH,IAAV,8WACM,SAAAxM,GAAK,OAAEA,EAAMkmB,eAAiB,iBAAmB,oBAGnD,SAAAlmB,GAAK,OAAEA,EAAMkmB,eAAiB,EAAI,KAW3CQ,GAAYvhB,IAAOC,GAAV,mVACA,SAAApF,GAAK,OAAEA,EAAMkmB,eAAiB,EAAI,KAe3CM,GAAgBrhB,IAAOE,IAAV,qIAQbkhB,GAAgBphB,IAAOE,IAAV,kMAWb8gB,GAAmBhhB,IAAOE,IAAV,0JAShBghB,GAAWlhB,IAAOoK,GAAV,0HAORtM,GAAYkC,IAAOE,IAAV,8PAYTihB,GAAanhB,IAAOE,IAAV,wJAQV2D,GAAQ7D,IAAOO,GAAV,qNAWL+f,GAAatgB,YAAOoI,KAAPpI,CAAH,iMAKNmhB,IChIKK,GAhBW,WACtB,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,WACI,iCACI,eAAC,GAAD,yCACA,eAAC,GAAD,0DAEJ,eAACC,GAAD,CAASC,aAAW,EAACC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAAxC,SACI,yBAAQC,IAAI,yJAS1BhkB,GAAYkC,IAAO+hB,QAAV,sGAMTN,GAAUzhB,IAAOgiB,MAAV,oSAcPhB,GAAmBhhB,IAAOE,IAAV,yTAehB2D,GAAQ7D,IAAOO,GAAV,sKASL2gB,GAAWlhB,IAAOoK,GAAV,gJCvCRpQ,GAAS,CACX,UACA,UACA,UACA,UACA,WAGWioB,GA/BO,WAClB,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAAOL,IAAI,wIAAwIM,IAAI,yBACvJ,eAACC,GAAD,UACKroB,GAAOoL,KAAI,SAAC/F,EAAO0D,GAChB,OACI,eAACuf,GAAD,CAAOjjB,MAAOA,GAAY0D,WAK1C,iCACI,eAAC,GAAD,4BACA,eAAC,GAAD,sHAiBdjF,GAAYkC,IAAO+hB,QAAV,gFAKTf,GAAmBhhB,IAAOE,IAAV,0bAmBhBghB,GAAWlhB,IAAOoK,GAAV,gJAQRvG,GAAQ7D,IAAOO,GAAV,gJAQL4hB,GAAQniB,IAAOuiB,IAAV,gXAiBLL,GAAuBliB,IAAOE,IAAV,mXAkBpBmiB,GAASriB,IAAOE,IAAV,yGAMNoiB,GAAQtiB,IAAOqK,QAAV,sXACa,SAAAxP,GAAK,OAAEA,EAAMwE,SClGtBmjB,GAjBU,WACrB,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,WACI,iCACI,eAAC,GAAD,8BACA,eAAC,GAAD,yEAEJ,eAAC,GAAD,CAASd,aAAW,EAACC,UAAQ,EAACC,OAAK,EAACC,MAAI,EAAxC,SACI,yBAAQloB,KAAK,YAAYmoB,IAAI,8JAU3CL,GAAUzhB,IAAOgiB,MAAV,+TAePlkB,GAAYkC,IAAO+hB,QAAV,gFAKTb,GAAWlhB,IAAOoK,GAAV,gJAQR4W,GAAmBhhB,IAAOE,IAAV,wWAiBhB2D,GAAQ7D,IAAOO,GAAV,gJClDIkiB,GAbA,WACX,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,WACI,eAAC,GAAD,sCACA,eAAC,GAAD,CAAYjb,GAAG,sBAAf,SACI,eAAC,GAAD,kCASd1J,GAAYkC,IAAO+hB,QAAV,2HAOTZ,GAAanhB,IAAOE,IAAV,0NAWV8gB,GAAmBhhB,IAAOE,IAAV,2TAehB2D,GAAQ7D,IAAOO,GAAV,2UAgBL+f,GAAatgB,YAAOoI,KAAPpI,CAAH,iMAKNmhB,ICnCKxmB,gBAFS,SAAAC,GAAK,MAAK,KAEnBD,EAzBK,SAACE,GAWjB,OATAU,qBAAU,WACNV,EAAM6nB,cAAa,GACnB7nB,EAAMnB,SAASM,EAAO,CAClByB,WAAY,UACZC,YAAa,aAGlB,IAGC,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,UASNoC,GAAYkC,IAAOE,IAAV,uDCyHAvF,gBAVS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBioB,YAAa/nB,EAAMgoB,UAAUD,YAC7BzoB,aAAcU,EAAMlD,IAAIwC,aACxBI,SAAUM,EAAMlD,IAAI4C,SACpBD,aAAcO,EAAMlD,IAAI2C,aACxBD,aAAcQ,EAAMlD,IAAI0C,aACxBD,eAAgBS,EAAMlD,IAAIyC,kBAGfQ,EAhJQ,SAACE,GAAW,IAAD,EACNC,mBAAS,IADH,mBACvBwB,EADuB,KACjBumB,EADiB,KAGxBC,EAAgB,WAClB,MAAuB,WAAnBjoB,EAAMkoB,YAAyBloB,EAAMX,aAAe,EAAU8oB,IAC3DC,EAAkBpoB,EAAMkoB,aAG7BG,EAAc,WAChB,OAAgC,IAA7BroB,EAAM8nB,YAAYhkB,OAAqB9D,EAAMH,SAASmB,OAClDhB,EAAM8nB,YAAY9nB,EAAM8nB,YAAYhkB,OAAS,GAAGiE,OAGrDogB,EAAe,WACjB,IAAMtlB,EAAWwlB,IACX/hB,EAAYC,KAAKC,MACjB8hB,EAAmB,CACrB7mB,OACAoB,SAAUiF,OAAOjF,GACjB/D,KAAM,SACNiJ,MAAOD,OAAOxB,GACdM,aAAcN,GAElBiiB,EAAkBzgB,OAAOxB,GAAYgiB,EAAkBtoB,EAAMwoB,0BA0B3DD,EAAoB,SAACxgB,EAAO0gB,EAAgB9e,GAC9CtM,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXC,IAAI2G,GACJ1G,IAJD,eAKOonB,IAENlnB,MAAK,WACFmnB,EAAcD,GACX9e,GAAYA,GAAW,OAI5Bgf,EAAoB,SAAC5gB,EAAO6gB,EAAW9pB,GACzCzB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI2G,GACJ1G,IAJD,eAKOunB,IAENrnB,MAAK,WACFsnB,EAAiB/pB,EAAMiJ,GACvB/H,EAAMwoB,yBAAwB,GAC3BxoB,EAAM8oB,oBAAoB/gB,OACzB5B,GAAmBnG,EAAMH,SAASmB,OAAQ8G,OAAO9H,EAAM8oB,oBAAoB/gB,YAKjF8gB,EAAmB,SAAC/pB,EAAMiJ,GAC5B,IAAMkD,EAAQ,4BAAwBnM,EAAxB,YAAgCiJ,GAC9CoJ,OAAO4X,KAAK9d,EAAU,YAAczB,SAASyB,SAAWA,IAGtDmd,EAAoB,SAACtpB,GACvB,IAAM+D,EAAWwlB,IACjBW,EAAwBnmB,EAAU/D,IAGhCkqB,EAA0B,SAA1BA,EAA2BnmB,EAAU/D,GACvC,IAAMiJ,E/BzGY,WAItB,IAHA,IAAIsI,EAAS,GACPkF,EAAa,iEACb0T,EAAmB1T,EAAWzR,OAC1B6G,EAAI,EAAGA,EAAI,GAAIA,IACrB0F,GAAUkF,EAAW2T,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAE3D,OAAO5Y,E+BkGWiZ,GACdjsB,EAAG8D,WAAW,SACbooB,MAAM,QAAS,KAAMxhB,GACrBhC,MACAxE,MAAK,SAAAvC,GACCA,EAAKwqB,OA7DG,SAAC3mB,EAAUkF,EAAOjJ,GACjC,IAAMwH,EAAYC,KAAKC,MACjBiiB,EAAiB,CACnBhnB,OACA3C,OACA+D,SAAUiF,OAAOjF,GACjBkF,MAAOD,OAAOC,IAElBwgB,EAAkBxgB,EAAD,YAAC,eAAW0gB,GAAZ,IAA4B7hB,aAAcN,KAC3D,IAAIa,EAAe,UAAPrI,EAAiB,GAAK,GACxB,YAAPA,IAAkB2pB,EAAc,YAAkB,GACrDE,EAAkB5gB,EAAD,YAAC,eAAW0gB,GAAZ,IAA4BthB,SAAOrI,GAmD5C2qB,CAAW5mB,EAAUkF,EAAOjJ,GAvEvB,SAACiJ,GACd1K,EAAG8D,WAAW,SACbC,IAAI2G,GACJ1G,IAAI,CACD0G,UAEHlG,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,MAkEjB4nB,CAAS3hB,IAETihB,QAYNN,EAAgB,SAAC1pB,GACK,IAArBgB,EAAMX,cAAkBW,EAAMnB,SAASY,EAAS,CAACT,GAAF,oBAAWgB,EAAMP,aAC3C,IAArBO,EAAMX,cAAkBW,EAAMnB,SAASW,EAAa,CAACR,GAAF,oBAAWgB,EAAMR,iBAC/C,IAArBQ,EAAMX,cAAkBW,EAAMnB,SAASU,EAAa,CAACP,GAAF,oBAAWgB,EAAMT,iBAC/C,IAArBS,EAAMX,cAAkBW,EAAMnB,SAASS,EAAe,CAACN,GAAF,oBAAWgB,EAAMV,oBAG7E,OACI,gBAAC,GAAD,CAAOsJ,aAAW,kBAAkBC,OAAQ7I,EAAM2pB,qBAAsBhhB,UAAW,kBAAI3I,EAAMwoB,yBAAwB,IAArH,UACI,eAACoB,GAAD,CAAahhB,aAAW,eAAe3E,QAAS,kBAAIjE,EAAMwoB,yBAAwB,IAAlF,SACI,eAAC,GAAD,UAAe,uBAAM5b,EAAE,wKAE3B,gBAAC,GAAD,yBAAoB5M,EAAMkoB,cAC1B,eAAC2B,GAAD,CAAejhB,aAAW,iBAAiBK,UApBnC,SAACvF,GACF,UAARA,EAAE+E,MACD/E,EAAEQ,iBACF+jB,MAiB+D/e,aAAa,MAAMzF,SAAU,SAACC,GAAD,OAAKskB,EAAQtkB,EAAEC,OAAOC,UAClH,iCACI,eAAC,GAAD,CAAQK,QAAS,kBAAIjE,EAAMwoB,yBAAwB,IAAnD,oBACA,eAAC,GAAD,CAAQvkB,QAASgkB,EAAjB,qCAkBVne,GAAS3E,IAAOO,GAAV,gFAKNkkB,GAAczkB,IAAOK,OAAV,yDAIXyG,GAAS9G,IAAOK,OAAV,0NAUN+D,GAASpE,IAAOK,OAAV,mJAQNqkB,GAAgB1kB,IAAOM,MAAV,uNASbiD,GAAQvD,YAAO6E,KAAP7E,CAAH,6d,SCrLI2kB,GAXQ,SAAC9pB,GACpB,OACI,gBAAC+pB,GAAD,CAAMC,SAAU,kBAAIhqB,EAAMiqB,UAAUjqB,EAAMkqB,UAA1C,UACI,eAAC,GAAD,UACI,eAAC,GAAD,UAAgBlqB,EAAMuM,aAE1B,eAAC4d,GAAD,UAAOnqB,EAAMkqB,cAOnBnb,GAAgB5J,IAAOE,IAAV,iFAKb0kB,GAAO5kB,YAAOilB,KAAPjlB,CAAH,oKASJglB,GAAOhlB,IAAOmK,EAAV,+DCGKxP,I,OAAAA,aAJS,SAAAC,GAAK,MAAK,CAC9BV,aAAcU,EAAMlD,IAAIwC,gBAGbS,EA1BS,SAACE,GAErB,IAAMiqB,EAAY,SAACnrB,GACfkB,EAAMwoB,yBAAwB,GAC9BxoB,EAAMqqB,cAAcvrB,IAGxB,OACI,gBAAC,KAAD,WACI,gBAAC,GAAD,WAAW,eAAC,GAAD,CAAMgT,eAAA,EAAN,eAAX,iBACA,gBAACwY,GAAD,WAC0B,IAArBtqB,EAAMX,cACP,eAAC,GAAD,CAAgB6qB,QAAQ,SAASD,UAAWA,EAA5C,SAAuD,uBAAMrd,EAAE,iHAE/D,eAAC,GAAD,CAAgBsd,QAAQ,aAAaD,UAAWA,EAAhD,SAA2D,uBAAMrd,EAAE,8rDACnE,eAAC,GAAD,CAAgBsd,QAAQ,UAAUD,UAAWA,EAA7C,SAAwD,uBAAMrd,EAAE,4HAChE,eAAC,GAAD,CAAgBsd,QAAQ,QAAQD,UAAWA,EAA3C,SAAsD,uBAAMrd,EAAE,4MAYxEiF,GAAO1M,IAAO8N,KAAV,oIAOJrB,GAAYzM,YAAOolB,KAAPplB,CAAH,mRAYTmlB,GAAOnlB,YAAOqlB,KAAPrlB,CAAH,8GCvDGslB,GAAc,cACdC,GAAc,cACdC,GAAkB,kBAExB,SAASC,KACZ,OAAM,SAAC/rB,GACHA,EAAS,CAACC,KAAM6rB,MAIjB,SAAS7nB,GAAW9D,GACvB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAM4rB,GAAazrB,QAASD,KAIvC,SAAS8oB,GAAY9oB,GACxB,OAAM,SAACH,GACHA,EAAS,CAACC,KAAM2rB,GAAaxrB,QAASD,KCT9C,I,iXAoDec,gBARS,SAAAC,GAAK,MAAK,CAC9B+nB,YAAa/nB,EAAMgoB,UAAUD,YAC7BzoB,aAAcU,EAAMlD,IAAIwC,aACxBG,aAAcO,EAAMlD,IAAI2C,aACxBD,aAAcQ,EAAMlD,IAAI0C,aACxBD,eAAgBS,EAAMlD,IAAIyC,kBAGfQ,EApDK,SAACE,GAEjB,IAcM6qB,EAAwB,SAACC,IAdJ,SAACA,GAAiB9qB,EAAMnB,SAASQ,EAAayrB,IAerEC,CAAmBD,GAbG,SAACA,GACvB,IACME,EADU,aAAOhrB,EAAM8nB,aACSmD,MAAM,EAAGH,EAAa,GAC5D9qB,EAAMnB,SAASipB,GAAYkD,IAW3BE,CAAkBJ,GARM,SAACA,GACtBA,GAAgB,GAAG9qB,EAAMnB,SAASW,EAAa,KAC/CsrB,GAAgB,GAAG9qB,EAAMnB,SAASU,EAAa,KAC/CurB,GAAgB,GAAG9qB,EAAMnB,SAASS,EAAe,KAMpD6rB,CAAoBL,IAGxB,OACI,eAAC,GAAD,UACK9qB,EAAM8nB,YAAYvd,KAAI,SAAC6gB,EAAOljB,GAC3B,OACI,gBAACmjB,GAAD,WACKnjB,IAAUlI,EAAM8nB,YAAYhkB,OAAQ,EACrC,eAACwnB,GAAD,UAAYF,EAAM3pB,OAElB,eAAC8pB,GAAD,CAAOtnB,QAAS,kBAAI4mB,EAAsB3iB,IAA1C,SAAmDkjB,EAAM3pB,OAExDyG,IAAUlI,EAAM8nB,YAAYhkB,OAAQ,GACrC,eAAC,GAAD,UACI,eAAC,GAAD,UAAe,uBAAM8I,EAAE,wDARV1E,WA4BnC6G,GAAgB5J,IAAOE,IAAV,qEAKbgmB,GAAiBlmB,IAAOE,IAAV,sGAMdimB,GAAYnmB,IAAOoK,GAAV,8EAKTgc,GAAQpmB,IAAOK,OAAV,gKAULvC,GAAYkC,IAAOugB,IAAV,6FClEA8F,GAtBG,SAACxrB,GACf,OACI,gBAACyrB,GAAD,WACI,gBAACC,GAAD,CAAgBC,KAAK,MAArB,UACqB,WAAhB3rB,EAAMkqB,SACH,eAAC0B,GAAD,UAAS,eAAC,GAAD,UAAe,uBAAMhf,EAAE,mHAEnB,eAAhB5M,EAAMkqB,SACH,eAAC0B,GAAD,UAAS,eAAC,GAAD,UAAe,uBAAMhf,EAAE,gsDAEnB,UAAhB5M,EAAMkqB,SACH,eAAC0B,GAAD,UAAS,eAAC,GAAD,UAAe,uBAAMhf,EAAE,oMAEnB,YAAhB5M,EAAMkqB,SACH,eAAC0B,GAAD,UAAS,eAAC,GAAD,UAAe,uBAAMhf,EAAE,iIAGxC,eAACif,GAAD,UAAO7rB,EAAM8rB,cAOnBJ,GAAiBvmB,IAAOE,IAAV,2FACI,SAAArF,GAAK,OAAEA,EAAM2rB,QAK/BE,GAAO1mB,IAAOmK,EAAV,yIAOJmc,GAAuBtmB,IAAOE,IAAV,4EAKpBumB,GAAUzmB,IAAOE,IAAV,6HC9BE0mB,GAZM,SAAC/rB,GAClB,OACI,gBAAC,GAAD,CAAyB4I,aAAY5I,EAAM0N,UAAWzJ,QAAS,SAACP,GAAD,OAAK1D,EAAMiqB,UAAUvmB,IAAI4B,MAAOtF,EAAMgsB,UAArG,UACI,eAAC,GAAD,UAAYhsB,EAAMoH,QAClB,eAAC,GAAD,IACA,eAAC,GAAD,UAAM,eAAC,GAAD,UACDpH,EAAMuM,iBAQjBwB,GAAY5I,IAAOE,IAAV,2XAgBT2I,GAAiB7I,IAAOE,IAAV,+cAuBdoI,GAA0BtI,IAAOK,OAAV,6oBAKfwI,GAGAD,GAKAC,GAGAD,GAOIC,GAGAD,IAQZE,GAAO9I,IAAOE,IAAV,uICzDK4mB,GA5BY,SAACjsB,GAAW,IAAD,EAClC,OACI,eAACksB,GAAD,CAAWte,KAAK,MAAhB,mBACK5N,EAAMmsB,UAAUnsB,EAAMX,qBAD3B,aACK,EAAqCkL,KAAI,SAACnJ,EAAK8G,GAC5C,OACI,gBAACkkB,GAAD,CAAK5oB,GAAG,qBAAqB6oB,SAAS,IAAIpjB,UAAW,SAACvF,GAAD,OAAK1D,EAAMssB,YAAY5oB,EAAEY,KAAMlD,EAAItC,KAAMsC,EAAI2G,MAAO3G,EAAIK,OAAOmM,KAAK,SAAS2e,QAAS,kBAAIvsB,EAAMwsB,cAAcprB,EAAK8G,IAAQjE,QAAS,kBAAIjE,EAAMysB,WAAWrrB,EAAItC,KAAMsC,EAAI2G,MAAO3G,EAAIK,OAAvO,UACI,eAACirB,GAAD,CAAM9e,KAAK,OAAX,SACI,eAAC,GAAD,CAAWsc,QAAS9oB,EAAItC,KAAMgtB,QAAS1qB,EAAIK,SAE/C,eAACirB,GAAD,CAAM9jB,aAAA,yBAA8BxH,EAAItC,MAAQ6sB,KAAK,QAAQ/d,KAAK,OAAlE,SAA0ExM,EAAItC,OAC9E,eAAC6tB,GAAD,CAAU/jB,aAAA,yBAA8BrG,KAAOnB,EAAIwF,cAAcpE,OAAO,OAASmpB,KAAK,QAAQ/d,KAAK,OAAnG,SAA0G,eAAC,GAAD,UAAOrL,KAAOnB,EAAIwF,cAAcpE,OAAO,UACjJ,eAACkqB,GAAD,CAAMf,KAAK,QAAQ/d,KAAK,OAAxB,SACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAcF,UAAU,kBAAkBtG,MAAM,SAAS6iB,UAAWjqB,EAAM4sB,kBAAmBZ,UAAU,cAAvG,SACI,uBAAMpf,EAAE,8QAEZ,eAAC,GAAD,CAAcc,UAAU,kBAAkBtG,MAAM,SAAS6iB,UAAWjqB,EAAM6sB,kBAAmBb,UAAU,cAAvG,SACI,uBAAMpf,EAAE,gVAZ2N1E,SAyBjQ3B,GAAOpB,IAAOmK,EAAV,wDAIJP,GAAgB5J,IAAOE,IAAV,kJASb6mB,GAAY/mB,IAAOE,IAAV,6DAIT+mB,GAAMjnB,IAAOE,IAAV,igCASK0J,GAUJA,GAOAA,IAeJ2d,GAAOvnB,IAAOE,IAAV,2ZAac,SAAArF,GAAK,OAAEA,EAAM2rB,QAK/BgB,GAAWxnB,IAAOE,IAAV,uPAKU,SAAArF,GAAK,OAAEA,EAAM2rB,QCJtB7rB,gBATS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBR,aAAcU,EAAMlD,IAAIwC,aACxBI,SAAUM,EAAMlD,IAAI4C,SACpBD,aAAcO,EAAMlD,IAAI2C,aACxBD,aAAcQ,EAAMlD,IAAI0C,aACxBD,eAAgBS,EAAMlD,IAAIyC,kBAGfQ,EAlGS,SAACE,GAAW,IAAD,EACPC,mBAAS,IADF,mBACxBwB,EADwB,KAClBumB,EADkB,KAuBzB8E,EAAa,WAnBRzvB,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXC,IAAI0G,OAAO9H,EAAM8oB,oBAAoB/gB,QACrCpB,OAAO,CACJlF,SAgBHF,MAAK,WACFwrB,IACA/sB,EAAMgtB,oBAAmB,MAEO,WAAjChtB,EAAM8oB,oBAAoBhqB,MAftBzB,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI0G,OAAO9H,EAAM8oB,oBAAoB/gB,QACrCpB,OAAO,CACJlF,SAYCI,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAI5BqqB,EAAY,CACdc,EAAGjtB,EAAMP,SACTytB,EAAGltB,EAAMR,aACT2tB,EAAGntB,EAAMT,aACT6tB,EAAGptB,EAAMV,gBAGPytB,EAAkB,WACpB,IAAIM,EAAelB,EAAUnsB,EAAMX,cAEnC,OADAguB,EAAartB,EAAM8oB,oBAAoB/P,cAActX,KAAOA,EACpC,IAArBzB,EAAMX,aAAyBW,EAAMnB,SAASY,EAAS4tB,IAClC,IAArBrtB,EAAMX,aAAyBW,EAAMnB,SAASW,EAAa6tB,IACtC,IAArBrtB,EAAMX,aAAyBW,EAAMnB,SAASU,EAAa8tB,IACtC,IAArBrtB,EAAMX,aAAyBW,EAAMnB,SAASS,EAAe+tB,SAAhE,GAGE1jB,EAAa,SAACjG,GACJ,UAATA,EAAEY,MAA2B,UAATZ,EAAEY,MAA2B,WAATZ,EAAEY,OACzCZ,EAAEQ,iBACFlE,EAAMgtB,oBAAmB,KAkBjC,OACI,eAAC,GAAD,UACI,gBAACM,GAAD,CAAU1kB,aAAA,yBAA8B5I,EAAM8oB,oBAAoBrnB,MAAQoH,OAAQ7I,EAAMutB,gBAAiB5kB,UAAW,kBAAI3I,EAAMgtB,oBAAmB,IAAjJ,UACI,eAAC,GAAD,CAAapkB,aAAW,sBAAsBK,UAAWU,EAAYC,YAAa,kBAAI5J,EAAMgtB,oBAAmB,IAAQxpB,GAAG,0BAA1H,SACI,eAAC,GAAD,UAAe,uBAAMoJ,EAAE,wKAE3B,gBAAC,GAAD,qBAAgB5M,EAAM8oB,oBAAoBhqB,QAC1C,eAAC,GAAD,CAAe8J,aAAW,iBAAiBK,UAdvC,SAACvF,GACF,UAARA,EAAE+E,MACD/E,EAAEQ,iBACF4oB,MAWmE3jB,aAAcnJ,EAAM8oB,oBAAoBrnB,KAAMyH,aAAa,MAAM1F,GAAG,oBAAoBC,SAAU,SAACC,GAAD,OAAKskB,EAAQtkB,EAAEC,OAAOC,UACvL,iCACI,eAAC,GAAD,CAAQqF,UAAWU,EAAYC,YAAa,kBAAI5J,EAAMgtB,oBAAmB,IAAzE,oBACA,eAAC,GAAD,CAAQ/jB,UAxBI,SAACvF,GACb,UAATA,EAAEY,MAA2B,UAATZ,EAAEY,MAA2B,WAATZ,EAAEY,OACzCZ,EAAEQ,iBACF4oB,MAqBgDljB,YAAakjB,EAArD,+BAkBdlD,GAAczkB,IAAOK,OAAV,yDAIXsE,GAAS3E,IAAOO,GAAV,uDAINuG,GAAS9G,IAAOK,OAAV,+JAQN+D,GAASpE,IAAOK,OAAV,mLASNqkB,GAAgB1kB,IAAOM,MAAV,uNASb6nB,GAAWnoB,YAAO6E,KAAP7E,CAAH,odAqBRlC,GAAYkC,IAAOE,IAAV,iDC7BAvF,gBAbS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBgH,YAAa9G,EAAMlD,IAAIgK,YACvBC,cAAe/G,EAAMlD,IAAIiK,cACzBpH,sBAAuBK,EAAMlD,IAAI6C,sBACjCC,oBAAqBI,EAAMlD,IAAI8C,oBAC/BN,aAAcU,EAAMlD,IAAIwC,aACxBI,SAAUM,EAAMlD,IAAI4C,SACpBD,aAAcO,EAAMlD,IAAI2C,aACxBD,aAAcQ,EAAMlD,IAAI0C,aACxBD,eAAgBS,EAAMlD,IAAIyC,kBAGfQ,EA/HQ,SAACE,GAEpB,IAKMwtB,EAAY,SAACC,GACf,MAAkB,WAAfA,EAAQ3uB,KAAwB4uB,EAAaD,EAAQ1lB,OACjD4lB,EAAqBF,EAAQ1lB,QAqBlC4lB,EAAuB,SAAC5lB,IAlBX,SAACA,GAChB1K,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI0G,OAAOC,IACX6lB,SACA/rB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAaxB+rB,CAAW9lB,GAVO,SAACA,GACnB1K,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXC,IAAI0G,OAAOC,IACX6lB,SACA/rB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAKxBgsB,CAAc/lB,GACdgmB,EAAiBhmB,GACjB/H,EAAMkK,oBAAmB,IAWvB8jB,EAAuB,WARH,IAACjmB,EAChB1K,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXooB,MAAM,WAAY,KAAMzhB,OAAOC,IAC/BhC,MAKAxE,MAAK,SAACvC,GACHA,EAAKwf,SAAQ,SAAA9L,GACV8a,EAAU9a,EAAK1T,eAKpB0uB,EAAe,SAAC3lB,GAClBimB,IACA3wB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXC,IAAI0G,OAAOC,IACX6lB,SACA/rB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MACxB9B,EAAMkK,oBAAmB,IAGvBiiB,EAAY,CACdc,EAAGjtB,EAAMP,SACTytB,EAAGltB,EAAMR,aACT2tB,EAAGntB,EAAMT,aACT6tB,EAAGptB,EAAMV,gBAGP2uB,EAAqB,SAAClV,GACxB,IAAImV,EAAW,aAAO/B,EAAUnsB,EAAMX,eAEtC,OADA6uB,EAAY5jB,OAAOyO,EAAc,GACT,IAArB/Y,EAAMX,aAAyBW,EAAMnB,SAASY,EAASyuB,IAClC,IAArBluB,EAAMX,aAAyBW,EAAMnB,SAASW,EAAa0uB,IACtC,IAArBluB,EAAMX,aAAyBW,EAAMnB,SAASU,EAAa2uB,IACtC,IAArBluB,EAAMX,aAAyBW,EAAMnB,SAASS,EAAe4uB,SAAhE,GAGEvkB,EAAa,SAACjG,GACJ,UAATA,EAAEY,MAA2B,UAATZ,EAAEY,MAA2B,WAATZ,EAAEY,OACzCZ,EAAEQ,iBACFlE,EAAMkK,oBAAmB,KAI3B6jB,EAAmB,SAAChmB,GACtB1K,EAAG8D,WAAW,SACbC,IAAI2G,GACJ6lB,SACA/rB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAG9B,OACI,+BACI,gBAAC,GAAD,CAAO+G,OAAQ7I,EAAMiK,gBAAiBtB,UAAW,kBAAI3I,EAAMkK,oBAAmB,IAAQtB,aAAA,0CAA+C5I,EAAM8oB,oBAAoBrnB,KAAzE,MAAtF,UACI,eAAC,GAAD,CAAamH,aAAW,sBAAsBK,UAAW,SAACvF,GAAD,OAAMiG,EAAWjG,IAAIkG,YAAa,kBAAI5J,EAAMkK,oBAAmB,IAAxH,SACI,eAAC,GAAD,UAAe,uBAAM0C,EAAE,wKAE3B,eAAC,GAAD,2BAAmB5M,EAAM8oB,oBAAoBhqB,QAC7C,kEAAmC,eAAC,GAAD,UAAOkB,EAAM8oB,oBAAoBrnB,OAApE,QACA,iCACI,eAAC,GAAD,CAAQwH,UAAW,SAACvF,GAAD,OAAMiG,EAAWjG,IAAKkG,YAAa,kBAAI5J,EAAMkK,oBAAmB,IAAnF,oBACA,eAAC,GAAD,CAAQjG,QAAS,kBAvGVwpB,EAuG4BztB,EAAM8oB,oBAtGrD0E,EAAUC,QACVQ,EAAmBR,EAAQ1U,cAFT,IAAC0U,GAuGP,+BAwBd5B,GAAO1mB,IAAO8N,KAAV,qDAIJnJ,GAAS3E,IAAOO,GAAV,uDAINkkB,GAAczkB,IAAOK,OAAV,2DAIX+D,GAASpE,IAAOK,OAAV,uFAMN2E,GAAShF,IAAOK,OAAV,mJAQNkD,GAAQvD,YAAO6E,KAAP7E,CAAH,6dCtJIgpB,GAfY,SAACnuB,GACxB,OACI,eAACouB,GAAD,CAAWzC,KAAM3rB,EAAM2rB,KAAvB,SACI,gBAAC0C,GAAD,CAAkBzlB,aAAA,mBAAwB5I,EAAM8C,aAAa9C,EAAMsuB,iBAAmBtuB,EAAMuuB,QAAQvuB,EAAMsuB,kBAAoBtuB,EAAMuuB,QAAQvuB,EAAMwuB,mBAAqBvqB,QAAS,kBAAIjE,EAAMyuB,gBAAgBzuB,EAAM0uB,WAAhN,UACK1uB,EAAMyB,KACNzB,EAAM8C,aAAe9C,EAAMsuB,iBACxB,eAACK,GAAD,CAAWC,UAAW5uB,EAAM8C,aAAe9C,EAAMsuB,iBAAkBO,OAAO,iBAA1E,SAA2F,eAAC,GAAD,UAAgB,uBAAMjiB,EAAE,0BAEnH,eAAC+hB,GAAD,CAAWC,UAAW5uB,EAAM8C,aAAe9C,EAAMwuB,iBAAkBK,OAAO,eAA1E,SAAyF,eAAC,GAAD,UAAgB,uBAAMjiB,EAAE,gCAS/HwhB,GAAYjpB,IAAOE,IAAV,kSAOS,SAAArF,GAAK,OAAEA,EAAM2rB,QAK/B0C,GAAmBlpB,IAAOK,OAAV,4EAKhBmpB,GAAYxpB,IAAOE,IAAV,yGACY,SAAArF,GAAK,OAAEA,EAAM6uB,UAEtB,SAAA7uB,GAAK,OAAEA,EAAM4uB,UAAY,UAAY,YCuKxC9uB,gBAZS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBJ,SAAUM,EAAMlD,IAAI4C,SACpBJ,aAAcU,EAAMlD,IAAIwC,aACxByvB,iBAAkB/uB,EAAMlD,IAAIiyB,iBAC5BtvB,aAAcO,EAAMlD,IAAI2C,aACxBD,aAAcQ,EAAMlD,IAAI0C,aACxBD,eAAgBS,EAAMlD,IAAIyC,eAC1BwoB,YAAa/nB,EAAMgoB,UAAUD,YAC7BhlB,WAAY/C,EAAMgoB,UAAUjlB,cAGjBhD,EA9LO,SAACE,GAAW,IAAD,EACiBC,oBAAS,GAD1B,mBACtBgK,EADsB,KACLC,EADK,OAEiBjK,oBAAS,GAF1B,mBAEtBstB,EAFsB,KAELP,EAFK,KAIvBb,EAAY,CACdc,EAAGjtB,EAAMP,SACTytB,EAAGltB,EAAMR,aACT2tB,EAAGntB,EAAMT,aACT6tB,EAAGptB,EAAMV,gBAwCPyvB,EAAwB,SAACC,GAC3B,IAAMC,EAlBY,SAACnsB,GACnB,MAAgB,YAAbA,EAA+BosB,EAClB,aAAbpsB,EAAgCqsB,EACnB,YAAbrsB,EAA+BssB,EAClB,aAAbtsB,EAAgCusB,EACnB,YAAbvsB,EAA+BwsB,EAClB,aAAbxsB,EAAgCysB,OAAnC,EAYwBC,CAAcxvB,EAAM8C,YACtC2sB,EAAcT,EAAMpM,KAAKqM,GAC/B,OAA0B,IAAvBjvB,EAAMX,aAA2BW,EAAMnB,SAASW,EAAaiwB,IACtC,IAAvBzvB,EAAMX,aAA2BW,EAAMnB,SAASU,EAAakwB,IACtC,IAAvBzvB,EAAMX,aAA2BW,EAAMnB,SAASS,EAAemwB,SAAlE,GAoBEC,EAAa,SAAC3nB,EAAOtG,IAjCD,SAACsG,GACvB,OAAO1K,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXooB,MAAM,WAAY,KAAMxhB,GACxBhC,OA6BD4pB,CAAkB5nB,GACjBxG,MAAK,SAAAvC,IAVe,SAACA,GACtB,IAAM4wB,EAAgB,GACtB5wB,EAAKwf,SAAQ,SAAA9L,GACTkd,EAAc5sB,KAAK0P,EAAK1T,WAE5B+vB,EAAsBa,GAMlBC,CAAiB7wB,GAbWgB,EAAMnB,SAASQ,EAAaW,EAAMX,aAAe,IAPxD,SAAC0I,EAAOtG,GACjC,IAAMquB,EAAa,CAAEruB,OAAMsG,SACrBgoB,EAAe,aAAO/vB,EAAM8nB,aAClCiI,EAAgB/sB,KAAK8sB,GACrB9vB,EAAMnB,SAASipB,GAAYiI,IAkBvBC,CAAqBjoB,EAAOtG,OAI9BgrB,EAAa,SAAC3tB,EAAMiJ,EAAOtG,GAC7B+H,SAASymB,cAAcxrB,OACb,WAAP3F,EACC4wB,EAAW3nB,EAAOtG,GAElByuB,EAASpxB,EAAMiJ,IAIjBmoB,EAAW,SAACC,EAAUpoB,GACxB,IAAMkD,EAAQ,4BAAwBklB,EAAxB,YAAoCpoB,GAClDoJ,OAAO4X,KAAK9d,EAAU,YAAczB,SAASyB,SAAWA,IAGtDikB,EAAsB,SAACrM,EAAGC,GAAJ,OAAUD,EAAEjc,aAAekc,EAAElc,cACnDuoB,EAAuB,SAACtM,EAAGC,GAAJ,OAAUA,EAAElc,aAAeic,EAAEjc,cACpD0oB,EAAsB,SAACzM,EAAGC,GAAJ,OAAUA,EAAErhB,KAAK2uB,cAAcvN,EAAEphB,OACvD8tB,EAAuB,SAAC1M,EAAGC,GAAJ,OAAUD,EAAEphB,KAAK2uB,cAActN,EAAErhB,OACxD2tB,EAAsB,SAACvM,EAAGC,GAAJ,OAAUA,EAAEhkB,KAAKsxB,cAAcvN,EAAE/jB,OACvDuwB,EAAuB,SAACxM,EAAGC,GAAJ,OAAUD,EAAE/jB,KAAKsxB,cAActN,EAAEhkB,OA0CxD2vB,EAAkB,SAACC,GAAc,IAAD,EAfZ,SAACA,GACvB,MAAgB,SAAbA,EACyB,aAArB1uB,EAAM8C,WAAkC,CAACwsB,EAAqB,WAC1D,CAACC,EAAsB,YAElB,SAAbb,EACyB,aAArB1uB,EAAM8C,WAAkC,CAACssB,EAAqB,WAC1D,CAACC,EAAsB,YAElB,SAAbX,EACyB,aAArB1uB,EAAM8C,WAAkC,CAACosB,EAAqB,WAC1D,CAACC,EAAsB,iBAFlC,EAO0CkB,CAAkB3B,GAD1B,mBAC3BO,EAD2B,KACVqB,EADU,KAElCtwB,EAAMnB,SAASiE,GAAWwtB,IAhCC,SAACrB,GACzBjvB,EAAMP,SAASqE,OAAS,GACvB9D,EAAMnB,SAASY,EAASO,EAAMP,SAASmjB,KAAKqM,KAE7CjvB,EAAMR,aAAasE,OAAS,GAC3B9D,EAAMnB,SAASW,EAAaQ,EAAMR,aAAaojB,KAAKqM,KAErDjvB,EAAMT,aAAauE,OAAS,GAC3B9D,EAAMnB,SAASU,EAAaS,EAAMT,aAAaqjB,KAAKqM,KAErDjvB,EAAMV,eAAewE,OAAS,GAC7B9D,EAAMnB,SAASS,EAAeU,EAAMV,eAAesjB,KAAKqM,KAsB5DsB,CAAuBtB,GA3CK,SAACqB,GAC7BjzB,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXC,IAAI,eACJuF,OAAO,CACJ7D,WAAYwtB,IAsChBE,CAAwBF,IAGtB/B,EAAU,CACZkC,QAAS,0BACTC,SAAU,2BACVC,QAAS,iBACTC,SAAU,kBACVC,QAAS,sBACTC,SAAU,wBAGd,OACI,gBAAC,GAAD,WACI,gBAACC,GAAD,CAAOnjB,KAAK,QAAZ,UACI,eAACojB,GAAD,CAAMpoB,aAAA,wBAA6B2lB,EAAQvuB,EAAM8C,aAAe8K,KAAK,UAArE,SACI,gBAACqjB,GAAD,CAAWrjB,KAAK,YAAhB,UACI,eAAC,GAAD,CAAoB2gB,QAASA,EAAS9sB,KAAK,OAAOitB,SAAS,OAAOJ,iBAAiB,WAAWE,iBAAiB,UAAU1rB,WAAY9C,EAAM8C,WAAY2rB,gBAAiBA,IACxK,eAAC,GAAD,CAAoBF,QAASA,EAAS5C,KAAK,QAAQlqB,KAAK,OAAOitB,SAAS,OAAOJ,iBAAiB,WAAWE,iBAAiB,UAAU1rB,WAAY9C,EAAM8C,WAAY2rB,gBAAiBA,IACrL,eAAC,GAAD,CAAoBF,QAASA,EAAS9sB,KAAK,gBAAgBitB,SAAS,OAAOJ,iBAAiB,WAAWE,iBAAiB,UAAU1rB,WAAY9C,EAAM8C,WAAY2rB,gBAAiBA,IACjL,eAAC,GAAD,CAAW9C,KAAK,QAAQ/iB,aAAW,WAAWgF,KAAK,iBAG3D,eAAC,GAAD,CAAoB6e,WAAYA,EAAYD,cA/JlC,SAACiB,EAASvlB,GAC5BlI,EAAMkxB,uBAAN,2BAAiCzD,GAAjC,IAA0C1U,aAAc7Q,MA8J0B0kB,kBArJ5D,SAAClpB,GACvBA,EAAE6K,kBACFye,GAAmB,IAmJqGH,kBAhJlG,SAACnpB,GACvBA,EAAE6K,kBACFrE,GAAmB,IA8I2IoiB,YA3J9I,SAAC5oB,EAAG5E,EAAMiJ,EAAOtG,GACvB,UAANiC,GAAuB,UAANA,GAA8C,uBAA5B8F,SAASymB,cAAczsB,IAC1DipB,EAAW3tB,EAAMiJ,EAAOtG,IAyJ4JpC,aAAcW,EAAMX,aAAc8sB,UAAWA,OAEjO,eAACgF,GAAD,CAAgB5D,gBAAiBA,EAAiBzE,oBAAqB9oB,EAAM8oB,oBAAqBkE,mBAAoBA,IACtH,eAAC,GAAD,CAAoB/iB,gBAAiBA,EAAiB6e,oBAAqB9oB,EAAM8oB,oBAAqB5e,mBAAoBA,UAmBhIjH,GAAYkC,IAAOE,IAAV,8BAGT+oB,GAAYjpB,IAAOE,IAAV,sVASS,SAAArF,GAAK,OAAEA,EAAM2rB,QAK/BqF,GAAO7rB,IAAOE,IAAV,gEAIJ0rB,GAAQ5rB,IAAOE,IAAV,iLASL4rB,GAAY9rB,IAAOE,IAAV,2FC7JAvF,gBAPS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBuxB,SAAUrxB,EAAMgoB,UAAUqJ,SAC1B3xB,SAAUM,EAAMlD,IAAI4C,SACpBJ,aAAcU,EAAMlD,IAAIwC,gBAGbS,EAxEE,SAACE,GAAW,IAAD,EAEgCC,oBAAS,GAFzC,mBAEjB0pB,EAFiB,KAEKnB,EAFL,OAG8BvoB,mBAAS,IAHvC,mBAGjB6oB,EAHiB,KAGIoI,EAHJ,OAIYjxB,mBAAS,IAJrB,mBAIjBioB,EAJiB,KAILmC,EAJK,KAMxB3pB,qBAAU,WACN,GAAGV,EAAMH,SAASmB,QAAkC,IAAxBhB,EAAMP,SAASqE,OAAY,OAAOutB,MAE/D,CAACrxB,EAAMH,WAEV,IAAMqvB,EAAsB,SAACrM,EAAGC,GAAJ,OAAUD,EAAEjc,aAAekc,EAAElc,cACnDuoB,EAAuB,SAACtM,EAAGC,GAAJ,OAAUA,EAAElc,aAAeic,EAAEjc,cACpD0oB,EAAsB,SAACzM,EAAGC,GAAJ,OAAUA,EAAErhB,KAAK2uB,cAAcvN,EAAEphB,OACvD8tB,EAAuB,SAAC1M,EAAGC,GAAJ,OAAUD,EAAEphB,KAAK2uB,cAActN,EAAErhB,OACxD2tB,EAAsB,SAACvM,EAAGC,GAAJ,OAAUA,EAAErhB,KAAK2uB,cAAcvN,EAAEphB,OACvD4tB,EAAuB,SAACxM,EAAGC,GAAJ,OAAWD,EAAE/jB,KAAKsxB,cAActN,EAAEhkB,OAmBzDuyB,EAA4B,WAhBvBh0B,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,iBACXooB,MAAM,WAAY,KAAMvpB,EAAMH,SAASmB,QACvC+E,MAcAxE,MAAK,SAAAvC,GACF,IACIsyB,EADEC,EAAa,GAEnBvyB,EAAKwf,SAAQ,SAAAgT,GACT,IAAM/D,EAAU+D,EAAQxyB,OACxB,OAAGyuB,EAAQ3qB,WAAmBwuB,EAAiB7D,EAAQ3qB,WAChDyuB,EAAWvuB,KAAKyqB,MAE3BztB,EAAMnB,SAASiE,GAAWwuB,IAnBhB,SAACA,EAAgBC,GACX,YAAjBD,EAAmCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAKsM,KAC1D,aAAjBoC,EAAoCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAKuM,KAC3D,YAAjBmC,EAAmCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAK0M,KAC1D,aAAjBgC,EAAoCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAK2M,KAC3D,YAAjB+B,EAAmCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAKwM,KAC1D,aAAjBkC,GAAoCtxB,EAAMnB,SAASY,EAAS8xB,EAAW3O,KAAKyM,KAc3EoC,CAAUH,EAAgBC,OAIlC,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAACG,GAAD,UACI,eAACC,GAAD,MAEJ,eAAC,GAAD,CAAgBhI,qBAAsBA,EAAsBb,oBAAqBA,EAAqBoI,uBAAwBA,EAAwBhJ,WAAYA,EAAYM,wBAAyBA,IACvM,+BACI,eAAC,GAAD,CAAiBA,wBAAyBA,EAAyB6B,cAAeA,MAEtF,eAAC,GAAD,CAAevB,oBAAqBA,EAAqBoI,uBAAwBA,UAcvFS,GAAQxsB,IAAOM,MAAV,gCAILisB,GAAOvsB,IAAOE,IAAV,oLAUJpC,GAAYkC,IAAOE,IAAV,+ECvEAusB,GAzBQ,SAAC5xB,GAEpB,IAGM6xB,EAAgBC,IAAa3I,KAAK4I,GAClCxa,EAASsa,EAAgB7xB,EAAMgyB,SAAW,IAAMH,EAEtD,OACI,+BACI,sBAAKI,UAAU,gBAAgBrtB,OAAQstB,IAAertB,MAAOqtB,IAA7D,SACI,eAACC,GAAD,CACAC,UAAWP,EACXQ,WAAY9a,EACZ+a,YAZG,EAaHlmB,KAAK,cACLmmB,EAZGL,GAaHM,GAdM,GAeNC,GAfM,UAwBhBN,GAAQhtB,IAAOutB,OAAV,iPAGa,SAAA1yB,GAAK,OAAEA,EAAMoyB,aAAa,SAAApyB,GAAK,OAAEA,EAAMoyB,aACtC,SAAApyB,GAAK,OAAEA,EAAMqyB,cCNvBM,GAzBW,SAAC3yB,GAEvB,IAGM6xB,EAAgBC,IAAa3I,KAAK4I,GAGxC,OACI,+BACI,sBAAKE,UAAU,gBAAgBrtB,OAAQstB,IAAertB,MAAOqtB,IAA7D,SACI,eAAC,GAAD,CACAE,UAAWP,EACXQ,WAPG,EAQHC,YAZG,EAaHlmB,KAAK,cACLmmB,EAZGL,GAaHM,GAdM,GAeNC,GAfM,UAwBhBN,GAAQhtB,IAAOutB,OAAV,iPAGa,SAAA1yB,GAAK,OAAEA,EAAMoyB,aAAa,SAAApyB,GAAK,OAAEA,EAAMoyB,aACtC,SAAApyB,GAAK,OAAEA,EAAMqyB,cCmCvBvyB,gBALS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBd,MAAOgB,EAAMlD,IAAIkC,SAGNe,EA1DQ,SAACE,GAAW,IAAD,EAENC,mBAAS,MAFH,mBAEvBmC,EAFuB,KAEjBwwB,EAFiB,KAexBC,EAAa,SAACzwB,GACbA,EAAO,IAAM+K,MAAM/K,KAClBpC,EAAM8yB,mBAAkB,GAbL,SAAC1wB,GACxB/E,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,cACJuF,OAAO,CACJvE,KAAM8N,OAAO9N,KAEhBP,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAMpBixB,CAAmB3wB,GACnB4wB,EAAgB5wB,KAIlB4wB,EAAkB,SAAC5wB,GACrB,IAAM6wB,EAAS,eAAQjzB,EAAMjB,OAC7Bk0B,EAAU7wB,KAAO8N,OAAO9N,GACxBpC,EAAMnB,SAASE,EAAMk0B,KAUzB,OACI,gBAAC,GAAD,CAAOrqB,aAAW,oBAAoBD,UAAW,kBAAI3I,EAAM8yB,mBAAkB,IAAQjqB,OAAQ7I,EAAMkzB,eAAnG,UACI,eAACC,GAAD,CAAOvqB,aAAW,eAAetD,MAAM,eAAerB,QAAS,kBAAIjE,EAAM8yB,mBAAkB,IAA3F,SACI,eAAC,GAAD,UAAe,uBAAMlmB,EAAE,wKAE3B,eAACwmB,GAAD,UACI,eAAC,GAAD,6BAEJ,eAACC,GAAD,CAAWzqB,aAAW,aAAa0qB,UAAU,IAAIrqB,UAAW,SAACvF,GAAD,OAfpD,SAACA,EAAGtB,GACL,UAARsB,EAAE+E,MACD/E,EAAEQ,iBACF2uB,EAAWzwB,IAYsDoG,CAAQ9E,EAAGtB,IAAO+G,aAAcnJ,EAAMjB,MAAMqD,KAAMqB,SAAU,SAACC,GAAD,OAAKkvB,EAAQlvB,EAAEC,OAAOC,UACnJ,iCACI,eAAC,GAAD,CAAQK,QAAS,kBAAIjE,EAAM8yB,mBAAkB,IAA7C,oBACA,eAAC,GAAD,CAAM7uB,QAAS,kBAAI4uB,EAAWzwB,IAA9B,gCAaV+wB,GAAQhuB,IAAOK,OAAV,yDAIL4tB,GAAsBjuB,IAAOE,IAAV,iHAMnB2D,GAAQ7D,IAAOO,GAAV,uDAIL2tB,GAAYluB,IAAOM,MAAV,uNASTiD,GAAQvD,YAAO6E,KAAP7E,CAAH,6dAqBLoE,GAASpE,IAAOK,OAAV,wFAMNqE,GAAO1E,IAAOK,OAAV,+JC/EK1F,gBANS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBd,MAAOgB,EAAMlD,IAAIkC,MACjBw0B,cAAexzB,EAAMlD,IAAI02B,iBAGdzzB,EAlCI,SAACE,GAAW,IAAD,EACkBC,oBAAS,GAD3B,mBACnBizB,EADmB,KACHJ,EADG,KAE1B,OACI,gBAAC,GAAD,WACK9yB,EAAMjB,MAAMqD,KAAOpC,EAAMjB,MAAMsD,cAAgB,EAChD,gBAACmxB,GAAD,WAAK,sCAAW,6CAEhB,iCACI,eAACC,GAAD,UAAOzzB,EAAMuzB,eAAiBvzB,EAAMjB,MAAMqD,KAAOpC,EAAMjB,MAAMsD,eAC7D,gBAAC,GAAD,WAAWrC,EAAMjB,MAAMqD,KAAOpC,EAAMjB,MAAMsD,eAAiB,EAAI,OAAQ,QAAvE,eAGJ,eAACqxB,GAAD,CAASzvB,QAAS,kBAAI6uB,GAAkB,IAAxC,4BACA,eAACa,GAAD,UACK3zB,EAAMjB,MAAMsD,aAAerC,EAAMjB,MAAMqD,KAAO,IAAM,IACrD,eAAC,GAAD,CAAgB4vB,SAAU,MAE1B,eAAC,GAAD,CAAgBA,SAAUhyB,EAAMjB,MAAMsD,aAAerC,EAAMjB,MAAMqD,KAAO,QAG5E,eAACwxB,GAAD,UACI,eAAC,GAAD,MAEJ,eAAC,GAAD,CAAgBd,kBAAmBA,EAAmBI,eAAgBA,UAa5EM,GAAMruB,IAAOoK,GAAV,+KASH8W,GAAWlhB,IAAOoK,GAAV,oMAURkkB,GAAOtuB,IAAOoK,GAAV,4KASJmkB,GAAUvuB,IAAOK,OAAV,sHAOPmuB,GAAkBxuB,IAAOE,IAAV,6HAOfuuB,GAA6BzuB,IAAOE,IAAV,+IAQ1BpC,GAAYkC,IAAOqK,QAAV,0NCjEA1P,gBAJS,SAAAC,GAAK,MAAK,CAC9BH,wBAAyBG,EAAMlD,IAAI+C,2BAGxBE,EAtBK,SAACE,GAMjB,OACI,eAAC,GAAD,UACI,eAAC,GAAD,CAAY2M,GAAI3M,EAAM6zB,KAAtB,SACI,gBAACC,GAAD,CAAU7vB,QAAS,kBAPN8vB,EAO0B/zB,EAAMlB,KAN9CkB,EAAMnB,SAASe,EAAwBm0B,IAD1B,IAACA,GAOuCnzB,WAAYZ,EAAMgI,MAAMC,OAAOqd,OAAOtlB,EAAMg0B,eAAiB,mBAAqB,cAAeC,MAAOj0B,EAAMJ,0BAA0BI,EAAMg0B,eAAiB,mBAAqB,KAAxO,UACI,eAAC,GAAD,UAAM,eAAC,GAAD,UAAgBh0B,EAAMuM,aAC5B,eAAC2nB,GAAD,UAAiBl0B,EAAMyB,iBAarCyyB,GAAiB/uB,IAAOmK,EAAV,uDAIdkW,GAAKrgB,IAAOygB,GAAV,8BAGFkO,GAAW3uB,IAAO8N,KAAV,4VAGU,SAAAjT,GAAK,OAAGA,EAAMY,cASV,SAAAZ,GAAK,OAAGA,EAAMi0B,SAIpCxO,GAAatgB,YAAOoI,KAAPpI,CAAH,6NAMN2uB,IAMJ7lB,GAAO9I,IAAOE,IAAV,0IC7BKvF,gBAFS,SAAAC,GAAK,MAAK,KAEnBD,EA5BC,SAACE,GACb,IAAMQ,EAAUC,eAehB,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,CAAUwD,QAfF,WACZnH,IAASqH,OAAOgwB,UACf5yB,MAAK,WACFvB,EAAMnB,SAASgB,EAAS,CAACmB,OAAQ,MACjChB,EAAMnB,SAASD,KACfoB,EAAMnB,SAAS+rB,MACfpqB,EAAQwC,KAAK,mBAEhBnB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAMZ,UACI,eAAC,GAAD,UAAM,eAAC,GAAD,UAAe,uBAAM8K,EAAE,gVAC7B,eAAC,GAAD,+BAUVknB,GAAW3uB,IAAOK,OAAV,sVAGU,SAAAxF,GAAK,OAAGA,EAAMY,cAYhCqN,GAAO9I,IAAOE,IAAV,0IAQJ6uB,GAAiB/uB,IAAOmK,EAAV,uDAIdkW,GAAKrgB,IAAOE,IAAV,8BCxBOvF,gBAPS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBuxB,SAAUrxB,EAAMgoB,UAAUqJ,SAC1BgD,aAAcr0B,EAAMlD,IAAIu3B,aACxBx0B,wBAAyBG,EAAMlD,IAAI+C,2BAGxBE,EAnCC,SAACE,GAEb,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,sBACA,eAACq0B,GAAD,UACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAa5yB,KAAK,QAAQ3C,KAAK,WAAW+0B,KAAK,gBAAgBG,oBAAgBvtB,EAAWuB,MAAOhI,EAAMgI,MAAvG,SACI,uBAAM4E,EAAE,wNAEZ,eAAC,GAAD,CAAanL,KAAK,QAAQ3C,KAAK,QAAQ+0B,KAAK,qBAAqBG,eAAe,QAAQhsB,MAAOhI,EAAMgI,MAArG,SACI,uBAAM4E,EAAE,8rBAEZ,eAAC,GAAD,CAAanL,KAAK,SAAS3C,KAAK,SAAS+0B,KAAK,sBAAsBG,eAAe,SAAShsB,MAAOhI,EAAMgI,MAAzG,SACI,uBAAM4E,EAAE,8mCAIpB,eAAC0nB,GAAD,UACI,eAAC,GAAD,MAEJ,eAACC,GAAD,UACI,eAAC,GAAD,YAeVA,GAAmBpvB,IAAOE,IAAV,+HAQhBivB,GAAiBnvB,IAAOE,IAAV,sHAOdpC,GAAYkC,IAAOE,IAAV,sNAWTgvB,GAAgBlvB,IAAOE,IAAV,6FAMbkgB,GAAKpgB,IAAOwgB,GAAV,8BAGFxiB,GAAOgC,IAAOO,GAAV,gNCnEK8uB,GATE,SAACx0B,GACd,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,UAAOA,EAAMy0B,KAAKryB,OAClB,eAAC,GAAD,CAAQwG,aAAW,cAAc3E,QAAS,kBAAIjE,EAAM00B,WAAW10B,EAAMy0B,KAAMz0B,EAAMkI,QAAjF,mBAONiC,GAAShF,IAAOK,OAAV,yEAKNiuB,GAAOtuB,IAAOO,GAAV,qDAIJzC,GAAYkC,IAAOE,IAAV,6VCPAsvB,GAZO,SAAC30B,GACnB,OACI,eAAC40B,GAAD,UACK50B,EAAMd,MAAMqL,KAAI,SAACkqB,EAAMvsB,GACpB,OACI,eAAC,GAAD,CAAUwsB,WAAY10B,EAAM00B,WAAYxsB,MAAOA,EAAOusB,KAAMA,GAAWvsB,SASrF0sB,GAAgBzvB,IAAOE,IAAV,6RCiFJvF,gBALS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBX,MAAOa,EAAMlD,IAAIqC,SAGNY,EA1FF,SAACE,GAAW,IAAD,EACUC,mBAAS,IADnB,mBACb40B,EADa,KACJC,EADI,KAGpBp0B,qBAAU,WACoB,IAAvBV,EAAMd,MAAM4E,QACXixB,MAGL,IAEH,IAAMA,EAAe,WACjB13B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,QACJ2E,MACAxE,MAAK,SAAAvC,GAAI,OAAGgB,EAAMnB,SAASK,EAAMF,EAAKA,OAAO2D,KAAKqyB,gBAoBjDC,EAAa,SAACR,GAChB,GAAmB,IAAhBA,EAAK3wB,OAAR,CACA,IAAMoxB,EAAW,CACb9yB,KAAMqyB,IApBa,SAACS,GACxB73B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,QACJuF,OAAO,CACJhE,KAAM7F,IAASQ,UAAUklB,WAAW2S,WAAWD,KAElDrzB,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAcxBszB,CAAmBF,GAXC,SAACA,GACrB,IAAMG,EAAS,aAAOr1B,EAAMd,OAC5Bm2B,EAAUC,QAAQJ,GAClBl1B,EAAMnB,SAASK,EAAMm2B,IASrBE,CAAgBL,GAChB1rB,SAASC,eAAe,cAAc7F,MAAQ,KA2BlD,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,4BACA,gBAAC4xB,GAAD,WACI,eAACC,GAAD,CAASnyB,QAAQ,aAAjB,yBACA,gBAACoyB,GAAD,WACI,eAACC,GAAD,CAAWzsB,aAAa,MAAMD,UAAW,SAACvF,GAAD,OAVzC,SAACA,EAAG+wB,GACL,UAAR/wB,EAAE+E,KAAewsB,EAAWR,GAS2BjsB,CAAQ9E,EAAGmxB,IAAUrxB,GAAG,aAAaC,SAAU,SAACC,GAAD,OAAKoxB,EAAWpxB,EAAEC,OAAOC,UACtH,eAACgyB,GAAD,CAAY3xB,QAAS,kBAAIgxB,EAAWJ,IAApC,+BAGR,eAAC,GAAD,CAAe31B,MAAOc,EAAMd,MAAOw1B,WAnBxB,SAACmB,EAAU3tB,IANF,SAACA,GACzB,IAAMmtB,EAAS,aAAOr1B,EAAMd,OAC5Bm2B,EAAU/qB,OAAOpC,EAAO,GACxBlI,EAAMnB,SAASK,EAAMm2B,IAIrBS,CAAoB5tB,GAhBO,SAAC2tB,GAC5Bx4B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,QACJuF,OAAO,CAAEhE,KAAM7F,IAASQ,UAAUklB,WAAWuT,YAAYF,KACzDh0B,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MAWxBk0B,CAAuBH,YA6BzBL,GAAarwB,IAAOE,IAAV,8IAOVowB,GAAUtwB,IAAOG,MAAV,+EAKPowB,GAAsBvwB,IAAOE,IAAV,wMAUnBuwB,GAAazwB,IAAOK,OAAV,6OAWVmwB,GAAYxwB,IAAOM,MAAV,gWAgBTuD,GAAQ7D,IAAOO,GAAV,kMAULzC,GAAYkC,IAAOE,IAAV,oPCpIAvF,gBAJS,SAAAC,GAAK,MAAK,CAC9BH,wBAAyBG,EAAMlD,IAAI+C,2BAGxBE,EArBO,SAACE,GAOnB,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,CAAY2M,GAAI3M,EAAM6zB,KAAM5vB,QAAS,kBAPpB8vB,EAOwC/zB,EAAMlB,KANnEkB,EAAMi2B,kBAAiB,GAChBj2B,EAAMnB,SAASe,EAAwBm0B,IAF1B,IAACA,GAOjB,UACI,eAAC,GAAD,UAAgB/zB,EAAMuM,WACtB,eAAC,GAAD,UAAOvM,EAAMyB,eAYvBoqB,GAAO1mB,IAAOoK,GAAV,6EAKJkW,GAAatgB,YAAOoI,KAAPpI,CAAH,wGAMVlC,GAAYkC,IAAOygB,GAAV,wDCNA9lB,gBAFS,SAAAC,GAAK,MAAK,KAEnBD,EA1BO,SAACE,GACnB,IAAMQ,EAAUC,eAahB,OACI,eAAC,GAAD,UACI,gBAACy1B,GAAD,CAAQjyB,QAbA,WACZnH,IAASqH,OAAOgwB,UACf5yB,MAAK,WACFvB,EAAMnB,SAASgB,EAAS,CAACmB,OAAQ,MACjChB,EAAMnB,SAASD,KACfoB,EAAMnB,SAAS+rB,MACfpqB,EAAQwC,KAAK,mBAEhBnB,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAIF,OAKrB,UACI,eAAC,GAAD,UAAM,eAAC,GAAD,UAAe,uBAAM8K,EAAE,gVAC7B,eAAC,GAAD,+BAUVif,GAAO1mB,IAAOoK,GAAV,gFAKJ2mB,GAAS/wB,IAAOK,OAAV,4EAKNyI,GAAO9I,IAAOE,IAAV,8BAGJpC,GAAYkC,IAAOygB,GAAV,wDCbAuQ,GA7BU,SAACn2B,GACtB,OACI,gBAAC,GAAD,CAAO4I,aAAW,kBAAkBC,OAAQ7I,EAAMo2B,cAAeztB,UAAW,kBAAI3I,EAAMi2B,kBAAiB,IAAvG,UACI,eAAC,GAAD,CAAOhyB,QAAS,kBAAIjE,EAAMi2B,kBAAiB,IAA3C,eACA,eAACI,GAAD,UACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAe50B,KAAK,QAAQ3C,KAAK,WAAW+0B,KAAK,eAAeoC,iBAAkBj2B,EAAMi2B,iBAAxF,SACI,uBAAMrpB,EAAE,wNAEZ,eAAC,GAAD,CAAenL,KAAK,QAAQ3C,KAAK,QAAQ+0B,KAAK,qBAAqBoC,iBAAkBj2B,EAAMi2B,iBAA3F,SACI,uBAAMrpB,EAAE,8rBAEZ,eAAC,GAAD,CAAenL,KAAK,SAAS3C,KAAK,SAAS+0B,KAAK,sBAAsBoC,iBAAkBj2B,EAAMi2B,iBAA9F,SACI,uBAAMrpB,EAAE,8mCAIpB,eAAC,GAAD,UACI,eAAC,GAAD,MAEJ,eAAC,GAAD,UACI,eAAC,GAAD,UACI,eAAC,GAAD,YASd2nB,GAAmBpvB,IAAOE,IAAV,wHAOhBivB,GAAiBnvB,IAAOE,IAAV,wEAKdgxB,GAAelxB,IAAOE,IAAV,oJAQZkgB,GAAKpgB,IAAOwgB,GAAV,yGAMFwN,GAAQhuB,IAAOK,OAAV,+EAKLkD,GAAQvD,YAAO6E,KAAP7E,CAAH,sQClDImxB,GAdM,WAAO,IAAD,EACmBr2B,oBAAS,GAD5B,mBAChBm2B,EADgB,KACDH,EADC,KAEvB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,sBACA,eAAC,GAAD,CAAMhyB,QAAS,kBAAIgyB,GAAiB,IAApC,SACI,eAAC,GAAD,UAAe,uBAAMrpB,EAAE,6DAE3B,eAAC,GAAD,CAAkBqpB,iBAAkBA,EAAkBG,cAAeA,QAQ3EnoB,GAAO9I,IAAOK,OAAV,8BAGJvC,GAAYkC,IAAOE,IAAV,+UAgBTlC,GAAOgC,IAAOO,GAAV,6E,mBCIK6wB,GAxCK,SAACv2B,GAAW,IAAD,EACmBC,oBAAS,GAD5B,mBACpBu2B,EADoB,KACHC,EADG,KAG3B/1B,qBAAU,WAKN,OAJG81B,IACCrlB,OAAOulB,iBAAiB,QAASC,GACjCxlB,OAAOulB,iBAAiB,UAAWE,IAEhC,WACHzlB,OAAO0lB,oBAAoB,QAASF,GACpCxlB,OAAO0lB,oBAAoB,UAAWD,MAG3C,CAACJ,IAEJ,IAAMI,EAAoB,SAAClzB,GACnBA,EAAEC,OAAOsuB,UAAUpa,SAAS,gCAAmCnU,EAAEC,OAAOsuB,UAAUpa,SAAS,4BAA+BnU,EAAEC,OAAOH,KAAKxD,EAAMyB,MAC9Ig1B,GAAmB,IAIrBE,EAAe,SAACjzB,GACdA,EAAEC,OAAOsuB,UAAUpa,SAAS,gCAAmCnU,EAAEC,OAAOsuB,UAAUpa,SAAS,4BAA+BnU,EAAEC,OAAOH,KAAKxD,EAAMyB,MAC9Ig1B,GAAmB,IAI3B,OACI,gBAACK,GAAD,WACI,eAACC,GAAD,CAAYnuB,aAAY5I,EAAM0N,UAAWzJ,QAAS,kBAAIwyB,GAAmB,IAAOjzB,GAAIxD,EAAMyB,KAAM+C,MAAOxE,EAAMwE,QAC7G,eAACwyB,GAAD,CAAa1zB,QAAQ,aAArB,SAAmCtD,EAAMyB,OACxC+0B,GACG,eAACS,GAAD,UACI,eAACC,GAAD,CAAmB1yB,MAAOxE,EAAMwE,MAAOf,SAAUzD,EAAMm3B,iBAUrEL,GAAS3xB,IAAOE,IAAV,iRAYN2xB,GAAc7xB,IAAOG,MAAV,4DAIXyxB,GAAa5xB,IAAOK,OAAV,iNACQ,SAAAxF,GAAK,OAAEA,EAAMwE,SAS/B0yB,GAAoB/xB,YAAOiyB,KAAPjyB,CAAH,yDAIjB8xB,GAAuB9xB,IAAOE,IAAV,0FCiDXvF,gBALS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBV,OAAQY,EAAMlD,IAAIsC,UAGPW,EAtHQ,SAACE,GAAW,IAAD,EACNC,mBAAS,IADH,mBACvBwB,EADuB,KACjBumB,EADiB,OAEM/nB,mBAASD,EAAMb,OAAOyB,YAF5B,mBAEvBA,EAFuB,KAEXy2B,EAFW,OAGQp3B,mBAASD,EAAMb,OAAO0B,aAH9B,mBAGvBA,EAHuB,KAGVy2B,EAHU,OAIAr3B,mBAASD,EAAMb,OAAOyC,SAJtB,mBAIvBA,EAJuB,KAId21B,EAJc,OAKIt3B,mBAASD,EAAMb,OAAOuC,WAL1B,mBAKvBA,EALuB,KAKZ81B,EALY,OAMIv3B,mBAASD,EAAMb,OAAOwC,WAN1B,mBAMvBA,EANuB,KAMZ81B,EANY,KAQxBC,EAA0B,SAACC,EAAWC,GACxC,GAAGD,IAAY33B,EAAMb,OAAOw4B,UAAW,CACnC,IAAMhT,EAAUvD,YAAW,kBAAIyW,EAAYD,EAAeD,KAAY,KACtE,OAAM,kBAAKrW,aAAaqD,MAIhCjkB,qBAAU,WACN,OAAOg3B,EAAwB92B,EAAY,gBAE5C,CAACA,EAAYZ,EAAMb,OAAOyB,aAE7BF,qBAAU,WACN,OAAOg3B,EAAwB72B,EAAa,iBAE7C,CAACA,EAAab,EAAMb,OAAO0B,cAE9BH,qBAAU,WACN,OAAOg3B,EAAwB91B,EAAS,aAEzC,CAACA,EAAS5B,EAAMb,OAAOyC,UAE1BlB,qBAAU,WACN,OAAOg3B,EAAwBh2B,EAAW,eAE3C,CAACA,EAAW1B,EAAMb,OAAOuC,YAE5BhB,qBAAU,WACN,OAAOg3B,EAAwB/1B,EAAW,eAE3C,CAACA,EAAW3B,EAAMb,OAAOwC,YAE5BjB,qBAAU,WACN22B,EAAcr3B,EAAMb,OAAOyB,YAC3B42B,EAAax3B,EAAMb,OAAOuC,WAC1B41B,EAAet3B,EAAMb,OAAO0B,aAC5B02B,EAAWv3B,EAAMb,OAAOyC,SACxB61B,EAAaz3B,EAAMb,OAAOwC,aAC3B,CAAC3B,EAAMb,SAEV,IAAM04B,EAAc,SAAC/4B,EAAM0F,GAAW,IAAD,EACjCxE,EAAMnB,SAASM,EAAO,2BACfa,EAAMb,QADQ,wBAEhBL,EAAO0F,GAFS,sBAGX,MAHW,MAKrBnH,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnB2F,OAFD,gBAGK,sBAAwB7H,EAAO0F,IAEnC3C,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OAGtBg2B,EAAY,WACd,IAAM34B,EAAS,CACXyB,aACAC,cACAe,UACAF,YACAC,YACAF,QAEJzB,EAAM+3B,SAAS,CACX54B,WAEJ9B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,oBACXC,IAAI,gBACJuF,OAAO,CACJzE,OAAQpF,IAASQ,UAAUklB,WAAW2S,WAAW,CAC7Ch2B,aAGRqK,SAASC,eAAe,oBAAoB7F,MAAQ,IAOxD,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,4BACA,gBAAC,GAAD,WACI,gBAACo0B,GAAD,WACI,eAAC,GAAD,CAAatqB,UAAU,0BAA0BlJ,MAAO5D,EAAYu2B,SAAUE,EAAe51B,KAAK,eAClG,eAAC,GAAD,CAAaiM,UAAU,4BAA6BlJ,MAAO3D,EAAas2B,SAAUG,EAAgB71B,KAAK,iBACvG,eAAC,GAAD,CAAaiM,UAAU,uBAAwBlJ,MAAO5C,EAASu1B,SAAUI,EAAY91B,KAAK,YAC1F,eAAC,GAAD,CAAaiM,UAAU,yBAA0BlJ,MAAO9C,EAAWy1B,SAAUK,EAAc/1B,KAAK,cAChG,eAAC,GAAD,CAAaiM,UAAU,yBAA0BlJ,MAAO7C,EAAWw1B,SAAUM,EAAch2B,KAAK,iBAEpG,gBAACw2B,GAAD,WACI,eAACC,GAAD,CAAW50B,QAAQ,mBAAnB,yBACA,gBAAC60B,GAAD,WACI,eAACC,GAAD,CAAWnvB,UAlBf,SAACvF,GACF,UAARA,EAAE+E,KAAeqvB,KAiB2B5uB,aAAa,MAAMzF,SAAU,SAACC,GAAD,OAAKskB,EAAQtkB,EAAEC,OAAOC,QAAQJ,GAAG,qBAC7F,eAAC60B,GAAD,CAAWp0B,QAAS6zB,EAApB,uCAelBtC,GAAarwB,IAAOE,IAAV,gKAQV8yB,GAAuBhzB,IAAOE,IAAV,qMAUpB6yB,GAAY/yB,IAAOG,MAAV,gIAOTrC,GAAYkC,IAAOE,IAAV,uEAKT2D,GAAQ7D,IAAOO,GAAV,wGAML0yB,GAAYjzB,IAAOM,MAAV,sXAiBT4yB,GAAYlzB,IAAOK,OAAV,iYAiBTyyB,GAAiB9yB,IAAOE,IAAV,+HAOd2yB,GAAe7yB,IAAOE,IAAV,yPCvLHizB,GApBQ,SAACt4B,GACpB,OACI,gBAACu4B,GAAD,CAAQhlB,WAAYvT,EAAMw4B,MAAMr5B,OAAOsC,KAAvC,UACI,gBAACg3B,GAAD,CAAcx0B,QAAS,kBAAIjE,EAAM04B,YAAY14B,EAAMw4B,MAAMr5B,SAAzD,UACI,eAAC,GAAD,UAAOa,EAAMw4B,MAAMr5B,OAAOsC,OAC1B,gBAAC,GAAD,WACI,eAAC,GAAD,CAAOk3B,gBAAiB34B,EAAMw4B,MAAMr5B,OAAOyB,aAC3C,eAAC,GAAD,CAAO+3B,gBAAiB34B,EAAMw4B,MAAMr5B,OAAO0B,cAC3C,eAAC,GAAD,CAAO83B,gBAAiB34B,EAAMw4B,MAAMr5B,OAAOyC,UAC3C,eAAC,GAAD,CAAO+2B,gBAAiB34B,EAAMw4B,MAAMr5B,OAAOuC,YAC3C,eAAC,GAAD,CAAOi3B,gBAAiB34B,EAAMw4B,MAAMr5B,OAAOwC,mBAGjD3B,EAAMw4B,MAAMr5B,OAAOwG,WACjB,eAACizB,GAAD,CAAchwB,aAAW,eAAe3E,QAAS,kBAAIjE,EAAM64B,YAAY74B,EAAMkI,QAA7E,mBAQVuf,GAAQtiB,IAAOE,IAAV,gNACa,SAAArF,GAAK,OAAEA,EAAM24B,mBAQ/BnR,GAASriB,IAAOE,IAAV,6FAMNozB,GAAetzB,IAAOK,OAAV,oHAOZozB,GAAezzB,IAAOK,OAAV,wFAKZqmB,GAAO1mB,IAAOmK,EAAV,uFAKJipB,GAASpzB,IAAOqK,QAAV,uWCRG1P,gBANS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBT,YAAaW,EAAMlD,IAAIuC,YACvBD,OAAQY,EAAMlD,IAAIsC,UAGPW,EA1CQ,SAACE,GAEpB,IASM04B,EAAc,SAACI,IATM,SAACC,GACxB,IAAMC,EAAe,GACrBD,EAAYva,SAAQ,SAAAha,GACA,SAAbA,EAAM,IACO,cAAbA,EAAM,KACTw0B,EAAax0B,EAAM,IAAMA,EAAM,OAKnCy0B,CAAmBhZ,OAAOqD,QAAQwV,IAClC94B,EAAMnB,SAASM,EAAO25B,IACtBz7B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnB2F,OAAO,CACJ,qBAAsBmyB,IAEzBj3B,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OAG5B,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,2BACA,eAACo3B,GAAD,UACKl5B,EAAMZ,YAAYmL,KAAI,SAACiuB,EAAOtwB,GAC3B,OACI,eAAC,GAAD,CAAgBA,MAAOA,EAAO2wB,YAAa74B,EAAM64B,YAAaH,YAAaA,EAAaF,MAAOA,GAAYtwB,cAgB7Hc,GAAQ7D,IAAOoK,GAAV,yGAMLtM,GAAYkC,IAAOE,IAAV,yDAIT6zB,GAAQ/zB,IAAOE,IAAV,qNCUIvF,gBALS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,SACpBT,YAAaW,EAAMlD,IAAIuC,eAGZU,EA9DM,SAACE,GAElBU,qBAAU,WAC0B,IAA7BV,EAAMZ,YAAY0E,QACjBq1B,MAGL,IAEH,IAAMA,EAAY,WACd97B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,oBACXC,IAAI,gBACJ2E,MACAxE,MAAK,SAAAvC,GACFgB,EAAMnB,SAASO,EAAYJ,EAAKA,OAAOkD,OAAO8yB,gBAiBhDoE,EAAuB,SAACC,GAC1Br5B,EAAMnB,SAASO,EAAYi6B,KAGzBC,EAA0B,SAACD,GAC7B,IAAME,EAAiB,aAAIF,GAAWrE,UACtC33B,EAAG8D,WAAW,SACbC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,oBACXC,IAAI,gBACJuF,OAAO,CACJzE,OAAQq3B,IAEX13B,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,OAG5B,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAgBi2B,SA/BP,SAACS,GACd,IAAMgB,EAAU,aAAOx5B,EAAMZ,aAC7Bo6B,EAAWlE,QAAQkD,GACnBx4B,EAAMnB,SAASO,EAAYo6B,OA6BvB,eAAC,GAAD,CAAgBX,YA1BJ,SAACY,GACjB,IAAMD,EAAU,aAAOx5B,EAAMZ,aAC7Bo6B,EAAWlvB,OAAOmvB,EAAY,GAC9BL,EAAqBI,GACrBF,EAAwBE,YAkC1Bv2B,GAAYkC,IAAOE,IAAV,mVCjCAvF,gBAJS,SAAAC,GAAK,MAAK,CAC9B25B,aAAc35B,EAAMgoB,UAAU2R,gBAGnB55B,EA7BG,SAACE,GAIf,OAHAU,qBAAU,WACN8I,SAASpC,MAAM,YAChB,IAEC,gBAAC,GAAD,WACI,eAAC,GAAD,CAASY,MAAOhI,EAAMgI,QACtB,gBAAC2xB,GAAD,WACI,eAAC,KAAD,CAAOC,OAAK,EAAC9jB,KAAK,gBAAgB+jB,OAAQ,SAAC75B,GAAD,OACtC,eAAC85B,GAAD,UACI,eAAC,GAAD,eAAc95B,SAGtB,eAAC,KAAD,CAAO45B,OAAK,EAAC9jB,KAAK,qBAAqB+jB,OAAQ,SAAC75B,GAAD,OAC3C,eAAC,GAAD,eAAUA,OAEd,eAAC,KAAD,CAAO45B,OAAK,EAAC9jB,KAAK,sBAAsB+jB,OAAQ,SAAC75B,GAAD,OAC5C,eAAC,GAAD,eAAkBA,UAG1B,eAAC,GAAD,UAWN85B,GAAgB30B,IAAOE,IAAV,+RAcNs0B,GAAiBx0B,IAAOE,IAAV,kNAWdpC,GAAYkC,IAAOE,IAAV,mIC9CPvF,gBAJS,SAAAC,GAAK,MAAK,CAC9BF,SAAUE,EAAMlD,IAAIgD,YAGTC,EAfE,SAACE,GACd,OACIA,EAAMH,SAASmB,OACf,eAAC,KAAD,CAAO8U,KAAK,sBAAsB+jB,OAAQ,SAAC75B,GAAD,OACtC,eAAC,GAAD,eAAeA,OAGnB,eAAC,GAAD,CAAa6nB,aAAc7nB,EAAM6nB,kBCgL1B/nB,gBAJS,SAAAC,GAAK,MAAK,CAChCF,SAAUE,EAAMlD,IAAIgD,YAGPC,EA3KH,SAACE,GAAW,IAAD,EACaC,oBAAS,GADtB,mBACd85B,EADc,KACHlS,EADG,KAEfrnB,EAAUC,eAEhBC,qBAAU,WACR,GAAGV,EAAMH,SAASmB,OAAO8C,OAAS,EAAG,CACnC,IAAMk2B,EAAcC,IACpB,OAAO,kBAAKD,QAGb,CAACh6B,EAAMH,SAASmB,SAEnBN,qBAAU,WACRw5B,MAEC,IAEH,IAYMC,EAA0B,SAACl5B,GAC/BjB,EAAMnB,SAASgB,EAAS,CAAEmB,OAAQC,EAAKC,OACvCk5B,EAAYn5B,EAAKC,KAdC,SAACD,GACnB,OAAO5D,EAAG8D,WAAW,SACpBC,IAAIH,EAAKC,KACT6E,MAYDs0B,CAAYp5B,GACXM,MAAK,SAAAvC,IAVuB,SAACA,GAC9B,IACMgH,EADchH,EAAKA,OAAOwC,YACDrC,OAC/Ba,EAAMnB,SAASM,EAAO6G,IAQpBs0B,CAAuBt7B,GACM,WAA1BgB,EAAMgI,MAAMC,OAAOqd,MACO,WAA1BtlB,EAAMgI,MAAMC,OAAOqd,MACpB9kB,EAAQwC,KAAK,gBAEf6kB,GAAa,OAaXqS,EAAsB,WAC1Bp9B,IAASqH,OAAOo2B,oBAAmB,SAASt5B,GAC1C,OAAIA,EAAak5B,EAAwBl5B,SAVdwF,IAA1BzG,EAAMgI,MAAMC,OAAOqd,MACS,WAA1BtlB,EAAMgI,MAAMC,OAAOqd,MACO,WAA1BtlB,EAAMgI,MAAMC,OAAOqd,MACtB9kB,EAAQwC,KAAK,qBAEf6kB,GAAa,QAgBT2S,EAAoB,SAACx7B,EAAMy7B,GAC/B,OAAGz7B,EAAKsR,OAAetR,EAAKA,OACrB,CACLoD,KAAM,IACNC,aAAc,CACZI,MAAO,EACPH,KAAMm4B,KAKNR,EAAe,WACnB,OAAO58B,EAAG8D,WAAW,SACpBC,IAAIpB,EAAMH,SAASmB,QACnBG,WAAW,SACXC,IAAI,cACJs5B,YAAW,SAAC17B,IAtBgB,SAACA,GAC9B,IAAMy7B,EAAcl4B,OAASC,OAAO,KAC9Bm4B,EAAcH,EAAkBx7B,EAAMy7B,GAC5CG,EAAmBD,GAoBjBE,CAAuB77B,OAIrB47B,EAAqB,SAACD,GAC1B36B,EAAMnB,SAASE,EAAM,CACnBqD,KAAMu4B,EAAYv4B,KAClBC,aAAcs4B,EAAYt4B,aAAaI,UAIrCq4B,EAAiB,SAAC97B,EAAMgC,GAC5B,IAAMy5B,EAAcl4B,OAASC,OAAO,KAC9Bm4B,EAAcH,EAAkBx7B,EAAMy7B,GAC/BE,EAAYt4B,aAAaC,OAC1Bm4B,EACVG,EAAmBD,IAEnBI,EAAuB/5B,EAAQy5B,GAC/BO,EAAoBL,IAEtB36B,EAAMnB,SpE5FH,SAAuBG,GAC1B,OAAM,SAACH,GACHA,EAAS,CAACC,KAAMJ,EAAiBO,QAASD,KoE0F/Bu0B,EAAc,KAGzB6G,EAAc,SAACp5B,GACnB3D,EAAG8D,WAAW,SACbC,IAAIJ,GACJG,WAAW,SACXC,IAAI,cACJ2E,MACAxE,MAAK,SAAAvC,GACJ87B,EAAe97B,EAAMgC,OAInB+5B,EAAyB,SAAC/5B,EAAQy5B,GACtCp9B,EAAG8D,WAAW,SACbC,IAAIJ,GACJG,WAAW,SACXC,IAAI,cACJuF,OAAO,CACNtE,aAAc,CACZC,KAAMm4B,EACNh4B,MAAO,MAKPu4B,EAAsB,SAACL,GAC3B36B,EAAMnB,SAASE,EAAM,CACnBqD,KAAMu4B,EAAYv4B,KAClBC,aAAc,MAIlB,OACE03B,EACA,KAEA,uBAAK3wB,MAAO,CAACxE,OAAQ,QAArB,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOg1B,OAAK,EAAC9jB,KAAK,sBAAsB+jB,OAAQ,SAAC75B,GAAD,OAC9C,eAACi7B,GAAD,eAAYj7B,OAEd,eAAC,KAAD,CAAO45B,OAAK,EAAC9jB,KAAK,sBAAsB+jB,OAAQ,SAAC75B,GAAD,OAC9C,eAACk7B,GAAD,eAAYl7B,OAEd,eAAC,KAAD,CAAO8V,KAAK,oCAAoC+jB,OAAQ,SAAC75B,GAAD,OACtD,eAAC,GAAD,eAAaA,OAEf,eAAC,KAAD,CAAO8V,KAAK,kCAAkC+jB,OAAQ,SAAC75B,GAAD,OACpD,eAAC,GAAD,eAAWA,OAEb,eAAC,KAAD,CAAO8V,KAAK,uCAAuC+jB,OAAQ,SAAC75B,GAAD,OACzD,eAAC,GAAD,eAAgBA,OAElB,eAAC,KAAD,CAAO8V,KAAK,eAAe+jB,OAAQ,SAAC75B,GAAD,OACjC,eAAC,GAAD,aAAU6nB,aAAcA,GAAkB7nB,UAG9C,eAAC,GAAD,CAAcslB,KAAMtlB,EAAMgI,MAAMC,OAAOqd,KAAMtkB,OAAQhB,EAAMH,SAASmB,e,UCvK3Dm6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB95B,MAAK,YAAkD,IAA/C+5B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCLRO,GAAe,CACjB97B,SAAU,CAACmB,OAAQ,IACnB8tB,iBAAkB,GAClBsF,aAAc,GACdttB,cAAe,GACfD,YAAa,GACbud,UAAW,GACXxkB,wBAAyB,WACzBF,sBAAuB,GACvBC,oBAAqB,GACrBF,SAAU,GACVD,aAAc,GACdD,aAAc,GACdD,eAAgB,GAChBD,aAAc,EACdD,YAAa,GACbD,OAAQ,GACRD,MAAO,GACPH,MAAO,CAACqD,KAAM,IAAKC,aAAc,GACjCkxB,eAAe,EACfrN,gBAAgB,GAgHL0V,GA7GI,WAAiC,IAAhC77B,EAA+B,uDAAzB47B,GAAcE,EAAW,uCAC/C,OAAOA,EAAO/8B,MACV,KAAKg9B,EACD,OAAO,2BACA/7B,GADP,IAEImmB,eAAgB2V,EAAO58B,UAE/B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIwzB,cAAesI,EAAO58B,UAE9B,KAAK68B,EACD,OAAOH,GACX,KAAKG,EACD,OAAO,2BACA/7B,GADP,IAEIhB,MAAO88B,EAAO58B,UAEtB,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIb,MAAO28B,EAAO58B,UAEtB,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIZ,OAAQ08B,EAAO58B,UAEvB,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIX,YAAay8B,EAAO58B,UAE5B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIV,aAAcw8B,EAAO58B,UAE7B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIT,eAAgBu8B,EAAO58B,UAE/B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIR,aAAcs8B,EAAO58B,UAE7B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIP,aAAcq8B,EAAO58B,UAE7B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIN,SAAUo8B,EAAO58B,UAEzB,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIJ,oBAAqBk8B,EAAO58B,UAEpC,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIL,sBAAuBm8B,EAAO58B,UAEtC,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIH,wBAAyBi8B,EAAO58B,UAExC,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIqkB,UAAWyX,EAAO58B,UAE1B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEI8G,YAAag1B,EAAO58B,UAE5B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEI+G,cAAe+0B,EAAO58B,UAE9B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIq0B,aAAcyH,EAAO58B,UAE7B,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEIF,SAAUg8B,EAAO58B,UAEzB,KAAK68B,EACD,OAAO,2BACA/7B,GADP,IAEI+uB,iBAAkB+M,EAAO58B,UAEjC,QACI,OAAOc,IChIb47B,GAAe,CACjB7T,YAAa,CAAC,CAACrmB,KAAM,YAAas6B,MAAO,OACzCj5B,WAAY,MAsBDk5B,GAnBU,WAAiC,IAAhCj8B,EAA+B,uDAAzB47B,GAAcE,EAAW,uCACrD,OAAOA,EAAO/8B,MACV,KAAKg9B,GACD,OAAOH,GACX,KAAKG,GACD,OAAO,2BACA/7B,GADP,IAEI+C,WAAY+4B,EAAO58B,UAE3B,KAAK68B,GACD,OAAO,2BACA/7B,GADP,IAEI+nB,YAAa+T,EAAO58B,UAE5B,QACI,OAAOc,IClBJk8B,eAAgB,CAC3Bp/B,IAAK++B,GACL7T,UAAWiU,KCKTE,GAAQC,YAAYC,GAAaC,YAAgBC,OAEvDC,IAAS1C,OACP,eAAC,IAAM2C,WAAP,UACE,eAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAOpmB,KAAK,sBAAsB+jB,OAAQ,SAAC75B,GAAD,OACxC,eAAC,GAAD,eAASA,aAKjBwJ,SAASC,eAAe,SAM1B0xB,O","file":"static/js/main.af9f5335.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyDZovNB2YZLGb8SVd3tGQd44MdFQyLhgTI\",\n  authDomain: \"writing-136ac.firebaseapp.com\",\n  databaseURL: \"https://writing-136ac.firebaseio.com\",\n  projectId: \"writing-136ac\",\n  storageBucket: \"writing-136ac.appspot.com\",\n};\nlet app = firebase.initializeApp(config)\nexport default app\nconst db = app.firestore();\nexport { db };","export const CURRENT_PROJECT_ID = 'CURRENT_PROJECT_ID'\nexport const USER_DATA = 'USER_DATA'\nexport const PROJECT_FILES = 'PROJECT_FILES'\nexport const CURRENT_FILE_ID = 'CURRENT_FILE_ID'\nexport const OUTLINE_DATA = 'OUTLINE_DATA'\nexport const OUTLINE_ITEMS_DISPLAY = 'OUTLINE_ITEMS_DISPLAY'\nexport const OUTLINE_ITEMS_FOR_UPDATE = 'OUTLINE_ITEMS_FOR_UPDATE'\nexport const NOTES_DATA = 'NOTES_DATA'\nexport const DASHBOARD_CURRENT_SECTION = 'DASHBOARD_CURRENT_SECTION'\nexport const ROOT_DOCS = 'ROOT_DOCS'\nexport const LAYER_ONE_DOCS = 'LAYER_ONE_DOCS'\nexport const LAYER_TWO_DOCS = 'LAYER_TWO_DOCS'\nexport const LAYER_THREE_DOCS = 'LAYER_THREE_DOCS'\nexport const CURRENT_LAYER = 'CURRENT_LAYER'\nexport const COLOR_THEMES = 'COLOR_THEMES'\nexport const COLORS = 'COLORS'\nexport const TASKS = 'TASKS'\nexport const GOALS = 'GOALS'\nexport const RESET = 'RESET'\nexport const GOAL_IS_VISIBLE = 'GOAL_IS_VISIBLE'\nexport const IS_ARROW_VISIBLE = 'IS_ARROW_VISIBLE'\n\nexport function isArrowVisible(data) {\n    return(dispatch) => {\n        dispatch({type: IS_ARROW_VISIBLE, payload: data})\n    }\n}\n\nexport function goalIsVisible(data) {\n    return(dispatch) => {\n        dispatch({type: GOAL_IS_VISIBLE, payload: data})\n    }\n}\n\nexport function reset() {\n    return(dispatch) => {\n        dispatch({type: RESET})\n    }\n}\n\nexport function goals(data) {\n    return(dispatch) => {\n        dispatch({type: GOALS, payload: data})\n    }\n}\n\nexport function tasks(data) {\n    return(dispatch) => {\n        dispatch({type: TASKS, payload: data})\n    }\n}\n\nexport function colors(data) {\n    return(dispatch) => {\n        dispatch({type: COLORS, payload: data})\n    }\n}\n\nexport function colorThemes(data) {\n    return(dispatch) => {\n        dispatch({type: COLOR_THEMES, payload: data})\n    }\n}\n\n\nexport function currentLayer(data) {\n    return(dispatch) => {\n        dispatch({type: CURRENT_LAYER, payload: data})\n    }\n}\n\nexport function layerThreeDocs(data) {\n    return(dispatch) => {\n        dispatch({type: LAYER_THREE_DOCS, payload: data})\n    }\n}\n\nexport function layerTwoDocs(data) {\n    return(dispatch) => {\n        dispatch({type: LAYER_TWO_DOCS, payload: data})\n    }\n}\n\nexport function layerOneDocs(data) {\n    return(dispatch) => {\n        dispatch({type: LAYER_ONE_DOCS, payload: data})\n    }\n}\n\nexport function rootDocs(data) {\n    return(dispatch) => {\n        dispatch({type: ROOT_DOCS, payload: data})\n    }\n}\n\nexport function outlineItemsForUpdate(data) {\n    return(dispatch) => {\n        dispatch({type: OUTLINE_ITEMS_FOR_UPDATE, payload: data})\n    }\n}\n\nexport function outlineItemsDisplay(data) {\n    return(dispatch) => {\n        dispatch({type: OUTLINE_ITEMS_DISPLAY, payload: data})\n    }\n}\n\nexport function dashboardCurrentSection(data) {\n    return(dispatch) => {\n        dispatch({type: DASHBOARD_CURRENT_SECTION, payload: data})\n    }\n}\n\nexport function notesData(data) {\n    return(dispatch) => {\n        dispatch({type: NOTES_DATA, payload: data})\n    }\n}\n\nexport function outlineData(data) {\n    return(dispatch) => {\n        dispatch({type: OUTLINE_DATA, payload: data})\n    }\n}\n\nexport function currentFileID(data) {\n    return(dispatch) => {\n        dispatch({type: CURRENT_FILE_ID, payload: data})\n    }\n}\n\nexport function projectFiles(data) {\n    return(dispatch) => {\n        dispatch({type: PROJECT_FILES, payload: data})\n    }\n}\n\nexport function userData(data) {\n    return(dispatch) => {\n        dispatch({type: USER_DATA, payload: data})\n    }\n}\n\nexport function currentProjectID(data) {\n    return(dispatch) => {\n        dispatch({type: CURRENT_PROJECT_ID, payload: data})\n    }\n}\n\n","import firebase from 'firebase/app'\nimport { db } from '../../firebase'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { colors } from '../../redux/actions/appActions'\nimport { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nconst SignUp = (props) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const history = useHistory()\n    useEffect(()=> {\n        updateColors()\n        // eslint-disable-next-line\n    }, [])\n\n    const updateColors = () => {\n        props.dispatch(colors({\n            background: 'white',\n            primaryText: 'black',\n        }))\n    }\n\n    const addUserIDToDatabase = (userID) => {\n        return db.collection('users').doc(userID).set({\n            userID: userID,\n        })\n    }\n\n    const addUserColorsToDatabase = (userID) => {\n        return db.collection('users').doc(userID).set({\n            preferences: {\n                colors: {\n                    name: 'Light 1',\n                    background: '#c7b9ca',\n                    highlight: '#e3e3e3',\n                    primaryText: '#0f0f0f',\n                    secondary: '#ffffff',\n                    sidebar: '#f7f7f7',\n                }\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n    \n    const addColorThemesToDatabase = (userID) => {\n        return db.collection('users')\n        .doc(userID)\n        .collection('page-preferences')\n        .doc('color-themes')\n        .set({\n            themes\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const addGoalsToDatabase = (userID) => {\n        return db.collection('users')\n        .doc(userID)\n        .collection('goals')\n        .doc('daily-goal')\n        .set({\n            goal: 100,\n            wordsWritten: {\n                date: moment().format('L'),\n                words: 0,\n            }\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const addTasksToDatabase = (userID) => {\n        return db.collection('users')\n        .doc(userID)\n        .collection('goals')\n        .doc('todo')\n        .set({\n            todo: []\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const createFilesFolders = (userID) => {\n        return db.collection('users')\n        .doc(userID)\n        .collection('files-folders')\n        .doc('preferences')\n        .set({\n            parentID: userID, \n            sortMethod: 'dateDesc'\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const addColorsToState = () => {\n        const colorsObj = {\n            name: 'Light 1',\n            background: '#c7b9ca',\n            highlight: '#e3e3e3',\n            primaryText: '#0f0f0f',\n            secondary: '#ffffff',\n            sidebar: '#f7f7f7',\n        }\n        props.dispatch(colors(colorsObj))\n    }\n\n    const addUserFilesToDatabase = (userCredential) => {\n        const userID = userCredential.user.uid\n        addUserIDToDatabase(userID).then(()=> {\n            addUserColorsToDatabase(userID)\n            addColorThemesToDatabase(userID)\n            addGoalsToDatabase(userID)\n            addTasksToDatabase(userID)\n            createFilesFolders(userID)\n            addColorsToState()\n            history.push('/writing-app')\n        })\n    }\n\n    const submit = (e) => {\n        e.preventDefault()\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n        .then((userCredential) => {\n            addUserFilesToDatabase(userCredential)\n        })\n        .catch((error) => {\n            if(error.code==='auth/invalid-email') return setMessage('Invalid email')\n            if(error.code==='auth/weak-password') return setMessage('Password must be at least six characters')\n        })\n    }\n    return(\n        <Container>\n            <Form>\n                <Logo>Sign up</Logo>\n                <InputLabelContainer>\n                    <Label htmlFor='signup-email'>Email</Label>\n                    <Email id='signup-email' type='email' onChange={(e)=>setEmail(e.target.value)} /> \n                </InputLabelContainer>\n                <InputLabelContainer>\n                    <Label htmlFor='signup-password'>Password</Label>\n                    <Password id='signup-password' onChange={(e)=>setPassword(e.target.value)} type='password' />\n                </InputLabelContainer>\n                {message.length > 0 &&\n                    <Message>{message}</Message>\n                }\n                <Submit onClick={submit}>CREATE ACCOUNT</Submit>\n            </Form>\n            <BackgroundColorDecoration color='#c4ffd6' blur='50px' minHeight='150px' minWidth='150px' height='15vw' width='15vw' top='0' left='0'  opacity='1' />\n            <BackgroundColorDecoration color='#fffca8' blur='50px' minHeight='150px' minWidth='150px' height='15vw' width='15vw' top='20%' right='0' opacity='.7' />\n            <BackgroundColorDecoration color='#b5f1ff' blur='50px' minHeight='200px' minWidth='200px' height='20vw' width='20vw' bottom='2%' left='30%' opacity='.9' />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({})\n\nexport default connect(mapStateToProps)(SignUp)\n\nconst Message = styled.h3`\n    color: red;\n    margin-bottom: 20px;\n    padding: 0 10px;\n`\n\nconst InputLabelContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n`\n\nconst Label = styled.label`\n    margin-bottom: 5px;\n`\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0px 5px 7px rgba(0, 0, 0, .3);\n    background-color: white;\n    border-radius: 5px;\n    height: 400px;\n    width: 400px;\n    position: relative;\n    z-index: 1;\n    @media(max-width: 500px) {\n        width: 80vw;\n    }\n`\n\nconst Submit = styled.button`\n    background-color: black;\n    color: white;\n    width: 70%;\n    height: 50px;\n    text-align: center;\n    border-radius: 4px;\n    white-space: nowrap;\n    @media(max-width: 600px) {\n        font-size: .9rem;\n    }\n`\n\nconst Container = styled.div`\n    display: grid;\n    place-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nconst Email = styled.input`\n    width: 100%;\n    height: 35px;\n    margin-bottom: 20px;\n    font-size: 20px;\n`\n\nconst Password = styled.input`\n    width: 100%;\n    height: 35px;\n    margin-bottom: 30px;\n    font-size: 20px;\n`\n\nconst BackgroundColorDecoration = styled.div`\n    height: ${props=>props.height}; \n    width: ${props=>props.width};\n    min-height: ${props=>props.minHeight}; \n    min-width: ${props=>props.minWidth};\n    border-radius: 50%;\n    background-color: ${props=>props.color};\n    filter: blur(${props=>props.blur});\n    opacity: ${props=>props.opacity};\n    position: absolute;\n    top: ${props=>props.top};\n    left: ${props=>props.left};\n    bottom: ${props=>props.bottom};\n    right: ${props=>props.right};\n`\n\nconst Logo = styled.h1`\n    font-size: 2rem;\n    font-weight: 600;\n    margin-bottom: 20px;\n`\n\nconst themes = [\n    {colors: {\n        isDefault: true,\n        name: 'Light 1',\n        background: '#c7b9ca',\n        highlight: '#e3e3e3',\n        primaryText: '#0f0f0f',\n        secondary: '#ffffff',\n        sidebar: '#f7f7f7',\n    }},\n    {colors: {\n        isDefault: true,\n        name: 'Light 2',\n        background: '#ffb4a2',\n        highlight: '#e4c5b4',\n        primaryText: '#1a0f2c',\n        secondary: '#ffe6e0',\n        sidebar: '#ffd7c2',\n    }},\n    {colors: {\n        isDefault: true,\n        name: 'Light 3',\n        background: '#a7bed3',\n        highlight: '#b3ced5',\n        primaryText: '#000000',\n        secondary: '#f1ffc4',\n        sidebar: '#c6e2e9',\n    }},\n    {colors: {\n        isDefault: true,\n        name: 'Dark 1',\n        background: '#433f4b',\n        highlight: '#3e3d4d',\n        primaryText: '#fbebff',\n        secondary: '#53566a',\n        sidebar: '#141415',\n    }},\n    {colors: {\n        isDefault: true,\n        name: 'Dark 2',\n        background: '#847996',\n        highlight: '#442b44',\n        primaryText: '#F4ECD6',\n        secondary: '#5f576c',\n        sidebar: '#2c142c',\n    }},\n    {colors: {\n        isDefault: true,\n        name: 'Dark 3',\n        background: '#294c60',\n        highlight: '#192a37',\n        primaryText: '#ffefd3',\n        secondary: '#adb6c4',\n        sidebar: '#001b2e',\n    }},\n]","import firebase from 'firebase/app'\nimport { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { db } from '../../firebase'\nimport { colors, userData } from '../../redux/actions/appActions'\nimport { connect } from 'react-redux'\n\nconst SignIn = (props) => {\n\n    const history = useHistory()\n    useEffect(()=> {\n        setBackgroundColors()\n        // eslint-disable-next-line\n    }, [])\n\n    const setBackgroundColors = () => {\n        props.dispatch(colors({\n            background: 'white',\n            primaryText: 'black',\n        }))\n    }\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const getUserPreferences = (userID) => {\n        db.collection('users')\n        .doc(userID)\n        .get()\n        .then(data=> {\n            const preferences = data.data().preferences\n            const colorsData = preferences.colors\n            props.dispatch(colors(colorsData))\n            history.push('/writing-app/')\n        })\n        .catch((error) => console.log(error))\n    }\n\n    const signin = (e) => {\n        e.preventDefault()\n        firebase.auth().signInWithEmailAndPassword(email, password)\n        .then((userCredential) => {\n            const userID = userCredential.user.uid\n            props.dispatch(userData({ userID }))\n            getUserPreferences(userID)\n        })\n        .catch((error) => {\n            setMessage('Invalid email or password')\n            console.log(error)\n        })\n    }\n\n    return(\n        <Container>\n            <Form onSubmit={signin}>\n                <Logo>Welcome back</Logo>\n                <InputLabelContainer>\n                    <Label htmlFor='signin-email'>Email</Label>\n                    <Email type='email' id='signin-email' onChange={(e)=>setEmail(e.target.value)} />\n                </InputLabelContainer>\n                <InputLabelContainer>\n                    <Label htmlFor='signin-password'>Password</Label>\n                    <Password id='signin-password' type='password' onChange={(e)=>setPassword(e.target.value)} />\n                </InputLabelContainer>\n                {message.length > 0 &&\n                    <Message>{message}</Message>\n                }\n                <Submit onClick={signin}>SIGN IN</Submit>\n            </Form>\n            <BackgroundColorDecoration color='#96ffd7' blur='40px' minHeight='150px' minWidth='150px' height='15vw' width='15vw' top='0' left='0'  opacity='.8' />\n            <BackgroundColorDecoration color='#cfc2ff' blur='50px' minHeight='150px' minWidth='150px' height='15vw' width='15vw' top='20%' right='0' opacity='.6' />\n            <BackgroundColorDecoration color='#fdffb5' blur='60px' minHeight='200px' minWidth='200px' height='20vw' width='20vw' bottom='5%' left='25%' opacity='.5' />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({})\n\nexport default connect(mapStateToProps)(SignIn)\n\nconst Message = styled.h3`\n    color: red;\n    margin-bottom: 20px;\n`\n\nconst InputLabelContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n`\n\nconst Label = styled.label`\n    margin-bottom: 5px;\n`\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0px 5px 7px rgba(0, 0, 0, .3);\n    background-color: white;\n    border-radius: 5px;\n    height: 400px;\n    width: 400px;\n    position: relative;\n    z-index: 1;\n    @media(max-width: 500px) {\n        width: 80vw;\n    }\n`\n\nconst Submit = styled.button`\n    background-color: black;\n    color: white;\n    padding: 10px 50px;\n    width: 70%;\n    height: 50px;\n    border-radius: 4px;\n    @media(max-width: 600px) {\n        font-size: .9rem;\n    }\n`\n\nconst Container = styled.div`\n    display: grid;\n    place-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nconst Email = styled.input`\n    width: 100%;\n    height: 35px;\n    margin-bottom: 20px;\n    font-size: 20px;\n`\n\nconst Password = styled.input`\n    width: 100%;\n    height: 35px;\n    margin-bottom: 30px;\n    font-size: 20px;\n`\n\nconst BackgroundColorDecoration = styled.div`\n    height: ${props=>props.height}; \n    width: ${props=>props.width};\n    min-height: ${props=>props.minHeight}; \n    min-width: ${props=>props.minWidth};\n    border-radius: 50%;\n    background-color: ${props=>props.color};\n    filter: blur(${props=>props.blur});\n    opacity: ${props=>props.opacity};\n    position: absolute;\n    top: ${props=>props.top};\n    left: ${props=>props.left};\n    bottom: ${props=>props.bottom};\n    right: ${props=>props.right};\n`\n\nconst Logo = styled.h1`\n    font-size: 2rem;\n    font-weight: 600;\n    margin-bottom: 30px;\n`","import { db } from './firebase'\n\nexport const generateID = () => {\n    let result = ''\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    const charactersLength = characters.length\n    for ( let i = 0; i < 12; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n}\n\nexport const updateLastModified = (userID, projectID, fileID) => {\n    const timestamp = Date.now()\n    if(projectID!==undefined) updateDatabaseFile(projectID, userID, timestamp)\n    if(fileID) return updateDatabaseFile(fileID, userID, timestamp)\n}\n\nconst updateDatabaseFile = (id, userID, timestamp) => {\n    db.collection('users')\n    .doc(userID)\n    .collection('files-folders')\n    .doc(id)\n    .update({\n        lastModified: timestamp\n    })\n    .catch((err)=> console.log(err))\n}","import styled from 'styled-components'\nimport { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { db } from '../../../firebase'\nimport { outlineItemsDisplay, outlineItemsForUpdate } from '../../../redux/actions/appActions'\nimport { updateLastModified } from '../../../globalFunctions'\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\n\nconst EditCardModal = (props) => {\n    const [newTitle, setNewTitle] = useState('')\n    const [newText, setNewText] = useState('')\n\n    useEffect(()=> {\n        setNewText(props.text)\n        setNewTitle(props.title)\n    }, [props.title, props.text])\n\n    const saveCardEdits = () => {\n        console.log(newTitle, newText)\n        const updatedCard = createUpdatedCard()\n        const newOutlineForDisplay = updateOutlineForDisplay(updatedCard)\n        const newOutlineForUpdate = updateOutlineForUpdate(updatedCard)\n        addChangesToState(newOutlineForUpdate, newOutlineForDisplay)\n        addChangesToDatabase(newOutlineForUpdate)\n        updateLastModified(props.userData.userID, String(props.outlineData.docID), props.match.params.fileID)\n    }\n\n    const createUpdatedCard = () => {\n        return {\n            index: props.cardIndex,\n            title: newTitle,\n            text: newText,\n        }\n    }\n\n    const updateOutlineForDisplay = (newCard) => {\n        const newOutlineForDisplay = [...props.outlineItemsDisplay]\n        newOutlineForDisplay[props.itemIndexes[props.cardIndex]] = newCard\n        return newOutlineForDisplay\n    }\n\n    const updateOutlineForUpdate = (newCard) => {\n        console.log(props.outlineItemsForUpdate)\n        const newOutline = [...props.outlineItemsForUpdate]\n        newOutline[props.cardIndex] = newCard \n        return newOutline\n    }\n\n    const addChangesToState = (newOutlineForUpdate, newOutlineForDisplay) => {\n        props.dispatch(outlineItemsDisplay([...newOutlineForDisplay]))\n        props.dispatch(outlineItemsForUpdate(newOutlineForUpdate))\n    }\n\n    const addChangesToDatabase = (newOutline) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .update({\n            text: newOutline,\n        })\n        .then(()=> props.setShowEditModal(false))\n        .catch((err)=>console.log(err))\n    }\n\n    const closeModal = (e) => {\n        if(e.code==='Enter' || e.code==='Space' || e.code==='Escape') {\n            e.preventDefault()\n            props.setShowEditModal(false)\n            document.getElementById(`card-edit-button-${props.cardIndex}`).focus()\n        }\n    }\n\n    const onEnter = (e) => {\n        if(e.key==='Enter') {\n            e.preventDefault()\n            saveCardEdits()\n        }\n    }\n\n    return(\n        <Modal onDismiss={()=>props.setShowEditModal(false)} aria-label='edit card' isOpen={props.showEditModal}>\n            <Header>Edit card</Header>\n            <div>\n                <LabelInputContainer>\n                    <Label htmlFor='edit-card-modal-title'>Title:</Label>\n                    <Title onKeyDown={onEnter} autoComplete='off' onChange={(e)=>setNewTitle(e.target.value)} id='edit-card-modal-title' defaultValue={props.title}></Title>\n                </LabelInputContainer>\n                <div style={{marginBottom: '20px'}}></div>\n                <LabelInputContainer>\n                    <Label htmlFor='edit-card-modal-text'>Content:</Label>\n                    <Text onKeyDown={onEnter} onChange={(e)=>setNewText(e.target.value)} id='edit-card-modal-text' defaultValue={props.text}></Text>\n                </LabelInputContainer>\n            </div>\n            <div>\n                <Cancel onKeyDown={(e)=> closeModal(e)} onMouseDown={()=>props.setShowEditModal(false)}>Cancel</Cancel>\n                <Save onClick={saveCardEdits}>Save</Save>\n            </div>\n        </Modal>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    outlineData: state.app.outlineData,\n    currentFileID: state.app.currentFileID,\n    outlineItemsDisplay: state.app.outlineItemsDisplay,\n    outlineItemsForUpdate: state.app.outlineItemsForUpdate,\n})\n\nexport default connect(mapStateToProps)(EditCardModal)\n\nconst LabelInputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst Label = styled.label`\n    margin-bottom: 10px;\n`\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n`\n\nconst Cancel = styled.button`\n    height: 50px;\n    width: 100px;\n    margin: 10px;\n    \n`\n\nconst Save = styled.button`\n    margin: 10px;\n    background-color: var(--primary-text);\n    height: 50px;\n    width: 100px;\n    color: var(--sidebar);\n`\n\nconst Title = styled.input`\n    width: 400px;\n    min-height: 40px;\n    font-size: 1.25rem;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n    @media(max-width: 600px) {\n        width: 60vw;\n    } \n`\n\nconst Text = styled.textarea`\n    width: 400px;\n    height: 100px;\n    font-size: 1.25rem;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n    @media(max-width: 600px) {\n        width: 60vw;\n    } \n`\n\nconst Modal = styled(Dialog)`\n    display: grid;\n    z-index: 10;\n    align-items: center;\n    justify-content: center;\n    width: 500px;\n    min-height: 400px;\n    max-height: 75vh;\n    overflow: scroll;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    margin: 0;\n    box-shadow: none;\n    background-color: var(--secondary);\n    isolation: isolate;\n    padding: 20px;\n    border-radius: 10px;\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`","import styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { db } from '../../../firebase'\nimport { outlineItemsDisplay, outlineItemsForUpdate } from '../../../redux/actions/appActions'\nimport { updateLastModified } from '../../../globalFunctions'\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\n\nconst DeleteCardModal = (props) => {\n\n    const removeCardFromOutline = () => {\n        let newOutline = [...props.outlineItemsForUpdate]\n        newOutline.splice(props.cardIndex, 1)\n        return newOutline.map((card, index)=> {\n            return {...card, index}\n        })\n    }\n\n    const removeCardFromState = (outlineNewIndexes) => {\n        props.dispatch(outlineItemsForUpdate(outlineNewIndexes))\n        props.dispatch(outlineItemsDisplay(outlineNewIndexes))\n    }\n\n    const createNewIndexes = () => {\n        const dataIndexArray = []\n        for(let i = 0; i<props.itemIndexes.length - 1; i++) {\n            dataIndexArray.push(String(i))\n        }\n        props.setItemIndexes(dataIndexArray)\n    }\n\n    const sendUpdatedOutlineToDatabase = (outlineNewIndexes) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .update({ text: outlineNewIndexes })\n        .then(()=> props.setShowDeleteModal(false))\n        .catch((err)=>console.log(err))\n    }\n\n    const deleteCard = () => {\n        const updatedOutline = removeCardFromOutline()\n        createNewIndexes()\n        removeCardFromState(updatedOutline)\n        sendUpdatedOutlineToDatabase(updatedOutline)\n        updateLastModified(props.userData.userID, String(props.outlineData.docID), props.match.params.fileID)\n    }\n\n    const closeModal = (e) => {\n        if(e.code==='Enter' || e.code==='Space' || e.code==='Escape') {\n            e.preventDefault()\n            props.setShowDeleteModal(false)\n            document.getElementById(`card-delete-button-${props.cardIndex}`).focus()\n        }\n    }\n\n    return(\n        <Modal aria-label='Are you sure you want to delete this card?' isOpen={props.showDeleteModal} onDismiss={()=>props.setShowDeleteModal(false)}>\n            <Header>Delete card</Header>\n            <p>Are you sure you want to delete this card?</p>\n            <div>\n                <Cancel onKeyDown={closeModal} onMouseDown={()=>props.setShowDeleteModal(false)}>Cancel</Cancel>\n                <Delete onClick={deleteCard}>Delete</Delete>\n            </div>\n        </Modal>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    outlineData: state.app.outlineData,\n    currentFileID: state.app.currentFileID,\n    outlineItemsForUpdate: state.app.outlineItemsForUpdate,\n    outlineItemsDisplay: state.app.outlineItemsDisplay,\n})\n\nexport default connect(mapStateToProps)(DeleteCardModal)\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n`\n\nconst Cancel = styled.button`\n    height: 50px;\n    width: 100px;\n    margin: 10px;\n    \n`\n\nconst Delete = styled.button`\n    margin: 10px;\n    background-color: hsl(0, 60%, 50%);\n    height: 50px;\n    width: 100px;\n    color: white;\n`\n\n\nconst Modal = styled(Dialog)`\n    z-index: 10;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 500px;\n    height: 300px;\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    margin: 0;\n    box-shadow: none;\n    background-color: var(--secondary);\n    padding: 0px 20px 20px 20px;\n    border-radius: 10px;\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`","import styled from 'styled-components'\nimport { useState, useEffect } from 'react'\nimport { db } from '../../../firebase'\nimport { connect } from 'react-redux'\nimport { updateLastModified } from '../../../globalFunctions'\nimport { outlineItemsForUpdate, outlineItemsDisplay } from '../../../redux/actions/appActions'\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\n\nconst CreateCardModal = (props) => {\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [location, setLocation] = useState(null)\n\n    useEffect(()=> {\n        setLocation(props?.outlineItemsForUpdate?.length + 1)\n        // eslint-disable-next-line \n    }, [props.outlineItemsForUpdate])\n\n    const getUpdatedOutline = () => {\n        const dataObject = {\n            title, \n            text,\n            index: location,\n        }\n        const updateCopy = [...props.outlineItemsForUpdate]\n        updateCopy.splice(location - 1, 0, dataObject)\n        return updateCopy.map((card, index)=> {\n            return {...card, index}\n        })\n    }\n\n    const addCardToDatabase = (outlineNewIndexes) => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .update({\n            text: outlineNewIndexes,\n        })\n    }\n\n    const addUpdatedCardsToState = (outlineNewIndexes) => {\n        props.dispatch(outlineItemsDisplay(outlineNewIndexes))\n        props.dispatch(outlineItemsForUpdate(outlineNewIndexes))\n    }\n\n    const addNewIndexesToState = () => {\n        const dataIndexArray = []\n        for(let i = 0; i<props.itemIndexes.length + 1; i++) {\n            dataIndexArray.push(String(i))\n        }\n        props.setItemIndexes(dataIndexArray)\n    }\n\n    const createNewOutlineCard = () => {\n        if(!checkConditions()) return\n        addNewIndexesToState()\n        const updatedOutline = getUpdatedOutline()\n        addCardToDatabase(updatedOutline)\n        .then(()=> {\n            addUpdatedCardsToState(updatedOutline)\n            props.setShowCreateModal(false)\n        })\n        clearState()\n        updateLastModified(props.userData.userID, String(props.outlineData.docID), props.match.params.fileID)\n    }\n\n    const checkConditions = () => {\n        if(title.length === 0) return false\n        if(text.length === 0) return false\n        if(location < 1 || location > props.outlineItemsForUpdate.length + 1) return false\n        return true\n    }\n\n    const clearState = () => {\n        setText('')\n        setTitle('')\n        setLocation(null)\n    }\n\n    const onEnter = (e) => {\n        if(e.key==='Enter') {\n            e.preventDefault()\n            createNewOutlineCard()\n        }\n    }\n\n    return(\n        <Modal aria-label='create card' isOpen={props.showCreateModal} onDismiss={()=>props.setShowCreateModal(false)}>\n            <Header>Create new card</Header>\n            <Label htmlFor='create-card-title'>Title</Label>\n            <Title autoComplete='off' id='create-card-title' onKeyDown={onEnter} onChange={(e)=>setTitle(e.target.value)} />\n            <Label htmlFor='create-card-description'>Description</Label>\n            <Description id='create-card-description' onKeyDown={onEnter} onChange={(e)=>setText(e.target.value)} />\n                <Label aria-label={`insert at position ${props.outlineItemsForUpdate.length + 1} of ${props.outlineItemsDisplay.length + 1}`}  htmlFor='create-card-location'>Insert at location</Label>\n            <LocationContainer>\n                <Location id='create-card-location' onKeyDown={onEnter} defaultValue={props.outlineItemsForUpdate.length + 1} onChange={(e)=>setLocation(e.target.value)} /> / {props.outlineItemsDisplay.length + 1}\n            </LocationContainer>\n            <ButtonsComponent>\n                <Cancel onClick={()=>props.setShowCreateModal(false)}>Cancel</Cancel>\n                <Create onClick={createNewOutlineCard}>Create</Create>\n            </ButtonsComponent>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    outlineData: state.app.outlineData,\n    outlineItemsForUpdate: state.app.outlineItemsForUpdate,\n    outlineItemsDisplay: state.app.outlineItemsDisplay,\n})\n\nexport default connect(mapStateToProps)(CreateCardModal)\n\nconst ButtonsComponent = styled.div`\n    display: flex;\n`\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n    margin-bottom: 36px;\n`\n\nconst Description = styled.textarea`\n    font-size: 1.25rem;\n    width: 400px;\n    height: 85px;\n    margin-bottom: 36px;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n    @media(max-width: 1000px) {\n        width: 300px;\n    } \n    @media(max-width: 600px) {\n        width: 60vw;\n        height: 100px;\n    } \n`\n\nconst Title = styled.input`\n    font-size: 1.25rem;\n    width: 400px;\n    min-height: 40px;\n    margin-bottom: 36px;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n    @media(max-width: 1000px) {\n        width: 300px;\n    } \n    @media(max-width: 600px) {\n        width: 60vw;\n    } \n`\n\nconst LocationContainer = styled.div`\n    font-size: 1.25rem;\n`\n\nconst Location = styled.input`\n    font-size: inherit;\n    width: 50px;\n    min-height: 40px;\n    margin-bottom: 10px;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n`\n\nconst Label = styled.label`\n    margin-bottom: 10px;\n`\n\nconst Cancel = styled.button`\n    height: 50px;\n    width: 100px;\n    margin: 10px;\n`\n\nconst Create = styled.button`\n    margin: 10px;\n    background-color: var(--primary-text);\n    height: 50px;\n    width: 100px;\n    color: var(--sidebar);\n`\n\nconst Modal = styled(Dialog)`\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 500px;\n    min-height: 300px;\n    max-height: 85vh;\n    overflow: scroll;\n    background-color: var(--secondary);\n    padding: 50px 15px;\n    border-radius: 10px;\n    left: 50%;\n    top: 50%;\n    margin: 0;\n    transform: translate(-50%, -50%);\n    position: absolute;\n    @media(max-width: 1000px) {\n        width: 500px;\n    } \n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`","import styled from 'styled-components'\n\nconst IconComponent = (props) => {\n    return (\n        <Fill fill={props.fill} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">{props.children}</Fill>\n    )\n}\n\nexport default IconComponent\n\nconst Fill = styled.svg`\n    fill: var(--primary-text);\n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { Link } from 'react-router-dom'\nimport { db } from '../../../firebase'\n\nconst Toolbar = (props) => {\n    const updateCardsPerRow = (e) => {\n        const newCardsPerRow = e.target.value\n        if(isNaN(newCardsPerRow)) return\n        if(newCardsPerRow > 10 || newCardsPerRow < 1) return\n        props.setCardsPerRow(newCardsPerRow)\n        db.collection('users')\n        .doc(props.userID)\n        .collection('files')\n        .doc(props.fileID)\n        .update({\n            cardsPerRow: newCardsPerRow\n        })\n        .catch((err)=>console.log(err))\n    }\n    return(\n        <Container>\n            <Home aria-label='return to homepage' to='/writing-app'>\n                <IconComponent><path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\"/></IconComponent>\n            </Home>\n            <ToolbarRightContainer>\n                <CardsPerRowContainer>\n                    <CardsPerRowLabel htmlFor='cards-per-row'>Cards per row:</CardsPerRowLabel>\n                    <CardsPerRow onBlur={updateCardsPerRow} defaultValue={props.cardsPerRow} id='cards-per-row' />\n                </CardsPerRowContainer>\n                {props.savingStatus}\n            </ToolbarRightContainer>\n        </Container>\n    )\n}\n\nexport default Toolbar\n\nconst CardsPerRowContainer = styled.div`\n    @media(max-width: 450px){\n        display: none;\n    } \n`\n\nconst ToolbarRightContainer = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst CardsPerRowLabel = styled.label`\n    margin-right: 10px;\n`\n\nconst CardsPerRow = styled.input`\n    width: 30px;\n    background-color: var(--background);\n    outline: 1px solid var(--primary-text);\n    color: var(--primary-text);\n    margin-right: 20px;\n`\n\nconst Home = styled(Link)`\n    justify-self: flex-start;\n`\n\nconst Container = styled.div`\n    position: fixed;\n    background-color: var(--background);\n    width: 100%;\n    z-index: 10;\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 50px;\n    top: 0;\n    transition: opacity 300ms ease-in-out;\n    outline: 1px solid rgba(0, 0, 0, .1);\n    &:hover {\n        opacity: 1;\n    }\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n        }\n    }\n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\n\nconst CardIcons = (props) => {\n    return(\n        <IconBackgroundContainer aria-label={props.ariaLabel} id={props.idValue} role='button' onClick={props.click} onKeyDown={props.keyDown}>\n            <IconTitle>{props.name}</IconTitle>\n            <IconBackground />\n            <Icon>\n                <IconComponent>\n                    {props.children}\n                </IconComponent>\n            </Icon>\n        </IconBackgroundContainer>\n    )\n}\n\nexport default CardIcons\n\nconst IconTitle = styled.div`\n    transition: opacity 200ms ease-in-out;\n    opacity: 0;\n    background-color: var(--primary-text);\n    height: auto;\n    min-width: 50px;\n    position: absolute;\n    top: 160%;\n    left: 50%;\n    transform: translate(-50%, -50%); \n    border-radius: 5px;\n    color: var(--sidebar);\n    vertical-align: middle;\n    padding: 10px;\n    font-size: 1rem;\n`\n\nconst IconBackground = styled.div`\n    opacity: 0;\n    transition: opacity 200ms ease-in-out;\n    background-color: var(--background);\n    height: 35px;\n    width: 35px;\n    position: relative;\n    border-radius: 50%;\n    &:hover{\n        opacity: 1;\n    }\n    &:focus{\n        opacity: 1;\n    }\n`\n\nconst IconBackgroundContainer = styled.button`\n    position: relative;\n    margin-right: 10px;\n    &:hover{\n        ${IconBackground} {\n            opacity: 1;\n        }\n        ${IconTitle} {\n            opacity: 1;\n        }\n    }\n    &:focus{\n        ${IconBackground} {\n            opacity: 1;\n        }\n        ${IconTitle} {\n            opacity: 1;\n        }\n    }\n`\n\nconst Icon = styled.div` \n    transform: translate(-50%, -50%) scale(.7);\n    opacity: .8;\n    top: 50%;\n    left: 50%;\n    position: absolute;\n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\nimport CardIcons from './CardIcons'\n\nconst Card = (props) => {\n\n    const editCard = () => {\n        props.setTitle(props.title)\n        props.setText(props.text)\n        props.setShowEditModal(true)\n        props.setCardIndex(props.index)\n    }\n\n    const deleteCard = () => {\n        props.setShowDeleteModal(true)\n        props.setCardIndex(props.index)\n    }\n\n    const keyBoardDelete = (e) => {\n        if(e.key==='Enter'||e.key==='Space')  {\n            deleteCard()\n            e.stopPropagation()\n            e.nativeEvent.stopImmediatePropagation()\n            e.preventDefault()\n        }\n    }\n\n    const keyBoardEdit = (e) => {\n        if(e.key==='Enter'||e.key==='Space')  {\n            editCard(props.title, props.text)\n            e.stopPropagation()\n            e.nativeEvent.stopImmediatePropagation()\n            e.preventDefault()\n        }\n    }\n\n    return(\n        <Container {...props} ref={props.innerRef}>\n            <MainContentContainer>\n                <IconTitleContainer>\n                    <Title>{props.title}</Title>\n                    <IconContainer>\n                        <Icons>\n                            <CardIcons idValue={`card-edit-button-${props.index}`} name='Rename' ariaLabel='rename card' index={props.index}  click={editCard} keyDown={keyBoardEdit}>\n                                <path d=\"M18.363 8.464l1.433 1.431-12.67 12.669-7.125 1.436 1.439-7.127 12.665-12.668 1.431 1.431-12.255 12.224-.726 3.584 3.584-.723 12.224-12.257zm-.056-8.464l-2.815 2.817 5.691 5.692 2.817-2.821-5.693-5.688zm-12.318 18.718l11.313-11.316-.705-.707-11.313 11.314.705.709z\"/>\n                            </CardIcons>\n                            <CardIcons idValue={`card-delete-button-${props.index}`} name='Delete' ariaLabel='delete card' index={props.index} click={deleteCard} keyDown={keyBoardDelete}>\n                                <path d=\"M9 19c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5-17v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712zm-3 4v16h-14v-16h-2v18h18v-18h-2z\"/>\n                            </CardIcons>\n                        </Icons>\n                        <DragIconContainerDesktop>\n                            <IconComponent>\n                                <path d=\"M24 12l-6-5v4h-5v-5h4l-5-6-5 6h4v5h-5v-4l-6 5 6 5v-4h5v5h-4l5 6 5-6h-4v-5h5v4z\"/>\n                            </IconComponent>\n                        </DragIconContainerDesktop>    \n                        <CardNumber aria-label={`card ${props.index + 1}`}>{props.index + 1}</CardNumber>\n                    </IconContainer>\n                </IconTitleContainer>\n                <Text>{props.text}</Text>\n            </MainContentContainer>\n            <IconsMobile>\n                <CardIcons idValue={`card-edit-button-${props.index}`} name='Rename' ariaLabel='rename card' index={props.index}  click={editCard} keyDown={keyBoardEdit}>\n                    <path d=\"M18.363 8.464l1.433 1.431-12.67 12.669-7.125 1.436 1.439-7.127 12.665-12.668 1.431 1.431-12.255 12.224-.726 3.584 3.584-.723 12.224-12.257zm-.056-8.464l-2.815 2.817 5.691 5.692 2.817-2.821-5.693-5.688zm-12.318 18.718l11.313-11.316-.705-.707-11.313 11.314.705.709z\"/>\n                </CardIcons>\n                <CardIcons idValue={`card-delete-button-${props.index}`} name='Delete' ariaLabel='delete card' index={props.index} click={deleteCard} keyDown={keyBoardDelete}>\n                    <path d=\"M9 19c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5-17v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712zm-3 4v16h-14v-16h-2v18h18v-18h-2z\"/>\n                </CardIcons>\n                <DragIconContainerMobile>\n                    <IconComponent>\n                        <path d=\"M24 12l-6-5v4h-5v-5h4l-5-6-5 6h4v5h-5v-4l-6 5 6 5v-4h5v5h-4l5 6 5-6h-4v-5h5v4z\"/>\n                    </IconComponent>\n                </DragIconContainerMobile>  \n            </IconsMobile>\n        </Container>\n    )\n}\n\nexport default Card\n\nconst MainContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst DragIconContainer = styled.div`\n    transform: scale(.8);\n    opacity: .8;\n    touch-action: none; \n    align-self: flex-end;\n    position: relative;\n    @media(min-width: 700px) {\n        top: -5px;\n    }\n    @media(hover: hover) {\n        &:not(:hover) {\n            display: none;\n        }\n    }  \n`\n\nconst DragIconContainerDesktop = styled(DragIconContainer)`\n    @media(max-width: 700px) {\n        display: none;\n    }\n`\n\nconst DragIconContainerMobile = styled(DragIconContainer)`\n    position: relative;\n    top: -3px;\n    @media(min-width: 700px) {\n        display: none;\n    }\n`\n\nconst CardNumber = styled.p`\n    font-size: 1rem;\n    margin-left: 8px;\n    opacity: .8;\n    color: var(--primary-text);\n    &::after {\n        content: '.'\n    }\n`\n\nconst Icons = styled.div`\n    transition: opacity 300ms ease-in-out;\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n            @media(max-width: 700px) {\n                display: none;\n            }\n        }\n    }\n`\n\nconst IconsMobile = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    transition: opacity 300ms ease-in-out;\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n        }\n    }\n    @media(min-width: 700px) {\n        display: none;\n    }\n`\n\nconst IconTitleContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst IconContainer = styled.div`\n    position: relative;\n    top: -10px;\n    display: flex;\n    align-items: center;\n    &:focus-within {\n        ${Icons} {\n            opacity: 1;\n        }\n    }\n`\n\nconst Title = styled.h1`\n    font-size: 1rem;\n    opacity: .8;\n    color: var(--primary-text);\n    margin-bottom: 20px;\n`\n\nconst Text = styled.h2`\n    font-size: 1.25rem;\n    line-height: 1.5;\n`\n\nconst Container = styled.article`\n    touch-action: manipulation;\n    background-color: var(--sidebar);\n    padding: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border-radius: 15px;\n    width: auto;\n    min-height: 200px;\n    height: 100%;\n    cursor: move;\n    &:hover {\n        ${Icons} {\n            opacity: 1;\n        }\n    }\n`","import Card from './Card'\nimport {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport { connect } from 'react-redux'\n\nconst SortableItem = (props) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({id: props.id})\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  }\n  \n  return (\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      {props?.text &&\n        <Card \n          index={props.index} \n          setCardIndex={props.setCardIndex} \n          setTitle={props.setTitle} setText={props.setText}  \n          setShowEditModal={props.setShowEditModal} \n          setShowDeleteModal={props.setShowDeleteModal} \n          text={props?.text[Number(props.id)]?.text || ''} \n          title={props?.text[Number(props.id)]?.title || ''} \n        />\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  outlineItemsDisplay: state.app.outlineItemsDisplay,\n})\n\nexport default connect(mapStateToProps)(SortableItem)","import { useEffect, useState } from 'react'\nimport { db } from '../../../firebase'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { updateLastModified } from '../../../globalFunctions'\nimport { outlineData, outlineItemsDisplay, outlineItemsForUpdate } from '../../../redux/actions/appActions'\nimport EditCardModal from './EditCardModal'\nimport DeleteCardModal from './DeleteCardModal'\nimport CreateCardModal from './CreateCardModal'\nimport Toolbar from './Toolbar'\nimport {\n  DndContext, \n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  rectSortingStrategy,\n} from '@dnd-kit/sortable';\n\nimport SortableItem from './SortableItem';\n\nconst Outline = (props) => {\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n    const [showCreateModal, setShowCreateModal] = useState(false)\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [cardIndex, setCardIndex] = useState(null)\n    const [itemIndexes, setItemIndexes] = useState([])\n    const [savingStatus, setSavingStatus] = useState('All changes saved')\n    const [cardsPerRow, setCardsPerRow] = useState(3)\n\n    useEffect(()=> {\n        getOutline()\n        // eslint-disable-next-line\n    }, [props.match])\n\n    const getOutlineElements = () => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .get()\n    }\n\n    const createOutlineIndexes = (outlineItems) => {\n        const dataIndexArray = []\n        for(let i = 0; i<outlineItems.length; i++) {\n            dataIndexArray.push(String(i))\n        }\n        setItemIndexes(dataIndexArray)\n    }\n\n    const getOutline = () => {\n        getOutlineElements()\n        .then((result)=> {\n            if(!result.exists) return\n            const outline = result.data()\n            props.dispatch(outlineData(outline))\n            document.title = outline.name\n            setCardsPerRow(outline.cardsPerRow)\n            const outlineItems = outline.text\n            props.dispatch(outlineItemsDisplay(outlineItems))\n            props.dispatch(outlineItemsForUpdate(outlineItems))\n            createOutlineIndexes(outlineItems)\n        })\n    }\n\n    const updateToDatabase = (updatedOutline) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .update({\n            text: updatedOutline,\n        })\n        .then(()=> setSavingStatus('All changes saved'))\n        updateLastModified(props.userData.userID, String(props.outlineData.docID), props.match.params.fileID)\n    }\n\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    )\n\n    const switchCardPosition = (oldIndex, newIndex) => {\n        let itemsCopy = [...props.outlineItemsForUpdate]\n        const removedItem = itemsCopy.splice(oldIndex, 1)\n        itemsCopy.splice(newIndex, 0, ...removedItem)\n        return itemsCopy.map((item, index)=> {\n            return {...item, index}\n        })\n    }\n\n    const updateStateAndDatabase = (updatedOutline) => {\n        props.dispatch(outlineItemsForUpdate(updatedOutline))\n        updateToDatabase(updatedOutline)\n    }\n\n    const handleDragEnd = (e) => {\n        const {active, over} = e\n        if(active.id === over.id) return\n        setSavingStatus('Saving...')\n        const oldIndex = itemIndexes.indexOf(active.id)\n        const newIndex = itemIndexes.indexOf(over.id)\n        setItemIndexes(arrayMove(itemIndexes, oldIndex, newIndex))\n        const updatedOutline = switchCardPosition(oldIndex, newIndex)\n        updateStateAndDatabase(updatedOutline)\n    }\n\n    window.onbeforeunload = function() {\n        if(savingStatus==='Saving...') {\n            return 'saving'\n        }\n    }\n\n    const screenReaderInstructions = `\n        To pick up a card, press space or enter.\n        Use the arrow keys to move cards in any direction.\n        Press space or enter to confirm move, or press escape to cancel move.\n    `\n\n    const announcements = {\n        onDragStart(id) {\n            return `picked up note card ${Number(id + 1)}, ${props.outlineItemsDisplay[id].title}`\n        },\n        onDragOver(id, overId) {\n            return `note card was moved into position ${Number(overId) + 1} of ${props.outlineItemsDisplay.length}`\n        },\n        onDragEnd(id, overId) {\n            return `${props.outlineItemsDisplay[id]} was dropped over in position ${Number(overId) + 1} of ${props.outlineItemsDisplay.length}`\n        }, \n        onDragCancel() {\n            return `Move was canceled.`\n        }\n    }\n\n    return (\n        <Container>\n            <Toolbar fileID={props.match.params.fileID} userID={props.userData.userID} setCardsPerRow={setCardsPerRow} cardsPerRow={cardsPerRow} savingStatus={savingStatus} />\n            <CreateCardModal showCreateModal={showCreateModal} itemIndexes={itemIndexes}  setItemIndexes={setItemIndexes}  match={props.match} setShowCreateModal={setShowCreateModal} getOutline={getOutline} />\n            <OutlineContainer>\n                <Title>{props?.outlineData?.name}</Title>\n                <CreateNew onClick={()=>setShowCreateModal(true)}><Plus aria-hidden>+</Plus> Create new card</CreateNew>\n                <DndContext screenReaderInstructions={screenReaderInstructions} announcements={announcements} sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                <SortableContext items={itemIndexes} strategy={rectSortingStrategy}>\n                    <Grid cardsPerRow={cardsPerRow}>\n                        {itemIndexes.map((itemIndex, index)=> {\n                            return(\n                                <SortableItem index={index} setCardIndex={setCardIndex} setTitle={setTitle} setText={setText} setShowEditModal={setShowEditModal} setShowDeleteModal={setShowDeleteModal} key={itemIndex} id={itemIndex} text={props.outlineItemsDisplay} />\n                            )\n                        })}\n                    </Grid>\n                </SortableContext>\n                </DndContext>\n            </OutlineContainer>\n            <EditCardModal showEditModal={showEditModal} itemIndexes={itemIndexes} match={props.match} cardIndex={cardIndex} setShowEditModal={setShowEditModal} title={title} text={text} />\n            <DeleteCardModal showDeleteModal={showDeleteModal} setItemIndexes={setItemIndexes} itemIndexes={itemIndexes} match={props.match} cardIndex={cardIndex} setShowDeleteModal={setShowDeleteModal} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    outlineData: state.app.outlineData,\n    currentFileID: state.app.currentFileID,\n    outlineItemsForUpdate: state.app.outlineItemsForUpdate,\n    outlineItemsDisplay: state.app.outlineItemsDisplay,\n})\n\nexport default connect(mapStateToProps)(Outline)\n\nconst Plus = styled.span`\n    font-size: 1.75rem;\n    margin-right: 5px;\n    background-color: inherit;\n    color: inherit;\n`\n\nconst Container = styled.div`\n    width: 100%;\n`\n\nconst CreateNew = styled.button`\n    background-color: var(--primary-text);\n    position: relative;\n    color: var(--sidebar);\n    padding: 12px 15px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    font-size: .875rem;\n`\n\nconst OutlineContainer = styled.div`\n    padding: 10px 20px 20px 20px;\n`\n\nconst Title = styled.h1`\n    font-size: 2rem;\n    margin: 40px 0 20px 0;\n`\n\nconst Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(${props=>props.cardsPerRow}, 1fr);\n    grid-gap: 20px;\n    grid-template-rows: auto;\n    @media(max-width: 450px) {\n        grid-template-columns: repeat(1, 1fr); \n    }\n`","import styled from 'styled-components'\n\nconst Autocomplete = (props) => {\n    return(\n        <AutocompleteContainer>\n            <AutocompleteBackground position={props.position}>\n                {props.items.map((item, index)=> {\n                    return <AutocompleteItem isSelected={index===props.index} key={item}>{item}</AutocompleteItem>\n                })}\n            </AutocompleteBackground>\n        </AutocompleteContainer>\n    )\n}\n\nexport default Autocomplete\n\nconst AutocompleteContainer = styled.div`\n    font-family: 'Courier New', Courier, monospace;\n`\n\nconst AutocompleteBackground = styled.div`\n    position: absolute;\n    top: ${props=>props.position.top};\n    left: ${props=>props.position.left};\n    display: ${props=>props.position.display};\n    flex-direction: column;\n    font-family: 'Courier New', Courier, monospace;\n    background-color: white;\n    border-radius: 5px;\n    box-shadow: 2px 4px 6px rgba(0, 0, 0, .2);\n`\n\nconst AutocompleteItem = styled.span`\n    padding: 8px;\n    font-family: 'Courier New', Courier, monospace;\n    font-weight: 600;\n    color: black;\n    background-color: ${props=>props.isSelected ? 'hsl(217, 49%, 94%)' : 'transparent'};\n    &:first-of-type {\n        border-radius: 5px 5px 0 0;\n    }\n    &:last-of-type {\n        border-radius: 0 0 5px 5px;\n    }\n`","import styled from 'styled-components'\n\n//components \n\nexport const Dialog = (props) => {\n    return (\n        <CenteredItemsContainer>\n            <DialogStyles {...props.attributes}>{props.children}</DialogStyles>\n        </CenteredItemsContainer>\n    )\n}\n\nexport const Character = (props) => {\n    return (\n        <CenteredItemsContainer>\n            <CharacterStyles {...props.attributes}>{props.children}</CharacterStyles>\n        </CenteredItemsContainer>\n    )\n}\n\nexport const SceneHeading = (props) => {\n    return <SceneHeadingStyles {...props.attributes}>{props.children}</SceneHeadingStyles>\n}\n\nexport const Paragraph = (props) => {\n    return <ParagraphStyles {...props.attributes}>{props.children}</ParagraphStyles>\n}\n\nexport const Transition = (props) => {\n    return <TransitionStyles {...props.attributes}>{props.children}</TransitionStyles>\n}\n\nexport const Parenthetical = (props) => {\n    return (\n        <CenteredItemsContainer>\n            <ParentheticalStyles {...props.attributes}>{props.children}</ParentheticalStyles>\n        </CenteredItemsContainer>\n    )\n}\n\n//styles \n\nexport const TransitionStyles = styled.p`\n    font-weight: 500;\n    display: flex;\n    justify-content: flex-end;\n    font-family: 'Courier New', Courier, monospace;\n    text-transform: uppercase;\n    /* margin-left: 1px;\n    transform: translate(-1px); */\n    padding: 1px;\n`\n\nexport const SceneHeadingStyles = styled.p`\n    font-weight: 600;\n    text-transform: uppercase;\n    font-family: 'Courier New', Courier, monospace;\n    /* margin-left: 1px;\n    transform: translate(-1px); */\n    padding: 1px;\n`\n\nexport const ParagraphStyles = styled.p`\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1rem;\n    max-width: 63ch;\n    /* margin-left: 1px;\n    transform: translate(-1px); */\n    padding: 1px;\n    white-space: pre-wrap;\n    word-wrap: normal;\n`\n\nexport const CenteredItemsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1px;\n    white-space: pre-wrap;\n`\n\nexport const CharacterStyles = styled.p`\n    font-family: 'Courier New', Courier, monospace;\n    text-transform: uppercase;\n    /* margin-left: 1px; */\n    /* transform: translate(-1px); */\n    padding: 1px;\n`\n\nexport const ParentheticalStyles = styled.p`\n    font-family: 'Courier New', Courier, monospace;\n    width: 26ch;\n    @media(max-width: 700px) {\n        width: 17ch;\n    }\n    @media(max-width: 700px) {\n        width: 14ch;\n    }\n    /* margin-left: 1px;\n    transform: translate(-1px); */\n    padding: 1px;\n`\n\nexport const DialogStyles = styled.div`\n    font-family: 'Courier New', Courier, monospace;\n    width: 34ch;\n    @media(max-width: 700px) {\n        width: 25ch;\n    }\n    @media(max-width: 500px) {\n        width: 20ch;\n    }\n    padding: 1px;\n    white-space: pre-wrap;\n    /* width: 500px; */\n\n    /* margin-left: 1px;\n    transform: translate(-1px); */\n`\n\nexport const Container = styled.div`\n    font-family: 'Courier New', Courier, monospace;\n    width: 65vw;\n    max-width: 780px;\n    background-color: var(--sidebar);\n    padding: 80px 75px 50px 75px;\n    border-radius: 5px;\n    min-height: 100vh;\n    margin: 45px 0;\n    @media(max-width: 900px) {\n        width: 95vw;\n        padding: 80px 35px 50px 35px;\n    }\n`\n\nexport const Decorations = styled.span`\n    font-style: ${props=>props.italics};\n    font-weight: ${props=>props.weight};\n`\n\n// dropdown items\nexport const TIME_OF_DAY = [\n    'DAWN',\n    'MORNING',\n    'DAY',\n    'AFTERNOON',\n    'DUSK',\n    'NIGHT',\n    'EVENING',\n]","// @refresh reset\nimport { createEditor, Editor, Transforms, Range, Text } from 'slate'\nimport { Slate, Editable, withReact, ReactEditor } from 'slate-react'\nimport { useMemo, useState, useCallback, useEffect } from 'react'\nimport { withHistory } from 'slate-history'\nimport { connect } from 'react-redux'\nimport Autocomplete from './Autocomplete'\nimport styled from 'styled-components'\nimport isHotKey from 'is-hotkey'\nimport {\n    TIME_OF_DAY,\n    Container,\n    Dialog,\n    SceneHeading,\n    Paragraph,\n    Transition,\n    Character,\n    Parenthetical,\n    Decorations\n} from './EditorAssets'\n\nconst EditorInterface = (props) => {\n    const editor = useMemo(()=> withReact(withHistory(createEditor())), [])\n    const [target, setTarget] = useState()\n    const [index, setIndex] = useState(0)\n    const [position, setPosition] = useState({top: '-9999px', left: '-9999px', display: 'none',})\n    const [searchType, setSearchType] = useState('')\n    const [searchQuery, setSearchQuery] = useState('')\n\n    const searchMap = {\n        names: props.characters,\n        times: TIME_OF_DAY,\n        locations: props.locations,\n    }\n\n    const searchResults = searchMap[searchType]?.filter(item=> {\n        return item.startsWith(searchQuery.toUpperCase()) && item!==searchQuery.toUpperCase()\n    })\n\n    useEffect(() => {\n        if(editor.selection) {\n            const { path } = editor.selection.focus\n            const currentText = props.value[path[0]]?.children[0]?.text\n            if (target && searchType.length > 0 && searchResults?.length > 0 && currentText?.length > 0) {\n                const domRange = ReactEditor.toDOMRange(editor, target)\n                const rect = domRange.getBoundingClientRect()\n                const newPosition = {\n                    top: `${rect.top + window.pageYOffset + 25}px`,\n                    display: 'flex',\n                }\n                if(searchType==='locations' || 'times') {\n                    newPosition['left'] = `${rect.left + window.pageXOffset + 10}px`\n                }\n                if(searchType==='names'){\n                    newPosition['left'] = `${rect.left + window.pageXOffset}px`\n                }\n                setPosition(newPosition)\n            }else{\n                setPosition({\n                    top: '-9999px',\n                    left: '-9999px',\n                    display: 'none'\n                })\n            }\n        }\n        // eslint-disable-next-line \n    }, [searchResults?.length, index, searchType, editor, searchQuery, target])\n    \n    const renderElement = useCallback((props)=> {\n        const { type } = props.element\n        if(type==='character') return <Character {...props} />\n        if(type==='dialog') return <Dialog {...props} />\n        if(type==='heading') return <SceneHeading {...props} />\n        if(type==='transition') return <Transition {...props} />\n        if(type==='parenthetical') return <Parenthetical {...props} />\n        return <Paragraph {...props} />\n    }, [])\n\n    const checkDescription = (path, e, currentText, type) => {\n        if(!type) return false\n        const previousText = props.value[path[0]-1].children[0].text \n        const previousPreviousType = props.value[path[0]-2].type\n        const currentTextUppercase = currentText.toUpperCase()\n        let nextType\n        if(props.value[path[0]+1]) {\n            nextType = props.value[path[0]+1].type\n        }\n        if(\n            previousText === '' \n            && e.key !== 'Enter'\n            && !currentTextUppercase.includes('EXT.')\n            && !currentTextUppercase.includes('INT.')\n            && !currentTextUppercase.includes('INT./EXT.')\n            && previousPreviousType !== 'dialog'\n            && nextType !== 'dialog'\n            && nextType !== 'parenthetical'\n        ) {\n            setNode(null)\n            return true\n        }\n        return false\n    }\n\n    const checkDialog = (path, type) => {\n        if(type==='dialog') return false\n        const currentText = props.value[path[0]].children[0].text\n        const previousText = props.value[path[0]-1].children[0].text\n        const previousType = props.value[path[0]-1].type\n        if(\n            previousText === previousText.toUpperCase() \n            && previousText.length > 0\n            && previousText[previousText.length - 1] !== ':'\n            && currentText[currentText.length - 1] !== ':'\n            && currentText[0] !== '('\n            && !previousText.includes('INT.')\n            && !previousText.includes('EXT.')\n            && !previousText.includes('INT./EXT.')\n        ) {\n            Transforms.setNodes(\n                editor,\n                { type: 'character' },\n                { \n                    at: [path[0]-1],\n                    match: n => Editor.isBlock(editor, n),\n                    mode: 'lowest',\n                },\n            )\n            Transforms.setNodes(\n                editor, \n                {preventStyle: true},  \n                {at: [path[0]-1], match: n => Text.isText(n), split: true}\n\n            )\n            \n            setNode('dialog')\n            return true\n        }else if(previousText.length > 0 && (currentText[0] !== '(') && (previousText[0] === '(' || previousType==='character')) {\n            setNode('dialog')\n            return true\n        }\n        return false\n    }\n\n    const checkParenthetical = (path, currentText, e, type) => {\n        if (type==='parenthetical') return false\n        const character = props.value[path[0]-1].children[0].text\n        if(character === character.toUpperCase() \n        && (currentText[0] === '(' || (e.key==='(' && e.shiftKey))\n        ) {\n            setNode('parenthetical')\n            Transforms.setNodes(\n                editor,\n                { type: 'character' },\n                { \n                    at: [path[0]-1],\n                    match: n => Editor.isBlock(editor, n),\n                    mode: 'lowest',\n                },\n            )\n            return true\n        }\n        return false\n    }\n\n    const checkCharacter = (path, currentText, currentType) => {\n        if (currentType==='character') return false\n        if(path[0] > 1) {\n            const previousType = props.value[path[0]-2].type\n            if(\n                previousType === 'dialog' \n                && currentType\n                && currentText === currentText.toUpperCase()\n                && !currentText.includes('INT.')\n                && !currentText.includes('EXT.')\n                && !currentText.includes('INT./EXT.')\n                && !currentText.includes(':')\n            ) {\n                setNode('character')\n                return true\n            }\n        }\n        return false\n    }\n\n    const incrementIndex = (e) => {\n        if(e.key==='ArrowUp') {\n            e.preventDefault()\n            setIndex(index === 0 ? searchResults.length - 1 : index - 1)\n            return true\n        }\n        if(e.key==='ArrowDown') {\n            e.preventDefault()\n            setIndex(index === searchResults.length - 1 ? 0 : index + 1)\n            return true\n        }\n    }\n\n    const timeSearch = (newValue) => {\n        const { path } = editor.selection.focus\n        const currentText = newValue[path[0]].children[0].text\n        if(!currentText.includes('-')) return\n        const splitValue = currentText.split('-')\n        if(splitValue.length > 1) {\n            setSearchQuery((splitValue[splitValue.length - 1]).trim())\n        }\n    }\n\n    const insertNodes = (type) => {\n        let obj = {children: [{ text: '' }]}\n        if(type) obj['type'] = type\n        if(type===null || type === 'dialog') {\n            Transforms.insertNodes(editor, [obj])  \n        }else {\n            Transforms.insertNodes(editor, [obj])  \n            Transforms.setNodes(\n                editor, \n                {preventStyle: true},  \n                {match: n => Text.isText(n), split: true}\n            )\n        }\n    }\n\n    const replaceLocation = (path, currentText) => {\n        const intExt = currentText.split(' ')[0].toUpperCase() \n        const [endPosition] = Range.edges(editor.selection)\n        let offset = 0\n        if(intExt=== 'INT.' || intExt === 'EXT.') offset = 5\n        if(intExt=== 'INT./EXT.') offset = 10\n        const startPosition = { offset, path }\n        const range = Editor.range(editor, startPosition, endPosition)\n        insertText(searchResults[index], range)\n        setIndex(0)\n        setSearchQuery('')\n    }\n\n    const replaceLocationAddDash = (path) => {\n        const currentText = props.value[path[0]].children[path[1]].text\n        replaceLocation(path, currentText)\n        if(!currentText.includes('-')) {\n            insertText(' - ')\n        }\n    }\n\n    const handleDelete = (path, e, type) => {\n        const anchor = editor.selection.anchor\n        const focus = editor.selection.focus\n        if(anchor.path[0] !== focus.path[0]) return\n        if(anchor.offset !== focus.offset) return\n        const currentText = props.value[path[0]].children[path[1]].text\n        if(type==='heading') {\n            const split = currentText.split(' ')\n            if(split.length === 2 && split[1].trim().length===0) {\n                setTarget(null)\n            }\n            if(anchor.offset===0) return\n        }\n        if(!type) {\n            if(anchor.offset===0) return\n        }\n        const offset = editor.selection.focus.offset\n        if(currentText.length > 0 && offset > 0) return\n        if(currentText === '' && (type==='heading' || !type)) return\n        \n        e.preventDefault()\n        return setNode(null)\n    }\n    const setNode = (newType) => {\n        if(newType===null || newType === 'dialog') {\n            Transforms.setNodes(\n                editor, \n                {preventStyle: false},  \n                {match: n => Text.isText(n), split: true}\n            )\n            return Transforms.setNodes(\n                editor,\n                { type: newType },\n                { match: n => Editor.isBlock(editor, n) },\n            )\n        }else {\n            Transforms.setNodes(\n                editor, \n                {preventStyle: true},  \n                {match: n => Text.isText(n), split: true}\n            )\n            return Transforms.setNodes(\n                editor,\n                { type: newType },\n                { match: n => Editor.isBlock(editor, n) },\n            )\n        }\n    }\n\n    const replaceCharacter = (path) => {\n        insertText(searchResults[index].toUpperCase(), [path[0]])\n        props.addCharacter(searchResults[index])\n    }\n\n    const replaceCharacterEnter = (path) => {\n        replaceCharacter(path)\n        if(props.value[path[0]].type==='character') {\n            return insertNodes('dialog')\n        }\n        return editor.insertBreak()\n    }\n\n    const replaceTime = (path) => {\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = Editor.before(editor, endPosition, { unit: 'word' })\n        const range =  Editor.range(editor, startPosition, endPosition)\n        const heading = props.value[path[0]].children[0].text\n        insertText(heading.toUpperCase(), [path[0]])\n        insertText(searchResults[index], range)\n        return props.addLocation(heading)\n    }\n\n    const replaceTimeEnter = (path) => {\n        replaceTime(path)\n        insertNodes(null)\n        return insertNodes(null)\n    }\n\n    const checkTransition = (e, currentText, type) => {\n        if(type==='transition') return false\n        if(\n            e.code==='Semicolon' \n            && e.shiftKey\n            && currentText === currentText.toUpperCase()\n        ) {\n            setNode('transition')\n            return true\n        }\n        if(\n            currentText === currentText.toUpperCase()\n            && currentText.includes('(')\n        ) {\n            setNode('transition')\n            return true\n        }\n        return false\n    }\n\n    const checkHeading = (splitText, type) => {\n        if(type==='heading') return false\n        const intExt = splitText[0].toUpperCase()\n        if(intExt === 'INT.' || intExt === 'EXT.' || intExt === 'INT./EXT.') {\n            setNode('heading')\n            return true\n        }\n        return false\n    }\n\n    const insertText = (text, position) => {\n        Transforms.insertText(\n            editor,\n            text, \n            { at: position }\n        )\n    }\n\n    const handleReplace = (path, e, type) => {\n        if(searchResults?.length > 0 && searchType.length > 0 && searchQuery.length>0) {\n            e.preventDefault()\n            setSearchQuery('')\n            setIndex(0)\n            if(searchType==='names') return replaceCharacterEnter(path)\n            if(searchType==='locations') return replaceLocationAddDash(path)\n            return replaceTimeEnter(path)\n        } else if (type === 'character') {\n            e.preventDefault()\n            const character = props.value[path[0]].children[0].text\n            insertText(character.toUpperCase(), [path[0]])\n            props.addCharacter(character)\n            return insertNodes('dialog')\n        } else if (type === 'heading') {\n            e.preventDefault()\n            const heading = props.value[path[0]].children[0].text\n            insertText(heading.toUpperCase(), [path[0]])\n            props.addLocation(heading)\n            insertNodes(null)\n            return insertNodes(null)\n        }\n    }\n\n    const handleEnter = (path, e, type) => {\n        if(type === 'transition') {\n            editor.insertBreak()\n            return setNode(null)\n        }\n        if(!type && props.value[path[0]].children[0].text !== props.value[path[0]].children[0].text.toUpperCase()) {\n            return editor.insertBreak()\n        }\n        if(type === 'dialog') {\n            e.preventDefault()\n            insertNodes(null)\n            if(props.value[path[0]-1].type==='parenthetical') {\n                props.addCharacter(props.value[path[0]-2].children[0].text)\n            }else{\n                props.addCharacter(props.value[path[0]-1].children[0].text)\n            }\n            return insertNodes('character')\n        }\n        if(type === 'parenthetical') {\n            e.preventDefault()\n            return insertNodes('dialog')\n        }\n        return handleReplace(path, e, type)\n    }\n\n    const handleTab = (path, e) => {\n        if(searchResults?.length > 0 && searchType.length > 0 && searchQuery.length>0) {\n            e.preventDefault()\n            setSearchQuery('')\n            setIndex(0)\n            if(searchType==='names') return replaceCharacter(path)\n            if(searchType==='locations') return replaceLocationAddDash(path)\n            return replaceTime(path)\n        } \n    }\n\n    const pasteCheckHeading = (text) => {\n        const split = text.split(' ')\n        if(\n            split[0].toUpperCase().includes('INT.')\n            || split[0].toUpperCase().includes('EXT.')\n            || split[0].toUpperCase().includes('INT./EXT.')\n        ) return true\n        return false\n    }\n\n    const pasteCheckCharacter = (text, next) => {\n        if(!next) return false\n        if(next.length === 0) return false\n        if(text.toUpperCase() !== text) return false\n        return true\n    }\n\n    const pasteCheckTransition = (text) => {\n        if(\n            text.toUpperCase() === text\n            && text.includes(':')\n        ) return true\n        return false\n    }\n\n    const pastecheckParenthetical = (current, previous) => {\n        if(!previous) return false\n        if(!previous.length > 0) return false\n        if(current.trim()[0] !== '(') return false\n        return true\n    }\n\n    const pasteCheckDialog = (current, previous) => {\n        console.log(previous)\n        if(!previous) return false\n        if(previous.length === 0) return false\n        if(previous.toUpperCase()===previous) return true\n        if(previous[0] === '(') return true\n        return false\n    }\n\n    const pasteText = (text, type, currentIndex, maxIndex, pasteBlankLine) => {\n        // if(text.length === 0) return pasteBlankLine()\n        Transforms.setNodes(editor, {type})\n        Transforms.insertText(editor, text)\n        if(currentIndex === maxIndex - 1) return\n        insertNodes(null)\n        // if(currentIndex === maxIndex - 1) console.log(currentIndex, maxIndex)\n        // if(pasteBlankLine) pasteBlankLine()\n        // if(text.length > 0) return insertNodes(null)\n    }\n\n    const checkPaste = (current, previous, next, currentIndex, maxIndex) => {\n        // if(current.length === 0) return\n        if(pasteCheckHeading(current)===true) return pasteText(current, 'heading', currentIndex, maxIndex)\n        if(pasteCheckTransition(current)) return pasteText(current, 'transition', currentIndex, maxIndex)\n        if(pasteCheckCharacter(current, next)) return pasteText(current, 'character', currentIndex, maxIndex)\n        if(pastecheckParenthetical(current, previous)) return pasteText(current, 'parenthetical', currentIndex, maxIndex)\n        if(pasteCheckDialog(current, previous)) return pasteText(current, 'dialog', currentIndex, maxIndex)\n        return pasteText(current, null, currentIndex, maxIndex)\n    }\n\n    editor.insertData = (data) => {\n        const currentText = data.getData('text/plain').trim()\n        console.log(currentText)\n        const splitText = currentText.split('\\n')\n        for (let i = 0; i < splitText.length; i ++) {\n            const current = splitText[i].trim()\n            let previous\n            let next\n            if(i - 1 >= 0) {\n                previous = splitText[i - 1].trim()\n                if(current.length === 0 && previous.length === 0) {\n\n                } else {\n                    if(i + 1 < splitText.length) next = splitText[i + 1].trim()\n                    checkPaste(current, previous, next, i, splitText.length)\n                }\n            }else{\n                if(i + 1 < splitText.length) next = splitText[i + 1].trim()\n                checkPaste(current, previous, next, i, splitText.length)\n            }\n        }\n    }\n\n    const handleUndo = () => {\n        setTarget(null)\n    }\n\n    const checkIsPreventStyle = () => {\n        const [match] = Editor.nodes(editor, {\n            match: n => n.preventStyle === true\n        })\n        return match\n    }\n\n    const modifiers = (e) => {\n        const { path } = editor.selection.focus\n        const { type } = props.value[path[0]]\n        if(e.key==='h' && e.ctrlKey) {\n            setNode('character')\n            insertNodes(null)\n            insertNodes(null)\n        }\n        if(e.key==='a' && e.ctrlKey) {\n            setNode(null)\n        }\n        if(e.key==='ArrowRight') return\n        if(e.key==='ArrowLeft') return\n        if(e.key==='ArrowUp' && searchQuery.length===0) return\n        if(e.key==='ArrowDown' && searchQuery.length===0) return\n        \n        if(isHotKey('mod+b', e)) {\n            e.preventDefault()\n            if(checkIsPreventStyle()) return\n            const [match] = Editor.nodes(editor, {\n                match: n => n.bold === true\n            })\n            Transforms.setNodes(\n                editor, \n                {bold: match ? false : true}, \n                {match: n => Text.isText(n), split: true}\n            )\n        }\n        if(isHotKey('mod+i', e)) {\n            e.preventDefault()\n            const [match] = Editor.nodes(editor, {\n                match: n => n.italics === true\n            })\n            Transforms.setNodes(\n                editor, \n                {italics: match ? false : true}, \n                {match: n => Text.isText(n), split: true}\n            )\n        }\n        if(isHotKey('mod+c', e)) return\n        if(isHotKey('mod+v', e)) return \n        if(isHotKey('mod+x', e)) return\n        if(isHotKey('mod+z+shift', e)) return handleUndo()\n        if(isHotKey('mod+z', e)) return handleUndo()\n        if(isHotKey('mod', e)) return\n        if(isHotKey('mod+Backspace', e)) {\n            setTarget(null)\n            setSearchQuery('')\n        }\n        const anchor = editor.selection.anchor\n        const focus = editor.selection.focus\n        if(anchor.path[0] !== focus.path[0]) return\n        if(anchor.offset !== focus.offset) return\n        \n        if(props.isPreventSave) props.setIsPreventSave(false)\n        if(!editor.selection) return\n        if(searchQuery.length > 0 && searchType.length > 0 && searchResults.length > 0) {\n            if(incrementIndex(e)) return\n        }\n        const currentText = props.value[path[0]].children[0].text\n        const splitText = currentText.split(' ')\n        if (e.key==='Backspace') return handleDelete(path, e, type)\n        if (e.key === 'Enter') return handleEnter(path, e, type)\n        if (e.key === 'Tab') return handleTab(path, e, type)\n        if (checkTransition(e, currentText, type)) return\n        if (checkHeading(splitText, type)) return\n        if(path[0] > 1) {\n            checkDescription(path, e, currentText, type)\n        }\n        if (checkCharacter(path, currentText, type)) return\n        if(path[0] > 0) {\n            if (checkParenthetical(path, currentText, e, type)) return\n            if (checkDialog(path, type)) return\n        }\n    }\n\n    const namesOnChange = (newValue, path) => {\n        setSearchType('names')\n        setSearchQuery(newValue[path[0]].children[0].text)\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = Editor.before(editor, endPosition, { unit: 'word' })\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const locationsOnChange = (startValue, joinedValue, path) => {\n        setSearchType('locations')\n        setSearchQuery(joinedValue.split('-')[0].trim())\n        const [endPosition] = Range.edges(editor.selection)\n        let offset = 0\n        const intExt = startValue.toUpperCase()\n        if(intExt=== 'INT.' || intExt === 'EXT.') offset = 4\n        if(intExt=== 'INT./EXT.') offset = 9\n        const startPosition = { offset, path }\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const timesOnChange = (newValue, currentText, path) => {\n        setSearchType('times')\n        timeSearch(newValue)\n        const splitText = currentText.split('-')\n        splitText.pop()\n        const joinedText = splitText.join('')\n        let offset = joinedText.length + 1\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = { path, offset }\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const handleOnChange = (newValue) => {\n        const { path } = editor.selection.focus\n        const currentText = newValue[path[0]]?.children[path[1]]?.text\n        if((\n            currentText?.length > 0 \n            && (newValue[path[0]].type === 'character'\n            || currentText===currentText.toUpperCase())\n            ) \n            && !currentText?.includes('INT.') \n            && !currentText?.includes('EXT.') \n            && !currentText?.includes('INT./EXT.')\n        ) {\n            namesOnChange(newValue, path)\n        }else if(newValue[path[0]].type === 'heading') {\n            const currentOffset = editor.selection.anchor.offset\n            const splitValue = currentText?.split(' ')\n            const startValue = splitValue.shift()\n            const joinedValue = splitValue.join(' ')\n            const minOffset = startValue.length\n            let maxOffset = Infinity\n            if(joinedValue.includes('-')){\n                const splitDash = joinedValue.split('-')\n                maxOffset = currentText.length - splitDash.length - 4\n            }\n            if(currentOffset > minOffset && currentOffset < maxOffset) {\n                locationsOnChange(startValue, joinedValue, path)\n            } else if (currentOffset > maxOffset) {\n                timesOnChange(newValue, currentText, path)\n            }\n        }else{\n            setTarget(null)\n            setSearchType('')\n        }\n    }\n\n    const Leaf = (props) => {\n        let weight \n        if(props.leaf.bold) {\n            weight = 600\n        }else if(props?.children?.props?.parent?.type==='heading') { \n            weight = 600\n        } else {\n            weight = 500\n        }\n        return(\n            <Decorations {...props.attributes}\n                weight={weight}\n                italics={props.leaf.italics ? 'italic' : 'normal'}\n            >\n                {props.children}\n            </Decorations>\n        )\n    }\n\n    const renderLeaf = useCallback(props => {\n        return <Leaf {...props} />\n    }, [])\n\n    return(\n        <Container>\n            {console.log(props.value)}\n            <Slate value={props.value} editor={editor} onChange={newValue => {\n                props.setValue(newValue)\n                if(editor.selection) {\n                    handleOnChange(newValue)\n                }\n            }}>\n                <StyledEditable renderLeaf={renderLeaf} autoFocus placeholder='Masterpiece goes here' onKeyDown={modifiers} renderElement={renderElement} />\n                {((searchQuery.length > 1 && searchType==='names') || (searchQuery.length > 0 && searchType==='names' && props.value[editor?.selection?.focus?.path[0]]?.type==='character')) &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n                {searchQuery.length > 0 && searchType==='locations' && searchResults?.length> 0 &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n                {searchQuery.length > 0 && searchType==='times' && searchResults.length> 0 &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n            </Slate>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n})\n\nexport default connect(mapStateToProps)(EditorInterface)\n\nconst StyledEditable = styled(Editable)`\n    &:focus{\n        box-shadow: none;\n    }\n`","import { jsPDF } from \"jspdf\"\nvar font = 'AAEAAAAQAQAABAAAR0RFRgRvCHsAAQYUAAAAPEdTVUL+f/UDAAEGUAAAA85PUy8ycMiKKAAA50AAAABgY21hcDv1W20AAOegAAACdmN2dCAm4RCFAAD48AAAAGxmcGdtnjYTzgAA6hgAAA4VZ2FzcAAAABAAAQYMAAAACGdseWYsBgu3AAABDAAA3GpoZWFkHFEb1AAA4LwAAAA2aGhlYQ/W+9UAAOccAAAAJGhtdHhAN9U6AADg9AAABiZsb2NhhxlPpAAA3ZgAAAMibWF4cAL8D0kAAN14AAAAIG5hbWVp+JAOAAD5XAAABGBwb3N0i8b+xwAA/bwAAAhPcHJlcFqx3zsAAPgwAAAAvQADAJX+5QRLBSoADwATADkAV0BUNi0jGQQGBAFMBQEEAgYCBAaACgcCBgMCBgN+CAEBAAIEAQJnCQEDAAADVwkBAwMAXwAAAwBPFBQQEAAAFDkUODQyKCYfHhATEBMSEQAPAA01CwYXKwAWFQMUBiMhIiY1EzQ2MyEDEyEDNiY1NDcTAyY1NDYzMhYXExM2NjMyFhUUBwMTFhUUBiMiJwMDBiMELh0DHSL8yyIdAx0iAzUtAv0gApMkA9bWAiIVEhkFoqIFGRIVIgLW1gMkFSYJoqIJJgUqHyX6QyUfHyUFvSUf+iEFefqH9hENBAYBmgGYAwcOEgsK/rMBTQoLEg4HA/5o/mYGBA0REwFN/rMTAAIB6f/2AuME9QAOABwAVbcKAwIDAAEBTEuwF1BYQBcAAAABYQQBAQEkTQUBAwMCYQACAiMCThtAFQQBAQAAAwEAaQUBAwMCYQACAiMCTllAEg8PAAAPHA8bFhQADgAMJQYIFysAFgcDBgYjIiYnAyY2MzMSFhUVFAYjIiY1NTQ2MwK+FAIxAh0aGh8BMAIUF4IBOztCQjs7QgT1GBr9PRcZGRcCwxoY/BkdIpoiHR0imiId//8A/wLLA80E9QAjAAr/GgAAAAMACgDmAAAAAgA8/+oEkAS5AEsATwBYQFVHPAIJCiEWAgMCAkwQDQsDCQ4IAgABCQBoEQ8HAwEGBAICAwECZwwBCgooTQUBAwMpA05MTAAATE9MT05NAEsASkVDQD86ODUzISQlIxUjJCEkEggfKwAWFRQGIyMHMzIWFRQGIyMDBgYjIiY1NDcTIQMGBiMiJjU0NxMjIiY1NDYzMzcjIiY1NDYzMxM2NjMyFhUUBwMhEzY2MzIWFRQHAzMBNyEHBHMdHSLCQLwiHR0i4lMEHxMcLAJL/vpTBB8THCwCS6AiHR0ixUC/Ih0dIuRRBB8THCwCSAEFUQQfExwsAkid/nlA/vtAA2EhJych9SEnJyH+vxARHhgDCgEf/r8QER4YAwoBHyEnJyH1IScnIQE3EBEeGAMK/usBNxARHhgDCv7r/nv19QAAAwCz/4MEGgUgAEcAUABZAKVAGwUDAggAFAEBCFhPOhUEBQE5AQkFKCYCAgkFTEuwIFBYQCwLAQgBAAhZBgEAAAEFAAFpAAUJAgVZDAEJBAECAwkCaQADAwdhCgEHByQDThtAMgoBBwADB1kLAQgBAAhZBgEAAAEFAAFpAAUJAgVZDAEJBAECAwkCaQoBBwcDYQADBwNRWUAcUVFISAAAUVlRWUhQSFAARwBGHiUoIxwlKA0IHSsAFhUVFhc1NDYzMhYVFRQGIyInJicVFhcWFhUUBgYHFRQGIyImNTUmJxUUBiMiJjU1NDYzMhYXFhYXESYnJiY1NDY2MzU0NjMCBhUUFhcWFzUSNjU0JicmJxEChSFfUSIpKSIiKSIOPI9/TFBZV6d2ISUlIXxVIikpIiIpFRgJHHFZgkZJUVuhZiElo2cpKCNQ9G4sKSxVBSAfIq4YSS0jHh4jviMeGnQb9w4cHW5aWIVMArIiHx8ivRlVOCMeHiPwIx4TFktWDwEXEB0dZ1NXfUChIh/+i0U8ICgNDAvv/V9TQiIsDg8K/vEAAAUAMv/qBJoEuQAPACEAMQBBAFEAYkBfAAIBBQECBYAAAwgGCAMGgAAEAAAHBABpDAEHDQEJCAcJaQsBBQUBYQoBAQEoTQAICAZhAAYGKQZOQkIyMiIiAABCUUJQSkgyQTJAOjgiMSIwKigbGRIQAA8ADiYOCBcrABYWFRQGBiMiJiY1NDY2MwQzMhcWFRQHAQYjIicmNTQ3ASQGBhUUFhYzMjY2NTQmJiMAFhYVFAYGIyImJjU0NjYzDgIVFBYWMzI2NjU0JiYjAY5+Skp+Skp+Skp+SgK9FxoYGRj8lhYXGhgZGANq/TJCJydCJydCJydCJwKOfkpKfkpKfkpKfkonQicnQicnQicnQicEuUp+Skp+Skp+Skp+SoAbGxYXF/zCFhsbFhgWAz4UJ0InJ0InJ0InJ0In/ddKfkpKfkpKfkpKfkqCJ0InJ0InJ0InJ0InAAACAJP/6gRtBLkAPgBIAO5LsDFQWEAYCwEAATgBAgBIAQMCRyMVAwQDLwEFBAVMG0AYCwEAATgBAgBIAQMCRyMVAwQDLwEIBAVMWUuwF1BYQCgAAAECAQACgAACAAMEAgNpAAEBB2EJAQcHKE0IAQQEBWEGAQUFIwVOG0uwMVBYQDIAAAECAQACgAACAAMEAgNpAAEBB2EJAQcHKE0IAQQEBWEABQUjTQgBBAQGYQAGBikGThtAMAAAAQIBAAKAAAIAAwQCA2kAAQEHYQkBBwcoTQAEBAVhAAUFI00ACAgGYQAGBikGTllZQBIAAEZEAD4APSM0IyQ6JCYKCB0rABcWFRUUBiMiJjU1JiMiBgYVFBYXATY3NjMzMhYVFAYjIwYHFzMyFhUUBiMjIicnBiMiJiY1NDY3JjU0NjYzAgYVFBYWMzI3AQLklxUiKSkiTG03USopKgElKCAMKJ0iHR0iXSQybVQiHR0icjAeV4OuaZlRZl1jU5hk1D0uUjV2W/77BLloDyd/Ix4eI1ovLk4vNFkv/rZYbSofJSUfel96HyUlHyFhmFqXW2WeQXSMWZJU/StrQzRUMHABJgABAeUCywLnBPUADAA2S7AXUFhADAAAAAFfAgEBASQAThtAEgIBAQAAAVcCAQEBAGEAAAEAUVlACgAAAAwACiQDCBcrAAcDBgYjIiYnAyYzMwLnBjcDIx4dJAM3Bi+kBPUy/j4aHBwaAcIyAAABASn+qQNhBWUAHwAfswEBAEpLsBdQWLUAAAAnAE4bswAAAHZZtBYUAQgWKwAzMhYXFhUUBwYCFRQSFxYVFAcGBiMiJyYmAjU0EjY3Aw4KEB0LEQ2t6umuDRELHRAKC3rXiYnYeQVlFhIdGRQJcv6M///+kHIJFBkdEhYGSfMBUsjIAVT1SQAAAQFr/qkDowVlAB8AH7MJAQBJS7AgUFi1AAAAKgBOG7MAAAB2WbQeHAEIFisAFhIVFAIGBwYjIiYnJjU0NzYSNTQCJyY1NDc2NjMyFwJC2ImJ13oLChAdCxENrunqrQ0RCx0QCgsFFvX+rMjI/q7zSQYWEh0ZFAlyAXD//wF0cgkUGR0SFgYAAAEAvwGKBA0EuQA1AFRADzABAAQvJyMZDwMGAQACTEuwKlBYQBMCAQEAAYYFAQQEKE0DAQAAKwBOG0AVAwEABAEEAAGAAgEBAYQFAQQEKAROWUANAAAANQA0HiQuJQYIGisAFgcDJTYzMhYXFhUUBgcFFxYVFAcGIyInJwcGIyInJjU0NzclJiY1NDc2NjMyFwUDJjU0NjMClC0FJAEAFxEYJQoGIiD+6sQZKh4aKhmHhxkqGh4qGcL+7CAiBgolGBEXAQAkAS0qBLkwKv7oeQohHxMSHCYGNdAZHSUeFS719S4VHiUdGdA1BiYcEhMfIQp5ARgFCiMoAAABAKoAigQiBAIAHwAtQCoGAQUAAgVZBAEAAwEBAgABZwYBBQUCYQACBQJRAAAAHwAeJCMjJCMHCBsrABYVESEyFhUUBiMhERQGIyImNREhIiY1NDYzIRE0NjMCix8BOSIdHSL+xx8lJR/+xyIdHSIBOR8lBAIdIv7HHyUlH/7HIh0dIgE5HyUlHwE5Ih0AAQF0/toC7QEmABAAHkAbCQEAAQFMAAEAAAFXAAEBAGEAAAEAUSYmAggYKwAWFRQHAwYjIjU0NxM2NjMzAtsSB9QSREgCXgQbFcIBJhMPDg/+HCkyBAwB4hMVAAABAKoCAgQiAooADQAfQBwCAQEAAAFXAgEBAQBfAAABAE8AAAANAAs0AwgXKwAWFRQGIyEiJjU0NjMhBAUdHSL9BiIdHSIC+gKKHyUlHx8lJR8AAQHf//YC7QEsAA0AGUAWAgEBAQBhAAAAIwBOAAAADQAMJQMIFysAFhUVFAYjIiY1NTQ2MwKuPz9ISD8/SAEsHSK4Ih0dIrgiHQABAMb+nQQGBXIAEQA2tgsCAgABAUxLsCBQWEAMAgEBASpNAAAAJwBOG0AKAgEBAAGFAAAAdllACgAAABEAECcDCBcrABYVFAcBBgYjIiY1NDcBNjYzA9I0A/1gByMXKDQDAqAHIxcFch4XCAn5lRAUHhcICQZrEBQAAAIAvP/qBBAEuQAPAB8ALEApBQEDAwFhBAEBAShNAAICAGEAAAApAE4QEAAAEB8QHhgWAA8ADiYGCBcrABYSFRQCBiMiJgI1NBI2Mw4CFRQWFjMyNjY1NCYmIwLmwWlpwIGBwGlpwYBPeUREeU9PeUREeU8EuZn+6bi4/uqZmQEWuLgBF5mUb9OSktNubtOSktNvAAABANwAAAQNBLwAHwAwQC0OAQIDAUwAAgMBAwIBgAADAyhNBQQCAQEAYAAAACMATgAAAB8AHicjJDQGCBorJBYVFAYjISImNTQ2MyERBwYjIicmNTQ3JTYzMhYVESED8B0dIv1eIh0dIgEN+REOIBcOHwF5FBQWHQD/iB8lJR8fJSUfA1qbCikYFiIS6AwdGvwDAAEAuwAAA+8EuQAvAGy1IgEEAwFMS7AOUFhAJAAEAwEDBAGAAAEAAAFwAAMDBWEGAQUFKE0AAAACYAACAiMCThtAJQAEAwEDBAGAAAEAAwEAfgADAwVhBgEFBShNAAAAAmAAAgIjAk5ZQA4AAAAvAC4kKjUjFwcIGysAFhYVFAYHASE1NDYzMhYVFRQGIyEiJjU0NwE2NjU0JiMiBxUUBiMiJjU1NDc2NjMCuK9gZWv+sAGyIikpIh0i/UoiHQ8BuFxLd21uYSIpKSIXSapaBLlTnm1mq23+q34jHh4jwiUfHyUmEAG+Xn1IXW04biMeHiOTJxA1OwAAAQC//+oD8gS5AD4AS0BIMQEGBQYBAwQCTAAGBQQFBgSAAAEDAgMBAoAABAADAQQDaQAFBQdhCAEHByhNAAICAGEAAAApAE4AAAA+AD0kJDQ0JBcsCQgdKwAWFhUUBgcWFhUUBgYjIiYnJjU0NzYzMhcWFjMyNjU0JiMjIiY1NDYzMzI2NTQmIyIHFRQGIyImNTU0Njc2MwLBrF5QSVtlYbqBYshPHhEaIBASQppOfIKDdkkiHR0iN3J2dmx0USIpKSINDo+wBLlRlWRWfSUmkmZtplxEOhYcFB0qDTE5dWZnax8lJR9gXFVhJ0MjHh4jbRYaCVgAAgCTAAAEJwS5ACUAKAA2QDMoAQAGAUwHAQAFAQECAAFnCAEGBihNBAECAgNgAAMDIwNOAAAnJgAlACQhJDQhJCIJCBwrABURMzIWFRQGIyMVMzIWFRQGIyEiJjU0NjMzNSEiJjU0NwE2NjMBIRMDRqIiHR0iooQiHR0i/lIiHR0ilP4iIh0KAeQWMib+awFWCAS5Tv2FHyUlH+AfJSUfHyUlH+AfJSEOAqEfHv03AfAAAAEAvP/qA/IEowA0AEZAQwcBBQEBTAAGBQMFBgOAAAMEBQMEfgABAAUGAQVpAAAAB18IAQcHIk0ABAQCYQACAikCTgAAADQAMiMmJBcmIiQJCB0rABYVFAYjIQM2MzIWFhUUBgYjIiYnJjU0NzYzMhcWFjMyNjY1NCYmIyIGBwYjIiY3EzY2MyEDlx0dIv4uDWRzeLBdaMB+YMJPHxAaIBASQZhLUXg/O29KRGwzECIqIwIUAiApAhYEox8lJR/+vzhmtXV1uWpANxUeFhorDS42QXVOSnJAIyQKHiMB9CMeAAACAMn/6gQMBLoAHAAsADxAOQgBBQEBTAABBwEFBAEFaQAAAANhBgEDAyhNAAQEAmEAAgIpAk4dHQAAHSwdKyUjABwAGyYkJAgIGSsAFhUUBgcEBAc2NjMyFhYVFAYGIyImJyY1NBIkNwAGBhUUFhYzMjY2NTQmJiMDsB8TEv72/uIcNJhWbrFlZrt5bbc4TZMBQfj+lHRBP3NMTHI+PXFOBLomMx8bAQ731ERKXqxwbKtgZF+Ez60BNM0L/Y43YT9Gbj44Z0RFaDkAAQDl/+oEBQSjABsAUrULAQACAUxLsAxQWEAYAAIBAAECcgABAQNfBAEDAyJNAAAAKQBOG0AZAAIBAAECAIAAAQEDXwQBAwMiTQAAACkATllADAAAABsAGSMVJwUIGSsAFhUUBwEGBiMiJjU0NwEhFRQGIyImNTU0NjMhA+gdBv5WCScbJC0FAZf+JiIpKSIdIgKiBKMfJRgQ++EXFx0YDgsD45IjHh4j1iUfAAMAzv/qA/4EuQAbACsAOwBEQEEUBgIFAgFMAAIIAQUEAgVpBwEDAwFhBgEBAShNAAQEAGEAAAApAE4sLBwcAAAsOyw6NDIcKxwqJCIAGwAaLAkIFysAFhYVFAYHFhYVFAYGIyImJjU0NjcmJjU0NjYzDgIVFBYWMzI2NjU0JiYjAgYGFRQWFjMyNjY1NCYmIwLOqWBcSl1warp0dLpqcFxKW2CpaD5hODhjPDxjODhhPklwPz9wSUlwPz9wSQS5V5hbUYAoKpZiZ6VeXqVnYpYqKIBRW5hXlC1UODNUMDBUMzhULf4FNmE+PmI3N2I+PmE2AAACAMD/6QQDBLkAHAAsADxAOREBAgQBTAAEAAIBBAJpBwEFBQNhBgEDAyhNAAEBAGEAAAApAE4dHQAAHSwdKyUjABwAGyQkJwgIGSsAFhcWFRQCBAcGJjU0NjckJDcGBiMiJiY1NDY2Mw4CFRQWFjMyNjY1NCYmIwLHtzhNk/6/+BsfExIBCgEeHDSYVm6xZWa7eUxyPj1xTkl0QT9zTAS5ZF+Ez63+zM0LASYzHxsBDvfUREperHBsq2CUOGdERWg5N2E/Rm4+AAIB3//2Au0DpgANABsALEApBAEBAQBhAAAAJU0AAgIDYQUBAwMjA04ODgAADhsOGhUTAA0ADCUGCBcrACY1NTQ2MzIWFRUUBiMCJjU1NDYzMhYVFRQGIwIePz9ISD8/SEg/P0hIPz9IAnAdIrgiHR0iuCId/YYdIrgiHR0iuCIdAAACAYj+2gMBA6YADQAeACpAJxcBAgMBTAADAAIDAmUEAQEBAGEAAAAlAU4AAB4cFhQADQAMJQUIFysAJjU1NDYzMhYVFRQGIxIWFRQHAwYjIjU0NxM2NjMzAh4/P0hIPz9IiRIH1BJESAJeBBsVwgJwHSK4Ih0dIrgiHf62Ew8OD/4cKTIEDAHiExUAAAEAfQB7BB0EEwAZAB9AHAsIAgEAAUwAAAEBAFkAAAABYQABAAFRHCACCBgrADMyFxYVFAcBARYVFAcGIyInASYmNTQ2NwEDyREhFgwp/WACoCkMFiERFPz3GRYWGQMJBBMrGBIhFP6+/r4UIRIYKwoBfQwgGRkgDAF9AAACAKoBOgQiA1IADQAbADBALQQBAQAAAwEAZwUBAwICA1cFAQMDAl8AAgMCTw4OAAAOGw4ZFRIADQALNAYIFysAFhUUBiMhIiY1NDYzIRIWFRQGIyEiJjU0NjMhBAUdHSL9BiIdHSIC+iIdHSL9BiIdHSIC+gNSHyUlHx8lJR/+cB8lJR8fJSUfAAABAK8AewRPBBMAGQAfQBwSDwIAAQFMAAEAAAFZAAEBAGEAAAEAURwnAggYKwAWFRQGBwEGIyInJjU0NwEBJjU0NzYzMhcBBDkWFhn89xQRIRYMKQKg/WApDBYhERQDCQKAIBkZIAz+gworGBIhFAFCAUIUIRIYKwr+gwAAAgD+//YDxgT1ACcANQB4QAoaAQIBDQEAAgJMS7AXUFhAJgACAQABAgCAAAAFAQAFfgABAQNhBgEDAyRNBwEFBQRhAAQEIwROG0AkAAIBAAECAIAAAAUBAAV+BgEDAAECAwFpBwEFBQRhAAQEIwROWUAUKCgAACg1KDQvLQAnACYkLCkICBkrABYWFRQGBgcHBiMiJycmNjc3PgI1NCYjIgcVFAYjIiY1NTQ2NzYzEhYVFRQGIyImNTU0NjMC1p1TRYdtDQU9PwMNAg8RRVBdLWVcf1giKSkiDA2XvBE2Nj09NjY9BPVPjV1We1stkDAwxhQYBxwhOkgxS1olWSMeHiN/FRsIW/vxHSJyIh0dInIiHQAAAgAy/2cEkgQ2AEoAWABbQFgaFwIKAgoBAwoCTAAGAAUABgWACwEIAAQCCARpAAIMAQoDAgppCQEDAQEABgMAaQAFBwcFWQAFBQdhAAcFB1FLSwAAS1hLV1JQAEoASScyJiUuJiQmDQgeKwAWFhUUBgYjIiYnBgYjIiYmNTQ2NjMyFzc2MzIXFhYHAwYVFBYzMjY1NCYmIyIGAhUUFhYzMjY3NjMyFxYVFAcGBiMiJiY1NBIkMwIGBhUUFjMyNjY1NCYjAy3nfkaAU0FdFzRePzFRLlaSVVYqHwYTDxMUFwRNBygjS1ZgsXmI3X1arntFhTUIAxwNBRg2l1Gf5nufARatPFU5JB4xVzQoJAQ2i/igdLNjQj9DQzZlRlvKh2Q/CwcHGQ7+0hsZKi+TeYK/Z5X+/p+AvWYUEQItEgobChgcg/SnwgE7tP5cWYtHLy5bikIuMwAAAgAKAAAEwgSjAC0AMQA4QDUACQADAAkDZwAHBwhfCgEICCJNBgQCAwAAAV8FAQEBIwFOAAAwLwAtACshJDQhESQ0IwsIHisAFhcBMzIWFRQGIyEiJjU0NjMzJyEHMzIWFRQGIyEiJjU0NjMzASMiJjU0NjMhBwMhAwKoMQwBYT0iHR0i/p4iHR0ih1L+G1N5Ih0dIv6yIh0dIjgBS7siHR0iAW8luwGIugSjHyL8Jh8lJR8fJSUf7u4fJSUfHyUlHwOTHyUlH4j94wIdAAADAFAAAARGBKMAHgAnAC8APUA6BgEHBAFMAAQABwEEB2cFAQICA18IAQMDIk0GAQEBAF8AAAAjAE4AAC8tKignJSEfAB4AHCEkPAkIGSsAFhYVFAYHFhYVFAYGIyEiJjU0NjMzESMiJjU0NjMhAzMyNjU0JiMjESEyNjU0IyEC+aRTRUBqcVqsev3JIh0dInp6Ih0dIgH15c9zdnR1zwEJe4X7/vIEo1CRYUx1JSKXb2mYUh8lJR8Dkx8lJR/+BmBYXF78bWphzgAAAQB2/+oERQS5ADIAQ0BALgEBBQFMAAMAAgADAoAAAQEFYQcGAgUFKE0AAAAFYQcGAgUFKE0AAgIEYQAEBCkETgAAADIAMSYnIyYlJQgIHCsAFhURFAYjIiY1NCYmIyIGBhUUFhYzMjY3NjMyFxYVFAcGBiMiJgI1NBI2MzIWFzU0NjMEECIiKSkiPX5dbKddWKJsY7RIERQeFxIfXdt0nOl/guuXXpIyIikEuR4j/rYjHh4jRHBDctSOjtNyOjcOJx4XHhZBQpkBFri3AReaQDs6Ix4AAAIAUAAABHQEowAYACMAK0AoBQECAgNfBgEDAyJNBAEBAQBfAAAAIwBOAAAjIRsZABgAFiEkNgcIGSsAFhIVFAIGIyEiJjU0NjMzESMiJjU0NjMhAzMyNjY1NCYmIyMDA+6Dg+6d/ikiHR0icHAiHR0iAdfRunewYGCwd7oEo4/+87a2/vSPHyUlHwOTHyUlH/vlac2Tk81qAAABAFAAAARMBKMAOwCSS7AKUFhANgAEBwYCBHIMAQsJCAELcgAGAAkLBglnAAcACAEHCGkFAQICA18AAwMiTQoBAQEAYAAAACMAThtAOAAEBwYHBAaADAELCQgJCwiAAAYACQsGCWcABwAIAQcIaQUBAgIDXwADAyJNCgEBAQBgAAAAIwBOWUAWAAAAOwA6NzY1NCUjERMlNCEkNQ0IHysAFhURFAYjISImNTQ2MzMRIyImNTQ2MyEyFhUVFAYjIiY1NSERITU0NjMyFhURFAYjIiY1NSERITU0NjMEKiIdIvyCIh0dImZmIh0dIgNqIh0iKSki/ekBAh8oKB8fKCgf/v4CKyIpAa4eI/7XJR8fJSUfA5MfJSUfHyX+Ix4eI7r+jVsjHh4j/sIjHh4jW/5o5SMeAAEAUAAABFYEowA2AIFLsApQWEAvAAADAgEAcgACAAUEAgVnAAMABAYDBGkJAQEBCl8LAQoKIk0IAQYGB18ABwcjB04bQDAAAAMCAwACgAACAAUEAgVnAAMABAYDBGkJAQEBCl8LAQoKIk0IAQYGB18ABwcjB05ZQBQAAAA2ADQwLiQ0IRMlIxETJQwIHysAFhURFAYjIiY1NSERMzU0NjMyFhURFAYjIiY1NSMRMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMhBDkdIikpIv3p/h8oKB8fKCgf/ugiHR0i/f4iHR0ihIQiHR0iA4gEox8l/vgjHh4jxP55WyMeHiP+wiMeHiNb/nwfJSUfHyUlHwOTHyUlHwAAAQBi/+oEkAS5ADwASkBHOAEBBxcBAgMCTAAEBQEDAgQDaQABAQdhCQgCBwcoTQAAAAdhCQgCBwcoTQACAgZhAAYGKQZOAAAAPAA7JiUkNCImJSUKCB4rABYVERQGIyImNTQmJiMiBgYVFBYWMzI3NSMiJjU0NjMhMhYVFAYjIxEUBwYGIyImAjU0EjYzMhYXNTQ2MwQEIiIpKSJBfldvq2Bbp26vfPciHR0iAa0iHR0iICRS1nWc74OH75hekTEiKQS5HiP+3iMeHiM8XjVy1I6O03I54x8lJR8fJSUf/vUxFC8xmQEXt7YBGJo7NzEjHgABAFAAAAR8BKMAQwBDQEAACwAEAQsEZwwKCAMAAAlfDg0CCQkiTQcFAwMBAQJfBgECAiMCTgAAAEMAQT07Ojk4NjIvISQ0IREkNCEkDwgfKwAWFRQGIyMRMzIWFRQGIyEiJjU0NjMzESERMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMhMhYVFAYjIxEhESMiJjU0NjMhBF8dHSJISCIdHSL+xiIdHSJc/g5cIh0dIv7GIh0dIkhIIh0dIgE6Ih0dIlwB8lwiHR0iAToEox8lJR/8bR8lJR8fJSUfAZj+aB8lJR8fJSUfA5MfJSUfHyUlH/6NAXMfJSUfAAEAyAAABAQEowAfAClAJgQBAAAFXwYBBQUiTQMBAQECXwACAiMCTgAAAB8AHSEkNCEkBwgbKwAWFRQGIyERITIWFRQGIyEiJjU0NjMhESEiJjU0NjMhA9MdHSL/AAEUIh0dIv1CIh0dIgEU/wAiHR0iApYEox8lJR/8bR8lJR8fJSUfA5MfJSUfAAEAc//qBIYEowAlADZAMxcBAwIBTAACAAMAAgOABAEAAAVfBgEFBSJNAAMDAWEAAQEpAU4AAAAlACMjJCcjJAcIGysAFhUUBiMjERQGIyImJyY1ETQ2MzIWFREWMzI2NREhIiY1NDYzIQRpHR0iyczEcrlAECIpKSJUkoN2/qsiHR0iArQEox8lJR/9Mq+0UUYTIAEdIx4eI/74S3R5ArAfJSUfAAABAFAAAASkBKMAUwBKQEdKAQQBKQECBAJMAAEABAIBBGkLCggDAAAJXw0MAgkJIk0HBQICAgNhBgEDAyMDTgAAAFMAUU1LSUdDQCEkNCQoNDgxJA4IHysAFhUUBiMjATYzMhcWFhcWFhcWMzMyFhUUBiMjIicmJyYmJyYmIyIGBwcRMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMhMhYVFAYjIxEBIyImNTQ2MyEEaR0dIj3+XQgQg04fLxwEIRAnMxwiHR0iUmVHGSIXJhcYSS4qTh4eoiIdHSL+WCIdHSJwcCIdHSIBYiIdHSJcAbZIIh0dIgFEBKMfJSUf/msBZChkSwpVHUgfJSUfizJXPVQhIiQeHR3+1B8lJR8fJSUfA5MfJSUfHyUlH/5TAa0fJSUfAAABAFAAAARMBKMAJAAyQC8AAgABAAIBgAUBAAAGXwcBBgYiTQQBAQEDYAADAyMDTgAAACQAIiEkNSMRJAgIHCsAFhUUBiMjESERNDYzMhYVERQGIyEiJjU0NjMzESMiJjU0NjMhAtsdHSLyAe8iKSkiHSL8giIdHSKioiIdHSICKgSjHyUlH/xtAUkjHh4j/nMlHx8lJR8Dkx8lJR8AAAEAHgAABK4EowBAAENAQDwfFwMEAAFMAAQAAQAEAYAIAQAACV8LCgIJCSJNBwUDAwEBAl8GAQICIwJOAAAAQAA+OTYhJDQkJCQ0ISQMCB8rABYVFAYjIxMzMhYVFAYjISImNTQ2MzMDAwYGIyImJwMDMzIWFRQGIyEiJjU0NjMzEyMiJjU0NjMzMhYXExM2MzMEcx0dIjIaNiIdHSL+xiIdHSJvFswNKyQkKw3NFW8iHR0i/sYiHR0iNhkxIh0dItMYHAbe3Qsw0wSjHyUlH/xtHyUlHx8lJR8DM/3GIx4eIwI6/M0fJSUfHyUlHwOTHyUlHxAR/Z8CYSEAAAEARv/qBIYEowA1AGG2Kw0CAgABTEuwF1BYQBsHBQIAAAZfCQgCBgYiTQQBAgIBYQMBAQEpAU4bQB8HBQIAAAZfCQgCBgYiTQQBAgIDXwADAyNNAAEBKQFOWUARAAAANQAzJTQhJDQkIyQKCB4rABYVFAYjIxEUBiMiJwEjETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzMzIWFwEzESMiJjU0NjMhBGkdHSI5JSY1H/35BI0iHR0i/p4iHR0iQ00iHR0i4BYbCAHaBHkiHR0iAUQEox8lJR/8ChsgNwOf/MgfJSUfHyUlHwOTHyUlHw4O/LAC5B8lJR8AAgBY/+oEdAS5AA8AHwAsQCkFAQMDAWEEAQEBKE0AAgIAYQAAACkAThAQAAAQHxAeGBYADwAOJgYIFysAFhIVFAIGIyImAjU0EjYzDgIVFBYWMzI2NjU0JiYjAwLvg4PvnJzvg4PvnG6nW1unbm6nW1unbgS5mv7pt7f+6ZmZARe3twEXmpRy1I6O03Jy046O1HIAAAIAUAAABFgEowAhACoANUAyAAYAAAEGAGcHAQQEBV8IAQUFIk0DAQEBAl8AAgIjAk4AACooJCIAIQAfISQ0ISYJCBsrABYWFRQGBiMjETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzIQMzMjY1NCYjIwM3vmNjvoXr8CIdHSL92CIdHSKioiIdHSICI+vWi5KTitYEo16scXGpXf7XHyUlHx8lJR8Dkx8lJR/9ln5xc4AAAgBY/vAEdAS5ADkASQC5QBMyAQAHFgEBAC8BBAIDTAoBAgFLS7AkUFhAJwABAAQDAQRpAAIFAQMCA2UKAQgIBmEJAQYGKE0ABwcAYQAAACMAThtLsCZQWEAlAAcAAAEHAGkAAQAEAwEEaQACBQEDAgNlCgEICAZhCQEGBigIThtAKgAFAwWGAAcAAAEHAGkAAQAEAwEEaQACAAMFAgNpCgEICAZhCQEGBigITllZQBc6OgAAOkk6SEJAADkAODElLSMjJgsIHCsAFhIVFAIGIyInBzYzMhYXFjMyNjc2MzIWFxYVFAcGBiMiJiYnJiYjIgcGIyInJjU0NzcmAjU0EjYzDgIVFBYWMzI2NjU0JiYjAwLvg4PvnBwYgVFPIDkrRScoTSsJCg8fDBEWOmczGjslCDRFKGx1BwghIxoJtJqvg++cb6ZbW6Zvb6ZbW6ZvBLmR/vSysv71kQKHIAgJDxofBhgUHRYaECskCAcCCwoxAy4iGQ4LzDoBI8+yAQyRlGrIiYnIaWnIiYnIagACAFAAAASkBKMAPABEAD9APAYBAggBTAAIAAIACAJpCQEGBgdfCgEHByJNBQMCAAABYQQBAQEjAU4AAERCPz0APAA6ISQ0ISk0PgsIHSsAFhYVFAYHFhcWFhcWFxYzMzIWFRQGIyMiJicmJyYmJyYmIyMRMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMhAzMgNTQmIyMDBrNdlIE4JR8sGxwPJzMcIh0dIkg8UycWIB4lGh5UO4iCIh0dIv5uIh0dInp6Ih0dIgH66ssBDoh81QSjVJhlcp4dFjEpUTs9HEgfJSUfP0wsSEJJJCor/oUfJSUfHyUlHwOTHyUlH/3ox2BpAAABAJ7/6gQpBLkASwBRQE5HAQEGIQECBQJMAAEBBmEIBwIGBihNAAAABmEIBwIGBihNAAQEAmEDAQICKU0ABQUCYQMBAgIpAk4AAABLAEpFQzIwLSsmJB8dIyUJCBgrABYVFRQGIyInJiYjIgYVFBYXFhYXFhYXFhYVFAYGIyImJxUUBiMiJjURNDYzMhcWFjMyNjU0JicmJicmJicmJjU0NjYzMhYXNTQ2MwPYIiIpJg4wrm9ueSonI15PVmUxZHFiv4Zkqz8iKSkiIikrDymzg4CJPzwmWk5Sby9QWWOxcVikOiIpBLkeI+YjHhpbX2ZWKTgUEhcPERcUKZN9aJ1YSUZOIx4eIwEsIx4qdHxuWz9PGhEVEBAcFSR7ZGeYUUQ6PSMeAAABAHoAAARSBKMAKQA0QDEGAQABAgEAAoAFAQEBB18IAQcHIk0EAQICA18AAwMjA04AAAApACcjESQ0IRMlCQgdKwAWFREUBiMiJjURIREzMhYVFAYjISImNTQ2MzMRIREUBiMiJjURNDYzIQQ1HSIpKSL+9ewiHR0i/ZIiHR0i7P71IikpIh0iA1oEox8l/ocjHh4jATX8bR8lJR8fJSUfA5P+yyMeHiMBeSUfAAABAEb/6gSGBKMALQAtQCoGBAIDAAADXwgHAgMDIk0ABQUBYQABASkBTgAAAC0AKyMjJDQjIyQJCB0rABYVFAYjIxEUBiMiJjURIyImNTQ2MyEyFhUUBiMjERQWMzI2NREjIiY1NDYzIQRpHR0iPtvIyNs+Ih0dIgFEIh0dInCCi4uCcCIdHSIBRASjHyUlH/1u0c7O0QKSHyUlHx8lJR/9gpmGhpkCfh8lJR8AAQAK/+oEwgSjACcALUAqHgEBAAFMBQQCAwAAA18HBgIDAyJNAAEBKQFOAAAAJwAlIiQ0IyMkCAgcKwAWFRQGIyMBBgYjIiYnASMiJjU0NjMhMhYVFAYjIwEBIyImNTQ2MyEEpR0dIk3+mQ0zLCszDP6cTCIdHSIBdiIdHSKNATIBNWQiHR0iAU4Eox8lJR/8ECMeHyID8B8lJR8fJSUf/IwDdB8lJR8AAf/2/+oE1gSjADQAYbcrJA0DAQYBTEuwGVBYQBsHBQMDAAAEXwkIAgQEIk0ABgYlTQIBAQEpAU4bQB4ABgABAAYBgAcFAwMAAARfCQgCBAQiTQIBAQEpAU5ZQBEAAAA0ADIkIyQ0IyQjJAoIHisAFhUUBiMjAwYGIyInAwMGIyImJwMjIiY1NDYzITIWFRQGIyMTEzYzMhYXExMjIiY1NDYzIQS5HR0iNooFKShSFLm7FVMnKQSFMSIdHSIBWCIdHSKSZLwOOiAjBrtofCIdHSIBRASjHyUlH/wQJB1BAkX9u0EeIwPwHyUlHx8lJR/83wJMLxQU/a0DIR8lJR8AAAEAMgAABJoEowBDAEBAPTopGAcEAQABTAoJBwMAAAhfDAsCCAgiTQYEAwMBAQJfBQECAiMCTgAAAEMAQT07OTc0IiQ0IiQ0IiQNCB8rABYVFAYjIwEBMzIWFRQGIyEiJjU0NjMzAQEzMhYVFAYjISImNTQ2MzMBASMiJjU0NjMhMhYVFAYjIxMTIyImNTQ2MyEEXx0dIkH+ywFaOiIdHSL+niIdHSJt/wH++1MiHR0i/rwiHR0iPgFd/shFIh0dIgFYIh0dIlnd3jwiHR0iATAEox8lJR/+Tv4fHyUlHx8lJR8Bbf6THyUlHx8lJR8B4wGwHyUlHx8lJR/+xAE8HyUlHwAAAQA8AAAEkASjADIAN0A0KRgHAwEAAUwHBgQDAAAFXwkIAgUFIk0DAQEBAl8AAgIjAk4AAAAyADAiJDQiJDQiJAoIHisAFhUUBiMjAREzMhYVFAYjISImNTQ2MzMRASMiJjU0NjMhMhYVFAYjIxMTIyImNTQ2MyEEcx0dIkT+pOIiHR0i/aYiHR0i4v6mRiIdHSIBTiIdHSJd+vxBIh0dIgEwBKMfJSUf/dH+nB8lJR8fJSUfAWQCLx8lJR8fJSUf/mcBmR8lJR8AAAEApwAABCMEowAlADZAMwAEAwEDBAGAAAEAAwEAfgADAwVfBgEFBSJNAAAAAmAAAgIjAk4AAAAlACMjFTUjFQcIGysAFhUUBwEhETQ2MzIWFREUBiMhIiY1NDcBIRUUBiMiJjURNDYzIQP9HQr9aQIUIikpIh0i/QIiHQ4Ck/4KIikpIh0iAuAEox8lGQ78UAENIx4eI/6vJR8fJRYVA6z5Ix4eIwE9JR8AAQFK/rMDZgVcABcAKUAmAAEAAgMBAmcEAQMAAANXBAEDAwBfAAADAE8AAAAXABYkNTQFCBkrBBYVFAYjISImNRE0NjMhMhYVFAYjIREhA0kdHSL+YiIdHSIBniIdHSL+uQFHvSEnJyEfJQYhJR8hJych+ncAAAEAxv6dBAYFcgARADa2DgUCAAEBTEuwIFBYQAwCAQEBKk0AAAAnAE4bQAoCAQEAAYUAAAB2WUAKAAAAEQAQJwMIFysAFhcBFhUUBiMiJicBJjU0NjMBOSMHAqADNCgXIwf9YAM0KAVyFBD5lQkIFx4UEAZrCQgXHgAAAQFm/rMDggVcABcAKEAlBAEDAAIBAwJnAAEAAAFXAAEBAF8AAAEATwAAABcAFSEkNQUIGSsAFhURFAYjISImNTQ2MyERISImNTQ2MyEDZR0dIv5iIh0dIgFH/rkiHR0iAZ4FXB8l+d8lHyEnJyEFiSEnJyEAAAEA6AH2A+QEuQAdACixBmREQB0OBQIAAgFMAwECAAKFAQEAAHYAAAAdABwnGQQIGCuxBgBEABYXARYVFAYHBiMiJicDAwYGIyInJiY1NDcBNjYzAoIeCgE0BhwWEhcTHQbt7QYdExcSFhwGATQKHhwEuRIT/bEKCxEbBwcNDAHg/iAMDQcHGxELCgJPExIAAAH/5P58BOj/BAANACCxBmREQBUAAQAAAVcAAQEAXwAAAQBPJSQCCBgrsQYARAQWFRQGIyEiJjU0NjMhBN0LCwz7KgwLCwwE1vwaKioaGioqGgABATkEDgMrBYcAEQAZsQZkREAOAAEAAYUAAAB2GBQCCBgrsQYARAAVFAcGIyInJSY1NDc2MzIXAQMrGBYYDhL+ihYeISITEgFcBG4TGRsZCtsNGh0nKQ3/AAACAIf/6gSGA7IALgA6AORLsB1QWEAPHAEIAzc2AgAIEAEBAANMG0APHAEIAzc2AgAIEAEHAANMWUuwF1BYQCkABQQDBAUDgAADCgEIAAMIaQAEBAZhCQEGBitNBwEAAAFhAgEBASMBThtLsB1QWEAzAAUEAwQFA4AAAwoBCAADCGkABAQGYQkBBgYrTQcBAAABYQABASNNBwEAAAJhAAICKQJOG0AxAAUEAwQFA4AAAwoBCAADCGkABAQGYQkBBgYrTQAAAAFhAAEBI00ABwcCYQACAikCTllZQBcvLwAALzovOTUzAC4ALSMkJSQ0NAsIHCsAFhURFDMzMhYVFAYjIyImJwYGIyImJjU0NjMyFzU0JiMiBgcGIyInJjU0NzY2MwIGFRQWMzI3NSYmIwMmvEIjIh0dIkBBXQ5Sv2tlm1jis5+RbXlLokkRDiEWCyVUwWHAhWVbx6BEnE8Dsqil/nJPHyUlH0E/SE5FhFuelzNVYVsqJQkwGBAjEywv/gRPVklRpW0WFwAAAgAl/+oETQUgACUANQDithADAgMHAUxLsBdQWEAjAAQEBV8IAQUFJE0JAQcHAGEAAAArTQYBAwMBYQIBAQEpAU4bS7AgUFhALQAEBAVfCAEFBSRNCQEHBwBhAAAAK00GAQMDAl8AAgIjTQYBAwMBYQABASkBThtLsDFQWEArCAEFAAQABQRpCQEHBwBhAAAAK00GAQMDAl8AAgIjTQYBAwMBYQABASkBThtAKQgBBQAEAAUEaQkBBwcAYQAAACtNAAMDAl8AAgIjTQAGBgFhAAEBKQFOWVlZQBYmJgAAJjUmNC4sACUAIyEkNSYkCggbKwAWFRE2MzIWFhUUBgYjIiYnFRQGIyMiJjU0NjMzESMiJjU0NjMzAAYGFRQWFjMyNjY1NCYmIwFDHYG8fMRwcMR8YqY/HSKfIh0dIlJmIh0dIr0BGYtPT4tZWYBDQ4BZBSAfJf4xpXXblJTbdVhSUCUfHyUlHwQQHyUlH/3+UJhoaJhQVZhjY5hVAAABAH//6gQdA7IAMgBDQEAuAQEFAUwAAwACAAMCgAABAQVhBwYCBQUrTQAAAAVhBwYCBQUrTQACAgRhAAQEKQROAAAAMgAxJicjJiUlCAgcKwAWFREUBiMiJjU0JiYjIgYGFRQWFjMyNjc2MzIXFhUUBwYGIyImJjU0NjYzMhYXNTQ2MwP3IiIpKSJAf1lgmFZRk2BcrUcVEh0ZDyBQ2nKP23h6241ZlTQiKQOyHiP+3iMeHiM9XjRWmmBhmVY5NhApGRcjFzxEftyKitx+QTw8Ix4AAAIAf//qBJMFIAAlADUA4rYcDwIABwFMS7AXUFhAIwAEBAVfCAEFBSRNCQEHBwNhAAMDK00GAQAAAWECAQEBIwFOG0uwIFBYQC0ABAQFXwgBBQUkTQkBBwcDYQADAytNBgEAAAFfAAEBI00GAQAAAmEAAgIpAk4bS7AxUFhAKwgBBQAEAwUEZwkBBwcDYQADAytNBgEAAAFfAAEBI00GAQAAAmEAAgIpAk4bQCkIAQUABAMFBGcJAQcHA2EAAwMrTQAAAAFfAAEBI00ABgYCYQACAikCTllZWUAWJiYAACY1JjQuLAAlACMiJiU0IwoIGysAFhURMzIWFRQGIyMiJjU1BgYjIiYmNTQ2NjMyFxEjIiY1NDYzMwAGBhUUFhYzMjY2NTQmJiMD5R1SIh0dIp8iHT+mYnzEcHDEfLyBoiIdHSL5/h2AQ0OAWVmLT0+LWQUgHyX7rB8lJR8fJVBSWHXblJTbdaUBix8lJR/9/lWYY2OYVVCYaGiYUAAAAgCS/+oEQwOyACAAJwA/QDwAAgABAAIBgAAFAAACBQBnCAEGBgRhBwEEBCtNAAEBA2EAAwMpA04hIQAAISchJiQjACAAHycjIiUJCBorABYWFxQGIyEWFjMyNjc2MzIXFhUUBwYGIyImJjU0NjYzBgYHISYmIwMAzW4IHSL9LAejlVy0RBEOIxYJLE3SapfWcHrYi3uhGQJjFZeCA7J1z4ciHJWZLycJNRURKBYnMHTalo/ceZF9b3N5AAABALsAAARaBSUAMwB3tQMBAQkBTEuwIFBYQCkAAAECAQACgAgBAgcBAwQCA2cAAQEJYQoBCQkkTQYBBAQFXwAFBSMFThtAJwAAAQIBAAKACgEJAAEACQFpCAECBwEDBAIDZwYBBAQFXwAFBSMFTllAEgAAADMAMiQhJDQhJCIjFgsIHysAFxYVFAcGIyInJiMiFRUhMhYVFAYjIREhMhYVFAYjISImNTQ2MzMRIyImNTQ2MzM1NDYzA6aEMAMOJAsNf27KAVoiHR0i/qYBWiIdHSL9SiIdHSLGxiIdHSLGuacFJTMSMAsPOQUx2W4fJSUf/cQfJSUfHyUlHwI8HyUlH3uluQAAAgB//mYEkwOyAC8APwEKQAslAgIHARgBAgQCTEuwF1BYQCsAAwUEBQMEgAoIAgEBAGEJBgIAACVNAAcHBWEABQUjTQAEBAJhAAICLQJOG0uwJFBYQDYAAwUEBQMEgAoIAgEBBmEJAQYGK00KCAIBAQBfAAAAJU0ABwcFYQAFBSNNAAQEAmEAAgItAk4bS7AxUFhANAADBQQFAwSAAAcABQMHBWkKCAIBAQZhCQEGBitNCggCAQEAXwAAACVNAAQEAmEAAgItAk4bQDEAAwUEBQMEgAAHAAUDBwVpCgEICAZhCQEGBitNAAEBAF8AAAAlTQAEBAJhAAICLQJOWVlZQBcwMAAAMD8wPjg2AC8ALiQkFyQkNQsIHCsAFhc1NDYzMzIWFRQGIyMRFAYGIyImJyY1NDc2MzIXFhYzMjY1NQYjIiYmNTQ2NjMOAhUUFhYzMjY2NTQmJiMCkaY/HSKfIh0dIlJlwIdgxFUnCBInCwtOrE+KjHzBfMRwcMR8T4BDQ4BZWYtPT4tZA7JYUlAlHx8lJR/8znerWiEfDicQGDcEHCCDcsmcb9CMjNBvlE+NW1uNT0qNYGCNSgAAAQBNAAAEhwUgADsAbbUDAQEEAUxLsCBQWEAkAAgICV8KAQkJJE0ABAQAYQAAACtNBwUDAwEBAl8GAQICIwJOG0AiCgEJAAgACQhpAAQEAGEAAAArTQcFAwMBAQJfBgECAiMCTllAEgAAADsAOSEkNCQjJDQkJQsIHysAFhURNjYzMhYWFREzMhYVFAYjISImNTQ2MzMRNCYjIgYGFREzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzMBYR1Bq2NbhkhSIh0dIv68Ih0dIlxSUFWTWFwiHR0i/rwiHR0iUlwiHR0iswUgHyX+DmFnT5Rj/hwfJSUfHyUlHwHVWWhirGr+4h8lJR8fJSUfBBAfJSUfAP//ALsAAARJBVMAIgFlAAAAAgEtBAD//wC+/mYDhwVTACIBKQAAAAMBLQDCAAAAAQBDAAAEhwUgAD8AdUAJPSwPDgQBBwFMS7AgUFhAJQAFBQZfAAYGJE0JAQcHCF8ACAglTQsKBAIEAQEAXwMBAAAjAE4bQCMABgAFCAYFaQkBBwcIXwAICCVNCwoEAgQBAQBfAwEAACMATllAFAAAAD8APjw6NCQ0ISQ0IyQ0DAgfKyQWFRQGIyEiJjU0NjMzAwcVMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMzMhYVEQEjIiY1NDYzITIWFRQGIyMBATMEah0dIv68Ih0dIkj7tkkiHR0i/rIiHR0ib4MiHR0i2iIdAX1HIh0dIgFOIh0dIjv+2gFQOogfJSUfHyUlHwEqoIofJSUfHyUlHwQQHyUlHx8l/OgBUB8lJR8fJSUf/v3+dwAAAQCxAAAEPwUgABsAR0uwIFBYQBcAAwMEXwUBBAQkTQIBAAABXwABASMBThtAFQUBBAADAAQDZwIBAAABXwABASMBTllADQAAABsAGSEkNCMGCBorABYVESEyFhUUBiMhIiY1NDYzIREhIiY1NDYzIQKiHQFBIh0dIvzwIh0dIgE5/u8iHR0iAWgFIB8l+6wfJSUfHyUlHwQQHyUlHwAB//wAAATmA7IAUAC2S7AxUFi2SEICAgEBTBu2SEICAggBTFlLsBdQWEAfCAQCAQEJYQsKAgkJJU0NDAcFBAICAF8GAwIAACMAThtLsDFQWEAqCAQCAQEKYQsBCgorTQgEAgEBCV8ACQklTQ0MBwUEAgIAXwYDAgAAIwBOG0AnBAEBAQphCwEKCitNAAgICV8ACQklTQ0MBwUEAgIAXwYDAgAAIwBOWVlAGAAAAFAAT0tJRkQ/PCEkNCQlNCQlNA4IHyskFhUUBiMjIiY1ETQmIyIGBhURMzIWFRQGIyMiJjURNCYjIgYGFREzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzMyFhUVNjYzMhYXNjMyFhYVETMEyR0dIpUiHS0yL1AvOSIdHSKQIh0tMi9QLzQiHR0i/uQiHR0iUlIiHR0ilSIdK3hGRGYSWY07XTc+iB8lJR8fJQJQRUVXm2P+vx8lJR8fJQJQRUVXm2P+vx8lJR8fJSUfAowfJSUfHyVjXl9cWbU7eVj94gAAAQBNAAAEkQOyADsApEuwMVBYtTgBAAMBTBu1OAEABwFMWUuwF1BYQBwHAQMDCGEKCQIICCVNBgQCAwAAAV8FAQEBIwFOG0uwMVBYQCYHAQMDCWEKAQkJK00HAQMDCF8ACAglTQYEAgMAAAFfBQEBASMBThtAJAADAwlhCgEJCStNAAcHCF8ACAglTQYEAgMAAAFfBQEBASMBTllZQBIAAAA7ADo0ISQ0JCMkNCQLCB8rABYWFREzMhYVFAYjISImNTQ2MzMRNCYjIgYGFREzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzMyFhUVNjYzAzKGSFIiHR0i/rwiHR0iXFJQVZNYXCIdHSL+vCIdHSJSZiIdHSKzIh1CsWYDsk+UY/4cHyUlHx8lJR8B1VloYqxq/uIfJSUfHyUlHwKMHyUlHx8leGZsAAACAIT/6gRIA7IADwAfACxAKQUBAwMBYQQBAQErTQACAgBhAAAAKQBOEBAAABAfEB4YFgAPAA4mBggXKwAWFhUUBgYjIiYmNTQ2NjMOAhUUFhYzMjY2NTQmJiMC79x9fdyJidx9fdyJYZNQUJNhYZNQUJNhA7J83YuL3Xx83YuL3XyUVZliYplVVZliYplVAAACACX+fARNA7IAKQA5ALW2JgkCBwQBTEuwF1BYQCQKCAIEBAVhCQYCBQUlTQAHBwBhAAAAKU0DAQEBAl8AAgInAk4bS7AxUFhALwoIAgQEBmEJAQYGK00KCAIEBAVfAAUFJU0ABwcAYQAAAClNAwEBAQJfAAICJwJOG0AsCgEICAZhCQEGBitNAAQEBV8ABQUlTQAHBwBhAAAAKU0DAQEBAl8AAgInAk5ZWUAXKioAACo5KjgyMAApACg0ISQ0IiYLCBwrABYWFRQGBiMiJxEzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzMyFhUVNjYzDgIVFBYWMzI2NjU0JiYjAxnEcHDEfLyBrCIdHSL+WCIdHSJmUiIdHSKfIh0/pmJji09Pi1lZgENDgFkDsnXblJTbdaX+dR8lJR8fJSUfBBAfJSUfHyVQUliUUJhoaJhQVZhjY5hVAAACAH/+fASnA7IAKQA5ALW2HwICBwEBTEuwF1BYQCQKCAIBAQBhCQYCAAAlTQAHBwVhAAUFKU0EAQICA18AAwMnA04bS7AxUFhALwoIAgEBBmEJAQYGK00KCAIBAQBfAAAAJU0ABwcFYQAFBSlNBAECAgNfAAMDJwNOG0AsCgEICAZhCQEGBitNAAEBAF8AAAAlTQAHBwVhAAUFKU0EAQICA18AAwMnA05ZWUAXKioAACo5KjgyMAApACgiJDQhJDULCBwrABYXNTQ2MzMyFhUUBiMjETMyFhUUBiMhIiY1NDYzMxEGIyImJjU0NjYzDgIVFBYWMzI2NjU0JiYjApGmPx0inyIdHSJSZiIdHSL+WCIdHSKsgbx8xHBwxHxPgENDgFlZi09Pi1kDslhSUCUfHyUlH/vwHyUlHx8lJR8Bi6V125SU23WUVZhjY5hVUJhoaJhQAAABAJMAAARSA7IAMAB2QAoDAQEGLAECAAJMS7AXUFhAIQAAAQIBAAKABQEBAQZhCAcCBgYlTQQBAgIDXwADAyMDThtAKwAAAQIBAAKABQEBAQdhCAEHBytNBQEBAQZfAAYGJU0EAQICA18AAwMjA05ZQBAAAAAwAC80ISQ0JCMWCQgdKwAXFhUUBwYjIicmIyIGBhUVITIWFRQGIyEiJjU0NjMzESMiJjU0NjMzMhYVFT4CMwPmRCgJFSUPDTE4WrZ1AVEiHR0i/XwiHR0inX8iHR0izCIdMIiaSwOyKBgmEhg5CBt90HXCHyUlHx8lJR8CjB8lJR8fJcpYhEgAAAEAs//qBBoDsgBMAFFATkgBAQYhAQIFAkwAAQEGYQgHAgYGK00AAAAGYQgHAgYGK00ABAQCYQMBAgIpTQAFBQJhAwECAikCTgAAAEwAS0ZEMzEtKyYkHx0jJQkIGCsAFhUVFAYjIicmJiMiBhUUFhcWFhcWFhcWFhUUBgYjIiYnFRQGIyImNTU0NjMyFhcWFjMyNjU0JicmJicmJicmJjU0NjYzMhYXNTQ2MwPKIiIpIg4rpH5hbSkoIVdFYXc1UFlbr3pspD0iKSkiIikVGAkkqIx0fCwpI1tGXn41SVFboWZhoToiKQOyHiO+Ix4aUkNFPiAoDQsMBwsTEx1uWlqHSjw9OCMeHiPwIx4TFmBYVEYiLA4LDwcKFhUdZ1NXfUA6NC0jHgAAAQB1/+oESAS5AC0ANkAzAAMBAgEDAoAGAQAFAQEDAAFnCAEHByhNAAICBGEABAQpBE4AAAAtACwkIycjIyQjCQgdKwAWFREhMhYVFAYjIREUFjMyNjc2MzIXFhUUBwYGIyImNREjIiY1NDYzMxE0NjMB8yIBmyIdHSL+ZU9iQ5RFDhEiGA0hTsBTqp3LIh0dIssiKQS5HiP+1B8lJR/+lHJqNi0KLhoTIBQxP7GwAXkfJSUfASwjHgAAAQBI/+oEeAOcADMAjrUPAQADAUxLsBdQWEAaBgEDAwRfCAcCBAQlTQUBAAABYQIBAQEjAU4bS7AxUFhAJAYBAwMEXwgHAgQEJU0FAQAAAV8AAQEjTQUBAAACYQACAikCThtAIgYBAwMEXwgHAgQEJU0AAAABXwABASNNAAUFAmEAAgIpAk5ZWUAQAAAAMwAxJCU0JCU0IwkIHSsAFhURMzIWFRQGIyMiJjU1BgYjIiYmNREjIiY1NDYzMzIWFREUFjMyNjY1ESMiJjU0NjMzA8odUiIdHSKfIh1CsWZbhkhSIh0dIqkiHVJQVZNYjiIdHSLlA5wfJf0wHyUlHx4leWZsT5RjAeQfJSUfHyX951loYqxqAR4fJSUfAAABADL/6gSaA5wAJwAtQCoeAQEAAUwFBAIDAAADXwcGAgMDJU0AAQEpAU4AAAAnACUiJDQjIyQICBwrABYVFAYjIwEGBiMiJicBIyImNTQ2MyEyFhUUBiMjAQEjIiY1NDYzIQR9HR0iP/69DjcxMDUP/sA+Ih0dIgFiIh0dIoABEQEUVyIdHSIBOgOcHyUlH/0XIh8fIgLpHyUlHx8lJR/9dAKMHyUlHwAB//b/6gTWA5wANgA6QDctJg4DAQYBTAAGAAEABgGABwUDAwAABF8JCAIEBCVNAgEBASkBTgAAADYANCMkJDQjJiMkCggeKwAWFRQGIyMDBgYjIiYnAwMGBiMiJicDIyImNTQ2MyEyFhUUBiMjExM2NjMyFxMTIyImNTQ2MyEEuR0dIhjFCicmKzEMmZsMMysmJgnBEiIdHSIBJiIdHSJ7kKcHJh8/DqaUZSIdHSIBEgOcHyUlH/0XJB0fIgGy/k4iHx0kAukfJSUfHyUlH/26AdAVGij+KQJGHyUlHwABAEYAAASGA5wAQwBAQD06KRgHBAEAAUwKCQcDAAAIXwwLAggIJU0GBAMDAQECXwUBAgIjAk4AAABDAEE9Ozk3NCIkNCIkNCIkDQgfKwAWFRQGIyMBATMyFhUUBiMhIiY1NDYzMwMDMzIWFRQGIyEiJjU0NjMzAQEjIiY1NDYzITIWFRQGIyMXNyMiJjU0NjMhBF8dHSJB/tcBQTMiHR0i/qgiHR0iYPDvTyIdHSL+xiIdHSIyAUX+2kciHR0iAVgiHR0iTNTVNyIdHSIBMAOcHyUlH/7H/q0fJSUfHyUlHwEC/v4fJSUfHyUlHwFVATcfJSUfHyUlH+bmHyUlHwAAAQAy/mUEmgOcAC4ANEAxJRQCAgABTAYFAwMAAARfCAcCBAQlTQACAgFhAAEBLQFOAAAALgAsIiQ0JCMkJAkIHSsAFhUUBiMjAQ4CBwYmNTQ3PgI3ASMiJjU0NjMhMhYVFAYjIwEBIyImNTQ2MyEEfR0dIj7+Z0F8m28jJjVgcV9F/pI/Ih0dIgFiIh0dIoABGgENWSIdHSIBOgOcHyUlH/y6hZhHBAElL0EDBTaDiwLOHyUlHx8lJR/9zgIyHyUlHwABALIAAAQaA5wAJQCRS7AKUFhAIwAEAwEDBHIAAQAAAXAAAwMFXwYBBQUlTQAAAAJgAAICIwJOG0uwDFBYQCQABAMBAwRyAAEAAwEAfgADAwVfBgEFBSVNAAAAAmAAAgIjAk4bQCUABAMBAwQBgAABAAMBAH4AAwMFXwYBBQUlTQAAAAJgAAICIwJOWVlADgAAACUAIyMVNSMVBwgbKwAWFRQHASE1NDYzMhYVFRQGIyEiJjU0NwEhFRQGIyImNTU0NjMhA/MdD/2eAeUiKSkiHSL9FiIdDgJj/jkiKSkiHSICzAOcHyUdEf1erCMeHiPwJR8fJR4PAqOVIx4eI9klHwABALH+swPeBVwAOwBoQAo2AQQADQEDBAJMS7AgUFhAGwAEAAMBBANpAAEAAgECZQAAAAVhBgEFBSoAThtAIQYBBQAABAUAaQAEAAMBBANpAAECAgFZAAEBAmEAAgECUVlAEgAAADsAOjEvKykgHhoYJAcIFysAFhUUBiMiBgYXFxYGBxUWFhUUBwcGFRQWMzIWFRQGIyImNTQ3NzY1NCYjIiY1NDYzMjY1NCcnJjU0NjMDwR0dImp5MQQDBW9/fnEBCAGDjiIdHSLJ3wILAoaQIh0dIouEAQUC3csFXCEnJyE6e2RIeJ00CiWPbhYLeQ0Zf3QhJychtLQjEnscDHFxIScnIX50FApKHg25uQABAhv+nQKxBXIADQAuS7AgUFhADAIBAQEqTQAAACcAThtACgIBAQABhQAAAHZZQAoAAAANAAwlAwgXKwAWFREUBiMiJjURNDYzAo8iIikpIiIpBXIeI/mtIx4eIwZTIx4AAAEA7v6zBBsFXAA7AGVACiwBAQAVAQMBAkxLsCBQWEAbAAAAAQMAAWkAAwACAwJlAAQEBWEGAQUFKgROG0AhBgEFAAQABQRpAAAAAQMAAWkAAwICA1kAAwMCYQACAwJRWUAPAAAAOwA6NjQkKSQpBwgaKwAWFRQHBwYVFBYzMhYVFAYjIgYVFBcXFhUUBiMiJjU0NjMyNjU0JycmNTQ2NzUmJjc3NiYmIyImNTQ2MwH43QIFAYSLIh0dIpCGAgsC38kiHR0ijoMBCAFxfn9vBQMEMXlqIh0dIgVcubkNHkoKFHR+IScnIXFxDBx7EiO0tCEnJyF0fxkNeQsWbo8lCjSdeEhkezohJychAAABAJYBrQQ2At8AJQBMsQZkREBBDQEAASABBAMCTAABBQAFAQCAAAQDAgMEAoAAAAMCAFkGAQUAAwQFA2kAAAACYQACAAJRAAAAJQAkIiQnIiQHCBsrsQYARAAWFxYWMzI3NjMyFxYVFAcGBiMiJicmJiMiBwYjIicmNTQ3NjYzAdxlQDpIJ1VGEBYWFSAHL4hOOmRCOEomVUYQFhYVIAcviE4C3yooIiBUExEYHA4LTFsqKCEhVBMRGBwOC0xbAAACAen+pwLjA6YADQAcAFS3GBEQAwMCAUxLsBdQWEAXBAEBAQBhAAAAJU0AAgIDYQUBAwMnA04bQBQAAgUBAwIDZQQBAQEAYQAAACUBTllAEg4OAAAOHA4aFRMADQAMJQYIFysAJjU1NDYzMhYVFRQGIwImNxM2NjMyFhcTFgYjIwIkOztCQjs7QlgUAjECHRoaHwEwAhQXggKOHSKaIh0dIpoiHfwZGBoCwxcZGRf9PRoYAAACAH//gwQdBSAAOgBDAGNAET8yIR4WBQMCPjMOBgQABAJMS7AgUFhAGwAEAwADBACAAAIAAwQCA2kAAAABYQABASQAThtAIAAEAwADBACAAAECAAFZAAIAAwQCA2kAAQEAYQAAAQBRWbcqJSkuKQUIGysAFRQHBgYHFRQGIyImNTUuAjU0NjY3NTQ2MzIWFRUWFhc1NDYzMhYVERQGIyImNTQmJxE2Njc2MzIXJBYWFxEOAhUEHSBCsF8hJSUhfr1maL18ISUlIUFuKCIpKSIiKSkib2hIhTgVEh0Z/Q9AdU5NdUEBRxcjFzJACrYiHx8itg6C0X9/0IMOpSIfHyKnCz0vPCMeHiP+3iMeHiNRbQ39aQk2KxAppY1bDQKTEFyKUwAAAQDL/9sEBwS5AF4Ao0ATDAEAAS4BBAMjAQUERzMCBwUETEuwJlBYQDMAAAECAQACgAoBAgkBAwQCA2kAAQELYQwBCwsoTQAEBAdhAAcHI00ABQUGYQgBBgYpBk4bQDcAAAECAQACgAoBAgkBAwQCA2kAAQELYQwBCwsoTQAEBAdhAAcHI00ABQUGYQAGBilNAAgIKQhOWUAWAAAAXgBdVlRQThMkLSMlJCgkJw0IHysAFhcWFRUUBiMiJjU1JiMiBgYVFBYXFhchMhYVFAYjIRYVFAc2MzIWFxYzMjc2MzIWFxYVFAYHBgYjIiYnJiYjIgcGIyInJjU0NzY2NTQnIyImNTQ2MzMnJiY1NDY2MwLEpEUVIikpIk51N1QsHR4YEgE2Ih0dIv7qAY5GRCA3KD4kSk0JCg4eDBALCjplMBszKzJCJmh1CQggHRoMb1sDjSIdHSJfEiQkVZtkBLk3MQ8nfyMeHiNaLy9RMSpOOiwqHyUlHwwXsI0ZCgkPOAYUExcYDRcHKyUJCQsKMQMlIB0TDGWcVhgZHyUlHyNJYjpclFUAAgBvAGMEXQRRADcARwBJQEYpJQIHBDczGxcEBgcNCQIBBgNMBQEDBAADWQAEAAcGBAdpAAYAAQAGAWkFAQMDAGECAQADAFFEQjw6LSsoJiMhIyMlCAgZKyUWFRQHBiMiJycGIyInBwYjIicmNTQ3NyY1NDcnJjU0NzYzMhcXNjMyFzc2MzIXFhUUBwcWFRQHJBYWMzI2NjU0JiYjIgYGFQRGFx0dFxUXj2eEhGePFxUXHR0XjkhIjhcdHRcVF49nhIRnjxcVFx0dF45ISP2oQndNTXdCQndNTXdC4BcVFx0dF49DQ48XHR0XFReOZoaGZo4XFRcdHRePQ0OPFx0dFxUXjmaGhmaheENDeEtLeENDeEsAAQA8AAAEkASjAFQAWEBVSwEDAgFMCwEBCgECAwECZwkBAwgBBAUDBGcPDgwDAAANXxEQAg0NIk0HAQUFBl8ABgYjBk4AAABUAFJOTEpIREE9Ozo4NDIxLyEkNCEkISQhJBIIHysAFhUUBiMjBzMyFhUUBiMjByEyFhUUBiMhFTMyFhUUBiMhIiY1NDYzMzUhIiY1NDYzIScjIiY1NDYzMycjIiY1NDYzITIWFRQGIyMTEyMiJjU0NjMhBHMdHSJEkHoiHR0iz2wBJyIdHSL+zuIiHR0i/aYiHR0i4v7OIh0dIgEnbM8iHR0ie49GIh0dIgFOIh0dIl36/EEiHR0iATAEox8lJR/nHyUlH64fJSUf7h8lJR8fJSUf7h8lJR+uHyUlH+cfJSUfHyUlH/5nAZkfJSUfAAICG/6dArEFcgANABsAUkuwIFBYQBcAAAABYQQBAQEqTQUBAwMCYQACAicCThtAGwQBAQAAAwEAaQUBAwICA1kFAQMDAmEAAgMCUVlAEg4OAAAOGw4aFRMADQAMJQYIFysAFhURFAYjIiY1ETQ2MxIWFREUBiMiJjURNDYzAo8iIikpIiIpKSIiKSkiIikFch4j/akjHh4jAlcjHvwEHiP9qSMeHiMCVyMeAAACALP/GgQZBKMAPQBPAJhAC0Y2AgMAFwEEAwJMS7AMUFhAIAAAAQMBAHIAAwQEA3AABAACBAJkAAEBBV8GAQUFIgFOG0uwDlBYQCEAAAEDAQByAAMEAQMEfgAEAAIEAmQAAQEFXwYBBQUiAU4bQCIAAAEDAQADgAADBAEDBH4ABAACBAJkAAEBBV8GAQUFIgFOWVlAEQAAAD0AOyspJiQfHCMlBwgYKwAWFRUUBiMiJjU1IyIVFBYXBRYWFRQGBxYVFAYGIyEiJjU1NDYzMhYVFTMyNTQmJyUmJjU0NjcmNTQ2NjMhAAYVFBYXBRYXNjY1NCYnJSYnA78dIikpIu+NQUEBJlNUREYRQH1a/qYiHSIpKSLvjUFB/tpTVENHEUB9WgFa/dAcMDQBJjktHR0wNP7aPikEox8lxSMeHiOBbDRVKLYzelNAZDMxNkdsPR8l2SMeHiOVbDRVKLYzelNAYzQwN0dsPf4aMBwoOSG2Iy0XMBwoOSG2JikAAAIBNQRPA5cFUwANABsANLEGZERAKQUDBAMBAAABWQUDBAMBAQBhAgEAAQBRDg4AAA4bDhoVEwANAAwlBggXK7EGAEQAFhUVFAYjIiY1NTQ2MyAWFRUUBiMiJjU1NDYzAcsoKDc3KCg3AdsoKDc3KCg3BVMdJIIkHR0kgiQdHSSCJB0dJIIkHQADACT/6gSoBLkADwAfAEsAZ7EGZERAXAAEBQcFBAeAAAcGBQcGfgoBAQsBAwkBA2kMAQkABQQJBWkABgAIAgYIaQACAAACWQACAgBhAAACAFEgIBAQAAAgSyBKREI6ODUzLy0pKBAfEB4YFgAPAA4mDQgXK7EGAEQABBIVFAIEIyIkAjU0EiQzDgIVFBYWMzI2NjU0JiYjFhYXFhYVFAcGIyInJiYjIgYVFBYzMjY3NjMyFxYVFAYHBgYjIiYmNTQ2NjMDDQEHlJT++Kam/viUlAEHp4XQc3PQhYXQc3PQhTxdKhUUBxAcDBIlQSZPZmZPJkElEgwcEAcUFSpdLVuPUFCPWwS5o/7mqqr+5qSkARqqqgEao3iA4Y6O4oCA4o6O4YCYFRMKGRIQESgIEQ9xaWlxDxEIKBEQEhkKExVTm2pqm1MAAAIA8gHRBAkEuQAuADgAWEBVHAEIAzY1AgAIEQEBBwNMAAUEAwQFA4AJAQYABAUGBGkAAwoBCAADCGkAAAABYQABATNNAAcHAmEAAgI1Ak4vLwAALzgvNzQyAC4ALRQkJSM0NQsJHCsAFhURFBYzMzIWFRQGIyMiJicGIyImJjU0NjMyFzU0JiMiBgcGIyInJjU0NzY2MwIVFBYzMjc1JiMC/pcYGhEaFxcaMTJPDIGZTnpGqoiEZk5SOoY+CQohEAcfQ5xL70c+k3dtcgS5hXr+1x4ZHSAfGy8sbTNkR3p2HDM+RB4aBC0UESENHSD+aG8wNHVFGQAAAQCMAT4ENgNNABIAJUAiAAABAIYDAQIBAQJXAwECAgFfAAECAU8AAAASABAjJQQIGCsAFhURFAYjIiY1ESEiJjU0NjMhBBkdIikpIv0rIh0dIgMsA00fJf52Ix4eIwFGHyUlHwAABACEATQESAU2AA8AHwA9AEYAa7EGZERAYCYBBQgpAQQFAkwGAQQFAgUEAoAKAQELAQMHAQNpDAEHAAkIBwlpAAgABQQIBWcAAgAAAlkAAgIAYQAAAgBRICAQEAAARkRAPiA9IDs2NDEwLiwQHxAeGBYADwAOJg0IFyuxBgBEABYWFRQGBiMiJiY1NDY2Mw4CFRQWFjMyNjY1NCYmIx4CFRQGBxcWFRQHBiMiJycjFRQGIyImNRE0NjMzAzMyNjU0JiMjAvHce3vci4vce3vci2+tYGCtb2+tYGCtb1BcMT86WRYSERMWEYNKGB0cFxocnGpYODg1NF8FNojqjo7riYnrjo7qiGRqvHZ3vGtrvHd2vGqPL1Q2PlYUYBgUEhEQFJdwHRkZHQGwHBn+7S8rKS4AAQEiBFIDqgTiAA0AJ7EGZERAHAIBAQAAAVcCAQEBAF8AAAEATwAAAA0ACzQDCBcrsQYARAAWFRQGIyEiJjU0NjMhA40dHSL99iIdHSICCgTiIScnISEnJyEAAgD2AokDJgS5AA8AHwA3sQZkREAsBAEBBQEDAgEDaQACAAACWQACAgBhAAACAFEQEAAAEB8QHhgWAA8ADiYGCBcrsQYARAAWFhUUBgYjIiYmNTQ2NjMOAhUUFhYzMjY2NTQmJiMCWoFLS4FMTIFLS4FMJ0MnJ0MnJ0MnJ0MnBLlLgUxMgUtLgUxMgUuHJ0MnJ0MnJ0MnJ0MnAAIAqgByBCIEZgAfAC0APkA7BAEAAwEBAgABZwgBBQACBwUCaQkBBwYGB1cJAQcHBl8ABgcGTyAgAAAgLSArJyQAHwAeJCMjJCMKCBsrABYVFSEyFhUUBiMhFRQGIyImNTUhIiY1NDYzITU0NjMAFhUUBiMhIiY1NDYzIQKLHwE5Ih0dIv7HHyUlH/7HIh0dIgE5HyUBnx0dIv0GIh0dIgL6BGYdIv0fJSUf/SIdHSL9HyUlH/0iHfyUHyUlHx8lJR8AAQEgAeMDvAU2AC8AbLUiAQQDAUxLsBRQWEAkAAQDAQMEAYAAAQAAAXAAAwMFYQYBBQUyTQAAAAJgAAICMwJOG0AlAAQDAQMEAYAAAQADAQB+AAMDBWEGAQUFMk0AAAACYAACAjMCTllADgAAAC8ALiUpNSMXBwkbKwAWFhUUBgcHITU0NjMyFhUVFAYjISI1NDcBNjY1NCYjIgYHFRQGIyImNTU0NzY2MwLAgURPVO8BQiAkJB8aGP3FLx8BTDk1UEoqVSIgJCQfFTuYSQU2P3RNTX1Gxk4aGRkalhobSCcaARgxUDE6RRUSZxoZGRqTGw8nKwAAAQEuAdEDngU2ADsAT0BMLgEGBQUBAwQQAQACA0wABgUEBQYEgAABAwIDAQKAAAQAAwEEA2kABQUHYQgBBwcyTQACAgBhAAAANQBOAAAAOwA6JCQzNCQXKgkJHSsAFhYVFAcWFhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIyMiNTQ2MzMyNjU0JiMiBxUUBiMiJjU1NDc2NjMCtoZHcEJJo55KlDsWCBIfCgkzczZaYl9ZNCwVFydUVlhOT0QgJCQfFTmQRwU2PGxGeTwWZEp3hyEgDBsRFS8EGh5BPUI2PhwjOj86PR0/GhkZGm4dDSIjAAABAaEEDgOTBYcAEQAfsQZkREAUDgEBAAFMAAABAIUAAQF2JyACCBgrsQYARAAzMhcWFRQHBQYjIicmNTQ3AQMfEyIhHhb+ihIOGBYYEAFcBYcpJx0aDdsKGRsZEwwBAAABANr+cgP8A6YALQA3QDQLAQQDEAEABAJMBgUCAwMWTQAAABdNAAQEAWEAAQEXTQACAhgCTgAAAC0AKyU1NCU1BwcbKwAWFREUBiMjIiY1NQYGIyInERQGIyMiJjURNDYzMzIWFREUFjMyNjY1ETQ2MzMD2yEeJwInHj+1ZWRDISkCKSEhKQIpIVldTJVfISkCA6YeI/zSIx4eI49iei/+miMeHiMEsiMeHiP92lpnZq1lAW8jHgAAAQCD/mYEXQSjACAALEApAAQAAQAEAYACAQAABV8GAQUFIk0DAQEBLQFOAAAAIAAeEyMTIyQHCBsrABYVFAYjIxEUBiMiJjURIxEUBiMiJjURLgI1NDY2MyEEQB0dIkQiKSkioCIpKSJ1s2NpvXsB+gSjHyUlH/qMIx4eIwV0+owjHh4jA08EU5hnaptS//8B3wGpAu0C3wEHABEAAAGzAAmxAAG4AbOwNSsAAAEBX/4oA2IAHAAgAHyxBmREtQoBAAIBTEuwClBYQCgGAQUEAwIFcgABAwIDAQKAAAQAAwEEA2kAAgAAAlkAAgIAYgAAAgBSG0ApBgEFBAMEBQOAAAEDAgMBAoAABAADAQQDaQACAAACWQACAgBiAAACAFJZQA4AAAAgACAUJCQXJAcIGyuxBgBEBBYVFAYjIiYnJjU0NzYzMhcWFjMyNjU0JiMHIiY1NTMVAvxmfHlEgDMXCBEdCAUrZy8zOjY+Jw8ThHBeS1doGBgKGQ4VLQIQFiEfISABFRfNjQABATQB4wOzBTcAHgAwQC0NAQIDAUwAAgMBAwIBgAADAzJNBQQCAQEAXwAAADMATgAAAB4AHScjIzQGCRorABYVFAYjISI1NDYzMxEHBiMiJyY1NDclNjMyFhURMwObGBgZ/esyGRnMqRINGRUPGwEtEAoSGMICYB0hIR4/IR0CJ1gJIhsQGA2YBxcU/VQAAgDrAdED4QS5AA8AHwAqQCcEAQEFAQMCAQNpAAICAGEAAAA1AE4QEAAAEB8QHhgWAA8ADiYGCRcrABYWFRQGBiMiJiY1NDY2Mw4CFRQWFjMyNjY1NCYmIwLRrWNjrWtrrWNjrWtGbTw8bUZHbDw8bEcEuWCqamupYGCpa2qqYIQ+bUVFbj09bUZFbT4AAAT/+/8iBNEFcgAdAC8ATgBRAG+xBmREQGQfAQABUAEECUIBBgoDTBUJAgJKAAIFAoUABQEFhQAECQoJBAqAAwEBAAAJAQBnAAkEBwlZDQsMAwoIAQYHCgZpAAkJB2IABwkHUk9PMDBPUU9RME4wTUpIIyMmGBksIyIxDggfK7EGAEQABiMhIjU0MzMRBwYjIicmNTQ3NzYzMhYVETMyFhUkFRQHAQYjIicmNTQ3ATYzMhcSFhUUBiMjFRQGIyImNTUhIiY1NDY3ATY2MzIWFREzIxMDAhEUFf5DKiqqjQ4MFw8NF/sJDQ8UohUUAkwO/GoHCRcVDg4DlgcJFxVuFBQUWxoeHhv+xhQZBggBPQ8fFR0tW8wF3QLEGTU0AcxKBxwVDxQLfwUSEf3FGRs+FBMI/c8EHBQSEgkCMQQc/RwYHBwZmRQUFBSZISAPEwsBeRMSGxT+jAEK/vYAAAP/+/8oBMsFcgAdAC8AXQD/sQZkREAPHwEBBUQBBAcCTBUJAgJKS7AXUFhAOwACBQKFAAUBBYUIAQQHCwcEC4AMAQsKCgtwAwEBAAAJAQBnAAkABwQJB2kACgYGClcACgoGYAAGCgZQG0uwMVBYQDwAAgUChQAFAQWFCAEEBwsHBAuADAELCgcLCn4DAQEAAAkBAGcACQAHBAkHaQAKBgYKVwAKCgZgAAYKBlAbQEIAAgUChQAFAQWFAAQHCAcECIAACAsHCAt+DAELCgcLCn4DAQEAAAkBAGcACQAHBAkHaQAKBgYKVwAKCgZgAAYKBlBZWUAWMDAwXTBcWVhSUCUpNhgZLCMiMQ0IHyuxBgBEAAYjISI1NDMzEQcGIyInJjU0Nzc2MzIWFREzMhYVJBUUBwEGIyInJjU0NwE2MzIXEhYVFRQjISI1NDclNjY1NCYjIgYHFRQGIyImNTU0NzY2MzIWFRQGBwchNTQ2MwIRFBX+Qyoqqo0ODBcPDRf7CQ0PFKIVFAJMDvxqBwkXFQ4OA5YHCRcVYhop/iMoGgEWMCtCPiRGHRoeHhoRMX89b39CRscBDRoeAsQZNTQBzEoHHBUPFAt/BRIR/cUZG3AUEwj9zwQcFBISCQIxBBz8mhUVfS08IBfpKEQpMTkRD1YWFRUWehgLISR0YkBqOaVBFRUAAAQAFP8iBNEFcwA7AE0AbABvAPixBmREQBouAQYFBQEDBEEBAgEQAQACbwEJDmUBCwoGTEuwE1BYQE4ABgUEBQYEgAgBAQMCAwECgAAJDgoOCQqAEAEHAAUGBwVpAAQAAwEEA2kAAgAADgIAaREBDgkMDlkPAQoNAQsMCgtpEQEODgxiAAwODFIbQFQABgUEBQYEgAAIAwEDCAGAAAECAwECfgAJDgoOCQqAEAEHAAUGBwVpAAQAAwgEA2kAAgAADgIAaREBDgkMDlkPAQoNAQsMCgtpEQEODgxiAAwODFJZQCROTgAAbm1ObE5rY2FeXFlXU1FHRj49ADsAOiQkMzQkFyoSCB0rsQYARAAWFhUUBxYWFRQGIyImJyY1NDc2MzIXFhYzMjY1NCYjIyI1NDYzMzI2NTQmIyIHFRQGIyImNTU0NzY2MwAzMhcWFRQHAQYjIicmNTQ3ARIWFREzMhYVFAYjIxUUBiMiJjU1ISImNTQ2NwE2NjMBMxMBXG88Xjc9iIQ9fDETBw4bBwkqYC1LUk9KLCQSEiFGSEpBQzgaHh4aETB4OwMKCRcVDg78agcJFxUODgOWDi1bFBQUFFsaHh4b/sYUGQYIAT0PHxX/AdgFBXMyWzpkMxNTPmNxHBsKFg0TJwMWGTcyNy00GB0wNTEyGDUVFRUVXBoJHR394xwSFBMI/c8EHBQSEgkCMf6dGxT+jBgcHBmZFBQUFJkhIA8TCwF5ExL+XQEKAAIBBv6nA84DpgANADUAeUAKGwEEAigBAwQCTEuwF1BYQCYAAgEEAQIEgAAEAwEEA34GAQEBAGEAAAAlTQADAwViBwEFBScFThtAIwACAQQBAgSAAAQDAQQDfgADBwEFAwVmBgEBAQBhAAAAJQFOWUAWDg4AAA41DjQtKyclGRcADQAMJQgIFysAJjU1NDYzMhYVFRQGIwImJjU0NjY3NzYzMhcXFgYHBw4CFRQWMzI3NTQ2MzIWFRUUBgcGIwJRNjY9PTY2PZidU0WHbQ0FPT8DDQIPEUVQXS1lXH9YIikpIgwNl7wCth0iciIdHSJyIh378U+NXVZ7Wy2QMDDGFBgHHCE6SDFLWiVZIx4eI38VGwhb//8ACgAABMIGlQAiACQAAAEHAEP/2gEOAAmxAgG4AQ6wNSsA//8ACgAABMIGlQAiACQAAAEHAHP/wgEOAAmxAgG4AQ6wNSsA//8ACgAABMIGggAiACQAAAEHASr/7AEOAAmxAgG4AQ6wNSsA//8ACgAABMIGOwAiACQAAAEHATD/2AEOAAmxAgG4AQ6wNSsA//8ACgAABMIGYQAiACQAAAEHAGn/7AEOAAmxAgK4AQ6wNSsA//8ACgAABMIHIwAiACQAAAEHAS7/2AEOAAmxAgK4AQ6wNSsAAAIAAAAABHIEowBAAEQApEuwClBYQDoAAAECAQByAAUNBwQFcgACAAMNAgNnAA0ABwQNB2cQDgsDAQEMXw8BDAwiTQoIAgQEBmAJAQYGIwZOG0A8AAABAgEAAoAABQ0HDQUHgAACAAMNAgNnAA0ABwQNB2cQDgsDAQEMXw8BDAwiTQoIAgQEBmAJAQYGIwZOWUAgQUEAAEFEQURDQgBAAD46ODc1MS4hEzUjESQhEyURCB8rABYVFRQGIyImNTUhETMyFhUUBiMjESE1NDYzMhYVERQGIyEiJjURIwczMhYVFAYjISImNTQ2MzMBIyImNTQ2MyEFAzMRBEkdIikpIv78wCIdHSLAARAiKSkiHSL+QiId4UhYIh0dIv7aIh0dIjIBGGMiHR0iAwH9+6S4BKMfJf4jHh4juv6SHyUlH/5j5SMeHiP+1yUfHyUBMu4fJSUfHyUlHwOTHyUlH4j94wIdAAEAdv4oBEUEuQBRAKpADzABCAUlBQIACREBAQMDTEuwClBYQD0ACgcJBwoJgAAACQQDAHIAAgQDBAIDgAAJAAQCCQRpAAMAAQMBZgAICAVhBgEFBShNAAcHBWEGAQUFKAdOG0A+AAoHCQcKCYAAAAkECQAEgAACBAMEAgOAAAkABAIJBGkAAwABAwFmAAgIBWEGAQUFKE0ABwcFYQYBBQUoB05ZQBBQTktJJSUlKyQkFyQWCwgfKyQVFAcGBxU2FhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIwciJjU1JiYCNTQSNjMyFhc1NDYzMhYVERQGIyImNTQmJiMiBgYVFBYWMzI2NzYzMhcERR+iz2VmfHlEgDMXCBEdCAUrZy8zOjY+Jw8Th8hsguuXXpIyIikpIiIpKSI9fl1sp11YomxjtEgRFB4XuBceFnEQXQFeS1doGBgKGQ4VLQIQFiEfISABFRegEaABCKm3AReaQDs6Ix4eI/62Ix4eI0RwQ3LUjo7Tcjo3Dif//wBQAAAETAaVACIAKAAAAQcAQwAgAQ4ACbEBAbgBDrA1KwD//wBQAAAETAaVACIAKAAAAQcAc//gAQ4ACbEBAbgBDrA1KwD//wBQAAAETAaCACIAKAAAAQcBKgAeAQ4ACbEBAbgBDrA1KwD//wBQAAAETAZhACIAKAAAAQcAaQAeAQ4ACbEBArgBDrA1KwD//wDIAAAEBAaVACIALAAAAQcAQwAAAQ4ACbEBAbgBDrA1KwD//wDIAAAEBAaVACIALAAAAQcAcwAAAQ4ACbEBAbgBDrA1KwD//wDIAAAEBAaCACIALAAAAQcBKgAAAQ4ACbEBAbgBDrA1KwD//wDIAAAEBAZhACIALAAAAQcAaQAAAQ4ACbEBArgBDrA1KwAAAgAyAAAEdASjACEANQBAQD0HAQMIAQIBAwJpBgEEBAVfCgEFBSJNCwkCAQEAXwAAACMATiIiAAAiNSI0MzEtKyooACEAHyEkISQ2DAgbKwAWEhUUAgYjISImNTQ2MzMRIyImNTQ2MzMRIyImNTQ2MyESNjY1NCYmIyMRMzIWFRQGIyMRMwMD7oOD7p3+KSIdHSJwjiIdHSKOcCIdHSIB12CwYGCwd7q+Ih0dIr66BKOP/vO2tv70jx8lJR8BmB8lJR8Bcx8lJR/75WnNk5PNav6NHyUlH/5oAP//AEb/6gSGBjsAIgAxAAABBwEwAAABDgAJsQEBuAEOsDUrAP//AFj/6gR0BpUAIgAyAAABBwBDABYBDgAJsQIBuAEOsDUrAP//AFj/6gR0BpUAIgAyAAABBwBz/+oBDgAJsQIBuAEOsDUrAP//AFj/6gR0BoIAIgAyAAABBwEqAAABDgAJsQIBuAEOsDUrAP//AFj/6gR0BjsAIgAyAAABBwEwAAABDgAJsQIBuAEOsDUrAP//AFj/6gR0BmEAIgAyAAABBwBpAAABDgAJsQICuAEOsDUrAAABAOkAyQPjA8MAJwAgQB0mHBIIBAEAAUwCAQEBAGEDAQAAKwFOLCQsIAQIGisAMzIXFhUUBwEBFhUUBwYjIicBAQYjIicmNTQ3AQEmNTQ3NjMyFwEBA4MUFhsbGP77AQUYGxsWFBj++/77GBQWGxsYAQX++xgbGxYUGAEFAQUDwxsbFhQY/vv++xgUFhsbGAEF/vsYGxsWFBgBBQEFGBQWGxsY/vsBBQADAFj/rgR0BPcAJQAuADcAdEAVIAECBAI3NiwrFwQGBQQUDQIABQNMS7AZUFhAIAABAAGGAAMDJE0GAQQEAmEAAgIoTQAFBQBhAAAAKQBOG0AgAAMCA4UAAQABhgYBBAQCYQACAihNAAUFAGEAAAApAE5ZQA8mJjEvJi4mLRMtEyoHCBorABUUBwcWFhUUAgYjIicHBiMiJyY1NDc3JiY1NBI2MzIXNzYzMhcEBgYVFBcBJiMCMzI2NjU0JwEEUg9ZQ0eD75yie00XGBIdJRBYQkeD75yiek4XGRMc/cmnW0kB7FVwcXFup1tK/hQEyxsSF4BR34a3/umZU28gExkbERh+Ud+FtwEXmlJwIBO/ctSOtXgCxjv8WXLTjrd4/ToA//8ARv/qBIYGlQAiADgAAAEHAEMAAAEOAAmxAQG4AQ6wNSsA//8ARv/qBIYGlQAiADgAAAEHAHMAAAEOAAmxAQG4AQ6wNSsA//8ARv/qBIYGggAiADgAAAEHASoAAAEOAAmxAQG4AQ6wNSsA//8ARv/qBIYGYQAiADgAAAEHAGkAAAEOAAmxAQK4AQ6wNSsA//8APAAABJAGlQAnAHMACgEOAQIAPAAAAAmxAAG4AQ6wNSsAAAIAbgAABDAEowAqADMAQUA+AAgAAgMIAmcGAQAAB18KAQcHIk0ACQkBXwABASVNBQEDAwRfAAQEIwROAAAzMS0rACoAKCEkNCEmISQLCB0rABYVFAYjIxUzMhYWFRQGBiMjFTMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzIQMzMjY1NCYjIwLZHR0i2Od1o1JSo3Xn2CIdHSL99iIdHSKcnCIdHSICCtjSbXRwcdIEox8lJR98VZVfXpNUiR8lJR8fJSUfA5MfJSUf/PZjWlhpAAABACj/6gQbBSUAOQDOtQYBAgMBTEuwF1BYQCAAAgMBAwIBgAADAwZhBwEGBiRNBQEBAQBhBAEAACkAThtLsCBQWEAqAAIDAQMCAYAAAwMGYQcBBgYkTQUBAQEEXwAEBCNNBQEBAQBhAAAAKQBOG0uwMVBYQCgAAgMBAwIBgAcBBgADAgYDaQUBAQEEXwAEBCNNBQEBAQBhAAAAKQBOG0AmAAIDBQMCBYAHAQYAAwIGA2kABQUEXwAEBCNNAAEBAGEAAAApAE5ZWVlADwAAADkAOCQ1KiQkLAgIHCsAFhYVFAYHFhYVFAYGIyImNTQ2MzI2NTQmIyImNTQ2NzY2NTQmIyIGFREUBiMjIiY1NDYzMxE0NjYzAuGrVlxSbHtmuHkyIR4ifo6KdiIdHSJiZ3VtZnMdIuUiHR0ijlmocgUlW51iW4crKbN6dq1bISwlInpyeochJCQgAwpwWl5rgW/8oCUfHyUlHwMnbqlfAP//AIf/6gSGBYcAIgBEAAAAAgBDPgD//wCH/+oEhgWHACIARAAAAAIAc8IA//8Ah//qBIYFdAAiAEQAAAACASoAAP//AIf/6gSGBS0AIgBEAAAAAgEwAAD//wCH/+oEhgVTACIARAAAAAIAaQAA//8Ah//qBIYGFQAiAEQAAAACAS4HAAADAEv/6gR/A7IAOAA/AEoAZUBiNQEGCBgBAwECTAAHBgUGBwWAAAIAAQACAYAKAQUQDQIAAgUAaQ8LAgYGCGEOCQIICCtNDAEBAQNhBAEDAykDTkBAOTkAAEBKQEpGRDk/OT48OwA4ADcmIyMVIycjISQRCB8rABYXFAYjIRIzMjY3NjMyFxYVFAcGBiMiJwYGIyImJjU0NjM1NCYjIgYHBiMiJyY1NDc2MzIXNjYzBgYHISYmIwAGFRQWMzI2NjU1A+2MBh0i/nEFnzBQKhEWHxkVGzeESKNRMJFRTnZA+dc4Sy1WLhMXHBgVF3uSmUQocUdFTgwBLAdCQv4klzwzOFs1A7Lo1CIc/sMlKREfGRkcGTQ2kENNQHZQp60WZWIiIw8ZGBocFGp0OTuRaHVscf6XZGQ5QDllP2QAAQB//igEHQOyAFIAqkAPMQEIBSYGAgAJEgEBAwNMS7AKUFhAPQAKBwkHCgmAAAAJBAMAcgACBAMEAgOAAAkABAIJBGkAAwABAwFmAAgIBWEGAQUFK00ABwcFYQYBBQUrB04bQD4ACgcJBwoJgAAACQQJAASAAAIEAwQCA4AACQAEAgkEaQADAAEDAWYACAgFYQYBBQUrTQAHBwVhBgEFBSsHTllAEFFPTEolJSUrJCQXJBcLCB8rJBUUBwYGBxU2FhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIwciJjU1LgI1NDY2MzIWFzU0NjMyFhURFAYjIiY1NCYmIyIGBhUUFhYzMjY3NjMyFwQdIEa7ZWVmfHlEgDMXCBEdCAUrZy8zOjY+Jw8TerdjetuNWZU0IikpIiIpKSJAf1lgmFZRk2BcrUcVEh0ZuxcjFzVBCF0BXktXaBgYChkOFS0CEBYhHyEgARUXoBGDzn2K3H5BPDwjHh4j/t4jHh4jPV40VppgYZlWOTYQKf//AJL/6gRDBYcAIgBIAAAAAgBDPgD//wCS/+oEQwWHACIASAAAAAIAc+oA//8Akv/qBEMFdAAiAEgAAAACASoUAP//AJL/6gRDBVMAIgBIAAAAAgBpCgD//wC7AAAESQWHACIBZQAAAAIAQ9oA//8AuwAABEkFhwAiAWUAAAACAHPCAP//ALsAAARJBXQAIgFlAAAAAgEqAAD//wC7AAAESQVTACIBZQAAAAIAaQAAAAIAjP/qBEAFNAAzAEMAp0AOMyggHBEFAgQPAQUBAkxLsBtQWEAoAAIEAQQCAYAAAwMkTQAEBCRNAAUFAWEAAQElTQcBBgYAYQAAACkAThtLsCBQWEAmAAIEAQQCAYAAAQAFBgEFaQADAyRNAAQEJE0HAQYGAGEAAAApAE4bQCMAAwQDhQAEAgSFAAIBAoUAAQAFBgEFaQcBBgYAYQAAACkATllZQA80NDRDNEIuJh4lJiQICBwrABEUBgYjIiYmNTQ2NjMyFyYnBwYjIiYnJjU0NzcmJyY1NDc2MzIXFhc3NjMyFhcWFRQHBwI2NjU0JiYjIgYGFRQWFjMEQHvYh4fYe3vYh3l2SYjwEQ4SGAoIK5UtTSUOGCIREn1g7REOEhgKCCuhWo9PT49eXo9PT49eAzv+dYbOcnLOhobOck14a1oHFxoTEiEQOBonEh0TGi0JPUVZBxcaExIhEDz8OEyKXFyKTEyKXFyKTP//AE0AAASRBS0AIgBRAAAAAgEwAAD//wCE/+oESAWHACIAUgAAAAIAQxYA//8AhP/qBEgFhwAiAFIAAAACAHPqAP//AIT/6gRIBXQAIgBSAAAAAgEqAAD//wCE/+oESAUtACIAUgAAAAIBMAAA//8AhP/qBEgFUwAiAFIAAAACAGkAAAADAKoAbgQiBB8ADQAbACkAQUA+BgEBAAADAQBpBwEDAAIFAwJnCAEFBAQFWQgBBQUEYQAEBQRRHBwODgAAHCkcKCMhDhsOGRUSAA0ADCUJCBcrABYVFRQGIyImNTU0NjMAFhUUBiMhIiY1NDYzIQAWFRUUBiMiJjU1NDYzAp4xMTg4MTE4AZ8dHSL9BiIdHSIC+v67MTE4ODExOAQfHSJoIh0dImgiHf5rHyUlHx8lJR/+yh0iaCIdHSJoIh0AAwBU/8wEeAPQACUALgA3AGpAEyABBAIxMCgnFwQGBQQNAQAFA0xLsCJQWEAfAAMDK00ABAQCYQACAitNAAUFAGEAAAApTQABASkBThtAHwADAgOFAAEAAYYABAQCYQACAitNAAUFAGEAAAApAE5ZQAknJSQrJCkGCBwrABUUBwcWFRQGBiMiJicHBiMiJyY1NDc3JjU0NjYzMhYXNzYzMhcAFwEmIyIGBhUkJwEWMzI2NjUEeBlsVX3ciVaYPm0ZFBYcGhhtVX3ciVaZPWwZFBcc/MQpAdlQbmGTUAKIKf4nT29hk1ADmBYWGGl7oovdfDMvaRccHBYVGGp7oovdfDIvaBcc/bZMAck3VZliZEz+ODhVmWIA//8ASP/qBHgFhwAiAFgAAAACAEMMAP//AEj/6gR4BYcAIgBYAAAAAgBz/gD//wBI/+oEeAV0ACIAWAAAAAIBKvYA//8ASP/qBHgFUwAiAFgAAAACAGnsAP//ADL+ZQSaBYcAIgBcAAAAAgBzAAAAAgAl/nwETQUgACgAOACDtg8DAgcIAUxLsCBQWEAsAAUFBl8JAQYGJE0KAQgIAGEAAAArTQAHBwFhAAEBKU0EAQICA18AAwMnA04bQCoJAQYABQAGBWkKAQgIAGEAAAArTQAHBwFhAAEBKU0EAQICA18AAwMnA05ZQBcpKQAAKTgpNzEvACgAJiEkNCImJAsIHCsAFhURNjMyFhYVFAYGIyInETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzMwAGBhUUFhYzMjY2NTQmJiMBQx2BvHzEcHDEfLyBrCIdHSL+WCIdHSJmUiIdHSKpARmLT0+LWVmAQ0OAWQUgHyX+MaV125SU23Wl/nUfJSUfHyUlHwWUHyUlH/3+UJhoaJhQVZhjY5hV//8AMv5lBJoFUwAiAFwAAAACAGkAAP//AAoAAATCBfAAJwBu/84BDgECACQAAAAJsQABuAEOsDUrAP//AIf/6gSGBOIAIgBEAAAAAgBuAAD//wAKAAAEwgZqACIAJAAAAQcBLP/sAQ4ACbECAbgBDrA1KwD//wCH/+oEhgVcACIARAAAAAIBLAMAAAIACv4oBMIEowBHAEsAhbRKAQkBS0uwG1BYQCoADQAFBA0FZwEBAAACAAJlAAkJCl8ACgoiTQsIBgMEBANhDAcCAwMjA04bQDEAAQMAAwEAgAANAAUEDQVnAAAAAgACZQAJCQpfAAoKIk0LCAYDBAQDYQwHAgMDIwNOWUAWSUhHRUE/PDk1MyQ0IREkJScxJA4IHysEBhUUFjMyNzYzMhcWFRQGBwYjIiY1NDY3IyImNTQ2MzMnIQczMhYVFAYjISImNTQ2MzMBIyImNTQ2MyEyFhcBMzIWFRQGIyMBIQMjA+xNKiM0PQgDHgkCERFLWV1rUEx+Ih0dIodS/htTeSIdHSL+siIdHSI4AUu7Ih0dIgFvKDEMAWE9Ih0dIj79WwGIuhNTejcjJhECNhIHFhkGGmhXSYpGHyUlH+7uHyUlHx8lJR8Dkx8lJR8fIvwmHyUlHwH+Ah0AAgCH/igEhgOyAEYAUgFwS7AXUFhAEB4BCgNSRwIHChIQAgIHA0wbS7AdUFhAEB4BCgNSRwIHChIQAggHA0wbQBMeAQoDUkcCBwoSAQsHEAEICwRMWVlLsBdQWEAwAAUEAwQFA4AAAwAKBwMKaQkMAgAAAQABZQAEBAZhAAYGK00LAQcHAmEIAQICKQJOG0uwG1BYQDoABQQDBAUDgAADAAoHAwppCQwCAAABAAFlAAQEBmEABgYrTQsBBwcIYQAICCNNCwEHBwJhAAICKQJOG0uwHVBYQEEABQQDBAUDgAwBAAIJAgAJgAADAAoHAwppAAkAAQkBZQAEBAZhAAYGK00LAQcHCGEACAgjTQsBBwcCYQACAikCThtAPwAFBAMEBQOADAEAAgkCAAmAAAMACgcDCmkACQABCQFlAAQEBmEABgYrTQAHBwhhAAgII00ACwsCYQACAikCTllZWUAfAgBRT0tJRUM+PDg1MS8oJiMhHRsWFAsJAEYCRg0IFisAMzIXFhUUBgcGIyImNTQ2NyYnBgYjIiYmNTQ2MzIXNTQmIyIGBwYjIicmNTQ3NjYzMhYVERQzMzIWFRQGIyMGBhUUFjMyNwMmJiMiBhUUFjMyNwRRAx4JAhERS1lda15ZOxBSv2tlm1jis5+RbXlLokkRDiEWCyVUwWG8vEIjIh0dIhZZTSojND39RJxPc4VlW8eg/sY2EgcWGQYaaFdPlUwiR0hORYRbnpczVWFbKiUJMBgQIxMsL6il/nJPHyUlH1N6NyMmEQLFFhdPVklRpQD//wB2/+oERQaVACcAcwASAQ4BAgAmAAAACbEAAbgBDrA1KwD//wB//+oEHQWHACIARgAAAAIAc/0A//8Adv/qBEUGggAnASoAKAEOAQIAJgAAAAmxAAG4AQ6wNSsA//8Af//qBB0FdAAiASoKAAACAEYAAP//AHb/6gRFBmEAJwEtABQBDgECACYAAAAJsQABuAEOsDUrAP//AH//6gQdBVMAIgBGAAAAAgEtCgD//wB2/+oERQaEACIAJgAAAQcBKwAeAQ4ACbEBAbgBDrA1KwD//wB//+oEHQV2ACIARgAAAAIBKwoA//8AUAAABHQGhAAiACcAAAEHASv/4gEOAAmxAgG4AQ6wNSsAAAMAf//qBTAFIAAkADUARQETQAsvAQYDGw8CAAkCTEuwF1BYQDAABAQFYQcKAgUFJE0ABgYFYQcKAgUFJE0LAQkJA2EAAwMrTQgBAAABYQIBAQEjAU4bS7AgUFhAOgAEBAVhBwoCBQUkTQAGBgVhBwoCBQUkTQsBCQkDYQADAytNCAEAAAFfAAEBI00IAQAAAmEAAgIpAk4bS7AxUFhAMgAEAwUEVwcKAgUABgkFBmkLAQkJA2EAAwMrTQgBAAABXwABASNNCAEAAAJhAAICKQJOG0AwAAQDBQRXBwoCBQAGCQUGaQsBCQkDYQADAytNAAAAAV8AAQEjTQAICAJhAAICKQJOWVlZQBo2NgAANkU2RD48NTMtKwAkACIiJiQ0IwwIGysAFhURMzIWFRQGIyMiJjU1BiMiJiY1NDY2MzIXESMiJjU0NjMzIBYVFAcDBiMiJjU0NxM2MzMABgYVFBYWMzI2NjU0JiYjA4EdUiIdHSKfIh1mr22uY2OubalioiIdHSL5AcMOBYYNPRweAlIIInb8qGk3N2lKTnQ/P3ROBSAfJfusHyUlHx8lS6V125SU23WhAYcfJSUfDwwJD/6VJBYUBAoBaiD9/lWYY2OYVVCXaWmXUAACAFAAAAR0BKMAIQA1AEBAPQcBAwgBAgEDAmkGAQQEBV8KAQUFIk0LCQIBAQBfAAAAIwBOIiIAACI1IjQzMS0rKigAIQAfISQhJDYMCBsrABYSFRQCBiMhIiY1NDYzMxEjIiY1NDYzMxEjIiY1NDYzIRI2NjU0JiYjIxEhMhYVFAYjIREzAwPug4Punf4pIh0dInBiIh0dImJwIh0dIgHXYLBgYLB3ugESIh0dIv7uugSjj/7ztrb+9I8fJSUfAZIhJychAXEfJSUf++VpzZOTzWr+jyEnJyH+bgAAAgCV/+oEmgUgADcARwFPQAoaAQoDDQEACgJMS7AXUFhALQgBBQwJAgQDBQRpAAYGB18ABwckTQAKCgNhAAMDJU0NCwIAAAFhAgEBASMBThtLsBtQWEA4CAEFDAkCBAMFBGkABgYHXwAHByRNAAoKA2EAAwMlTQ0LAgAAAV8AAQEjTQ0LAgAAAmEAAgIpAk4bS7AgUFhANggBBQwJAgQDBQRpAAMACgADCmkABgYHXwAHByRNDQsCAAABXwABASNNDQsCAAACYQACAikCThtLsDFQWEA0AAcABgUHBmcIAQUMCQIEAwUEaQADAAoAAwppDQsCAAABXwABASNNDQsCAAACYQACAikCThtAMQAHAAYFBwZnCAEFDAkCBAMFBGkAAwAKAAMKaQAAAAFfAAEBI00NAQsLAmEAAgIpAk5ZWVlZQBo4OAAAOEc4RkA+ADcANiM0ISQiJiU0IQ4IHysBETMyFhUUBiMjIiY1NQYGIyImJjU0NjYzMhc1ISImNTQ2MyE1IyImNTQ2MzMyFhUVMzIWFRQGIwA2NjU0JiYjIgYGFRQWFjMD7lIiHR0inyIdPJtcdrpqarp2sHn+0SIdHSIBL6IiHR0i+SIdbSIdHSL+MYJKSoJTU3g/P3hTA8r8vh8lJR8fJUZNU23Oi4vObZPnHyUlH0YfJSUfHyWKHyUlH/y0SYpfX4pJTotZWYtOAP//AFAAAARMBfAAJwBuABUBDgECACgAAAAJsQABuAEOsDUrAP//AJL/6gRDBOIAIgBuFAAAAgBIAAD//wBQAAAETAZhACcBLQAAAQ4BAgAoAAAACbEAAbgBDrA1KwD//wCS/+oEQwVTACIBLRQAAAIASAAAAAEAUP4oBEwEowBVAQBLsApQWEBCAAcKCQUHcgAJAAwOCQxnAAoACwQKC2kBAQAAAgACZQgBBQUGXwAGBiJNAA4OA2EPAQMDI00NAQQEA2EPAQMDIwNOG0uwG1BYQEMABwoJCgcJgAAJAAwOCQxnAAoACwQKC2kBAQAAAgACZQgBBQUGXwAGBiJNAA4OA2EPAQMDI00NAQQEA2EPAQMDIwNOG0BKAAcKCQoHCYAAAQMAAwEAgAAJAAwOCQxnAAoACwQKC2kAAAACAAJlCAEFBQZfAAYGIk0ADg4DYQ8BAwMjTQ0BBAQDYQ8BAwMjA05ZWUAaVVNOTElIR0ZDQTw6NzYTJTQhJCUnMSQQCB8rBAYVFBYzMjc2MzIXFhUUBgcGIyImNTQ2NyEiJjU0NjMzESMiJjU0NjMhMhYVFRQGIyImNTUhESE1NDYzMhYVERQGIyImNTUhESE1NDYzMhYVERQGIyMDnE0qIzQ9CAMeCQIREUtZXWtQTP1AIh0dImZmIh0dIgNqIh0iKSki/ekBAh8oKB8fKCgf/v4CKyIpKSIdIhhTejcjJhECNhIHFhkGGmhXSYpGHyUlHwOTHyUlHx8l/iMeHiO6/o1bIx4eI/7CIx4eI1v+aOUjHh4j/tclHwAAAgCS/igEQwOyADcAPgBOQEstAQUBAUwAAgABAAIBgAAHAAACBwBnAAMABAMEZQoBCAgGYQkBBgYrTQABAQVhAAUFKQVOODgAADg+OD07OgA3ADYmKCwjIiULCBwrABYWFxQGIyEWFjMyNjc2MzIXFhUUBwYHBgYVFBYzMjc2FhUUBgcGIyImNTQ2NwYjIiYmNTQ2NjMGBgchJiYjAwDNbggdIv0sB6OVXLREEQ4jFgksGz1WSyojNzoYHBERS1lda09LS0OX1nB62It7oRkCYxWXggOydc+HIhyVmS8nCTUVESgWDTlRejUkJwoEIycUGAYaaFdHhUQNdNqWj9x5kX1vc3kA//8AUAAABEwGhAAiACgAAAEHASsAAAEOAAmxAQG4AQ6wNSsA//8Akv/qBEMFdgAiAEgAAAACASsQAP//AGL/6gSQBoIAJwEqAB4BDgECACoAAAAJsQABuAEOsDUrAP//AH/+ZgSTBXQAIgBKAAAAAgEqAAD//wBi/+oEkAZqACIAKgAAAQcBLAAKAQ4ACbEBAbgBDrA1KwD//wB//mYEkwVcACIASgAAAAIBLAAA//8AYv/qBJAGYQAnAS0ACgEOAQIAKgAAAAmxAAG4AQ6wNSsA//8Af/5mBJMFUwAiAEoAAAACAS0AAP//AGL98gSQBLkAIgAqAAAAAwGABNYAAAADAH/+ZgSTBaQADwA/AE8BQEAQCgICAAE1EgIJAygBBAYDTEuwF1BYQDQABQcGBwUGgAsBAQAAAgEAaQ0KAgMDAmEMCAICAiVNAAkJB2EABwcjTQAGBgRhAAQELQROG0uwJFBYQD8ABQcGBwUGgAsBAQAACAEAaQ0KAgMDCGEMAQgIK00NCgIDAwJfAAICJU0ACQkHYQAHByNNAAYGBGEABAQtBE4bS7AxUFhAPQAFBwYHBQaACwEBAAAIAQBpAAkABwUJB2kNCgIDAwhhDAEICCtNDQoCAwMCXwACAiVNAAYGBGEABAQtBE4bQDoABQcGBwUGgAsBAQAACAEAaQAJAAcFCQdpDQEKCghhDAEICCtNAAMDAl8AAgIlTQAGBgRhAAQELQROWVlZQCRAQBAQAABAT0BOSEYQPxA+ODYyMCwrJCIeHBgVAA8ADjYOCBcrABYVFAcDBiMjIjU0NxM2MwIWFzU0NjMzMhYVFAYjIxEUBgYjIiYnJjU0NzYzMhcWFjMyNjU1BiMiJiY1NDY2Mw4CFRQWFjMyNjY1NCYmIwLdIgI/CCJ0HAZ1Dywppj8dIp8iHR0iUmXAh2DEVScIEicLC06sT4qMfMF8xHBwxHxPgENDgFlZi09Pi1kFpBgVBAz+4SAaDA0BIyb+DlhSUCUfHyUlH/zOd6taIR8OJxAYNwQcIINyyZxv0IyM0G+UT41bW41PSo1gYI1K//8AUAAABHwGggAiACsAAAEHASoAAAEOAAmxAQG4AQ6wNSsA//8ATQAABIcG5gAnASr/9gFyAQIASwAAAAmxAAG4AXKwNSsAAAIAHgAABK4EowBVAFkAYkBfABIABgMSBmcQDgwDAAANXxQRAg0NIk0VEwoDAgIBYQ8LAgEBJU0JBwUDAwMEXwgBBAQjBE5WVgAAVllWWVhXAFUAU09NTEtKSERBPTs6ODQyMS80IREkNCEkISQWCB8rABYVFAYjIxUzMhYVFAYjIxEzMhYVFAYjISImNTQ2MzMRIREzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzM1IyImNTQ2MyEyFhUUBiMjFSE1IyImNTQ2MyEBFSE1BF8dHSJIeiIdHSJ6SCIdHSL+xiIdHSJc/g5cIh0dIv7GIh0dIkh6Ih0dInpIIh0dIgE6Ih0dIlwB8lwiHR0iATr9MAHyBKMfJSUffx8lJR/9dB8lJR8fJSUfAZj+aB8lJR8fJSUfAowfJSUffx8lJR8fJSUff38fJSUf/nFsbAAAAQAUAAAEhwUgAE0AvLVEAQECAUxLsBtQWEAuCgEHCwEGDAcGZwAICAlfAAkJJE0AAgIMYQAMDCVNDg0FAwQBAQBfBAEAACMAThtLsCBQWEAsCgEHCwEGDAcGZwAMAAIBDAJpAAgICV8ACQkkTQ4NBQMEAQEAXwQBAAAjAE4bQCoACQAIBwkIaQoBBwsBBgwHBmcADAACAQwCaQ4NBQMEAQEAXwQBAAAjAE5ZWUAaAAAATQBMSEZDQT07ODUhJCEkNCQjJDQPCB8rJBYVFAYjISImNTQ2MzMRNCYjIgYGFRUzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzM1IyImNTQ2MzMyFhUVMzIWFRQGIyMRNjYzMhYWFREzBGodHSL+vCIdHSJcUlBVk1hcIh0dIv68Ih0dIlKVIh0dIpVcIh0dIrMiHfMiHR0i80GrY1uGSFKIHyUlHx8lJR8BmVloYqxq4h8lJR8fJSUfA0IfJSUfRh8lJR8fJYofJSUf/uRhZ0+UY/5Y//8AyAAABAQF8AAiACwAAAEHAG4AAAEOAAmxAQG4AQ6wNSsA//8AuwAABEkE4gAiAWUAAAACAG72AAABAMj+KAQEBKMAOQBpS7AbUFhAIQIBAQADAQNlCAEGBgdfAAcHIk0KCQIFBQBfBAEAACMAThtAKAACAAEAAgGAAAEAAwEDZQgBBgYHXwAHByJNCgkCBQUAXwQBAAAjAE5ZQBIAAAA5ADgkNCEkJScxJSQLCB8rJBYVFAYjIQYGFRQWMzI3NjMyFxYVFAYHBiMiJjU0NjchIiY1NDYzIREhIiY1NDYzITIWFRQGIyERIQPnHR0i/vBZTSojND0IAx4JAhERS1lda1BM/vgiHR0iART/ACIdHSICliIdHSL/AAEUiB8lJR9TejcjJhECNhIHFhkGGmhXSYpGHyUlHwOTHyUlHx8lJR/8bQAAAgC7/igESQVTAA0AQwDES7AbUFhAKwQBAwAFAwVlCwEBAQBhAAAAKk0ACAgJXwAJCSVNDAoCBwcCXwYBAgIjAk4bS7AgUFhAMgAEAgMCBAOAAAMABQMFZQsBAQEAYQAAACpNAAgICV8ACQklTQwKAgcHAl8GAQICIwJOG0AwAAQCAwIEA4AAAAsBAQkAAWkAAwAFAwVlAAgICV8ACQklTQwKAgcHAl8GAQICIwJOWVlAIA4OAAAOQw5CPzw4NjUzLy0oJh8cGxkUEgANAAwlDQgXKwAmNTU0NjMyFhUVFAYjABYVFAYjIQYGFRQWMzI3NjMyFxYVFAYHBiMiJjU0NjchIiY1NDYzIREjIiY1NDYzITIWFREhAjMoKDc3KCg3AcIdHSL+v1lNKiM0PQgDHgkCERFLWV1rUEz+1yIdHSIBOf0iHR0iAVQiHQFBBE8dJIIkHR0kgiQd/DkfJSUfU3o3IyYRAjYSBxYZBhpoV0mKRh8lJR8CjB8lJR8fJf0wAP//AMgAAAQEBmEAIgAsAAABBwEtAAABDgAJsQEBuAEOsDUrAAACABT/6gS4BKMAHwBFAMG1NwEBCAFMS7AXUFhAJgAIAAEACAGACgYEAwAABV8NCwwDBQUiTQkDAgEBAmEHAQICIwJOG0uwMVBYQDEACAABAAgBgAoGBAMAAAVfDQsMAwUFIk0JAwIBAQJfAAICI00JAwIBAQdhAAcHKQdOG0AuAAgAAQAIAYAKBgQDAAAFXw0LDAMFBSJNAwEBAQJfAAICI00ACQkHYQAHBykHTllZQB4gIAAAIEUgQz89Ojg0MispJiQAHwAdISQ0ISQOCBsrABYVFAYjIxEzMhYVFAYjISImNTQ2MzMRIyImNTQ2MyEgFhUUBiMjERQGIyImJyY1ETQ2MzIWFRUWMzI2NREjIiY1NDYzIQHBHR0iVmAiHR0i/qoiHR0iYFYiHR0iAUIC/B0dIkeEikJ6LRAiKSkiJj4+OY0iHR0iAWoEox8lJR/8bR8lJR8fJSUfA5MfJSUfHyUlH/zOe4Q3LhAjAR0jHh4j/iNBSAMUHyUlHwAABAA5/mYEMQVTAA0AGwA3AFcAtbVDAQkLAUxLsCBQWEA6AAoFCwUKC4ACAQAAAWEPAw4DAQEqTQwBBwcIXxENEAMICCVNBgEEBAVfAAUFI00ACwsJYQAJCS0JThtAOAAKBQsFCguADwMOAwECAQAIAQBpDAEHBwhfEQ0QAwgIJU0GAQQEBV8ABQUjTQALCwlhAAkJLQlOWUAuODgcHA4OAAA4VzhVUU9MSkdGPz0cNxw1MS8uLCglIR8OGw4aFRMADQAMJRIIFysAFhUVFAYjIiY1NTQ2MyAWFRUUBiMiJjU1NDYzABYVETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzMyAWFREUBiMiJicmNTQ3NjMyFxYzMjY1ESMiJjU0NjMhAYkoKDc3KCg3ArcoKDc3KCg3/cIdqyIdHSL+HCIdHSKjeyIdHSLSAqIdnapKl0AoCBQlDQ2Da2JP3yIdHSIBNgVTHSSCJB0dJIIkHR0kgiQdHSSCJB3+SR8l/TAfJSUfHyUlHwKMHyUlHx8l/G+wsSceEiYSFDQGP2pyA0AfJSUf//8Ac//qBIYGggAnASoAoAEOAQIALQAAAAmxAAG4AQ6wNSsA//8Avv5mBBMFdAAiASpuAAACASkAAP//AFD98gSkBKMAIgAuAAAAAwGABNYAAP//AEP98gSHBSAAIgBOAAAAAwGABLgAAP//AFAAAARMBpUAJwBz/zYBDgECAC8AAAAJsQABuAEOsDUrAP//ALEAAAQ/BvkAJwBz/+ABcgECAE8AAAAJsQABuAFysDUrAP//AFD98gRMBKMAIgAvAAAAAwGABMwAAP//ALH98gQ/BSAAIgBPAAAAAwGABMwAAP//AFAAAARyBKMAIgAvAAABBwGEAmn/gwAJsQEBuP+DsDUrAP//AJMAAARoBSAAIgBP4gAAAwGEAl8AAAABADwAAARMBKMAOgBOQEsxEQcDAwEnAQYDAkwAAQADAAEDgAADBgADBn4ABgIABgJ+BwEAAAhfCQEICCJNBQECAgRgAAQEIwROAAAAOgA4JyMkNSMXIyQKCB4rABYVFAYjIxE3NjMyFxYVFAcFESERNDYzMhYVERQGIyEiJjU0NjMzEQcGIyInJjU0NzcRIyImNTQ2MyEC2x0dIvLOGBAaGRIg/uUB7yIpKSIdIvyCIh0dIqKIGBAaGRIg1aIiHR0iAioEox8lJR/+sIwQJRsSGRXB/mIBSSMeHiP+cyUfHyUlHwE4XBAlGxIZFZEBth8lJR8AAQCxAAAEPwUgADEAbkAJKB4NAwQEAAFMS7AgUFhAJAAEAAEABAGAAAUFBl8HAQYGJE0AAAArTQMBAQECYAACAiMCThtAIgAEAAEABAGABwEGAAUABgVnAAAAK00DAQEBAmAAAgIjAk5ZQA8AAAAxAC8nIyQ0JyUICBwrABYVETc2MzIXFhUUBwcRITIWFRQGIyEiJjU0NjMhEQcGIyInJjU0NzcRISImNTQ2MyECoh2nGBAaGRIg9AFBIh0dIvzwIh0dIgE5rxgQGhkSIPz+7yIdHSIBaAUgHyX+W3IQJRsSGRWm/fUfJSUfHyUlHwGldxAlGxIZFasBxx8lJR8A//8ARv/qBIYGlQAnAHP//gEOAQIAMQAAAAmxAAG4AQ6wNSsA//8ATQAABJEFhwAiAFEAAAACAHP+AP//AEb98gSGBKMAIgAxAAAAAwGABMwAAP//AE398gSRA7IAIgBRAAAAAwGABMwAAP//AEb/6gSGBoQAIgAxAAABBwErAAABDgAJsQEBuAEOsDUrAP//AE0AAASRBXYAIgBRAAAAAgErAAD//wBY/+oEdAXwACIAMgAAAQcAbgAAAQ4ACbECAbgBDrA1KwD//wCE/+oESATiACIAbgAAAAIAUgAA//8AWP/qBHQGhAAiADIAAAEHATEAAAEOAAmxAgK4AQ6wNSsA//8AhP/qBE8FdgAiATEAAAACAFIAAAACAD4AAARyBKMAKwA0AIZLsApQWEAvAAABAgEAcgAFAwQEBXIAAgADBQIDZwsJAgEBB18KAQcHIk0IAQQEBmAABgYjBk4bQDEAAAECAQACgAAFAwQDBQSAAAIAAwUCA2cLCQIBAQdfCgEHByJNCAEEBAZgAAYGIwZOWUAYLCwAACw0LDQzMgArACk1IxEkIRMlDAgdKwAWFRUUBiMiJjU1IREzMhYVFAYjIxEhNTQ2MzIWFREUBiMhIiYCNTQSNjMhBAYGFRQWFhcRBEkdIikpIv78wCIdHSLAARAiKSkiHSL+C5rofn7omgHp/aacVVWcaQSjHyX+Ix4eI7r+kh8lJR/+Y+UjHh4j/tclH48BC7e3AQyPjWvLj4/LawQDkgADAEb/6gR/A7IAJgAtADkAWEBVIwEIBRkBAwECTAACAAEAAgGAAAcAAAIHAGcNCgwDCAgFYQsGAgUFK00JAQEBA2EEAQMDKQNOLi4nJwAALjkuODQyJy0nLCopACYAJSQjJyMhJA4IHCsAFhcUBiMhEjMyNjc2MzIXFhUUBwYGIyImJwYjIiY1NDYzMhc2NjMGBgchJiYjBAYVFBYzMjY1NCYjA+2MBh0i/nEFnzBQKhEWHxkVGzeESE56KEucmp6empxLKHpORU4MASwHQkL92EtLT09LS08DsujUIhz+wyUpER8ZGRwZNDZFRYr76en7jEZGkWh1bHEDoa+voaGvr6EA//8AUAAABKQGlQAnAHP/6gEOAQIANQAAAAmxAAG4AQ6wNSsA//8AkwAABFIFhwAiAHMyAAACAFUAAP//AFD98gSkBKMAIgA1AAAAAwGABOoAAP//AJP98gRSA7IAIgBVAAAAAwGABFQAAP//AFAAAASkBoQAIgA1AAABBwEr/+wBDgAJsQIBuAEOsDUrAP//AJMAAARSBXYAIgBVAAAAAgErHgD//wCe/+oEKQaVACIANgAAAQcAc//qAQ4ACbEBAbgBDrA1KwD//wCz/+oEGgWHACIAVgAAAAIAc+oA//8Anv/qBCkGggAnASr//AEOAQIANgAAAAmxAAG4AQ6wNSsA//8As//qBBoFdAAiASr2AAACAFYAAAABAJ7+KAQpBLkAagEXQA9LAQwJJSMCAAgPAQIEA0xLsApQWEBIAAEABQQBcgAFAwAFcAADBAADBH4ABAACBAJmAAwMCWEKAQkJKE0ACwsJYQoBCQkoTQAHBwBhBgEAAClNAAgIAGEGAQAAKQBOG0uwDFBYQEkAAQAFAAEFgAAFAwAFcAADBAADBH4ABAACBAJmAAwMCWEKAQkJKE0ACwsJYQoBCQkoTQAHBwBhBgEAAClNAAgIAGEGAQAAKQBOG0BKAAEABQABBYAABQMABQN+AAMEAAMEfgAEAAIEAmYADAwJYQoBCQkoTQALCwlhCgEJCShNAAcHAGEGAQAAKU0ACAgAYQYBAAApAE5ZWUAUXFpXVVBOSUcjJSkkJBckERINCB8rJAYGBxU2FhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIwciJjU1JicVFAYjIiY1ETQ2MzIXFhYzMjY1NCYnJiYnJiYnJiY1NDY2MzIWFzU0NjMyFhUVFAYjIicmJiMiBhUUFhcWFhcWFhcWFhUEKVisemVmfHlEgDMXCBEdCAUrZy8zOjY+Jw8TlF8iKSkiIikrDymzg4CJPzwmWk5Sby9QWWOxcVikOiIpKSIiKSYOMK5vbnkqJyNeT1ZlMWRx5ZhbB1wBXktXaBgYChkOFS0CEBYhHyEgARUXoxxrTiMeHiMBLCMeKnR8bls/TxoRFRAQHBUke2RnmFFEOj0jHh4j5iMeGltfZlYpOBQSFw8RFxQpk30AAQCz/igEGgOyAGsBF0APTAEMCSUjAgAIDwECBANMS7AKUFhASAABAAUEAXIABQMABXAAAwQAAwR+AAQAAgQCZgAMDAlhCgEJCStNAAsLCWEKAQkJK00ABwcAYQYBAAApTQAICABhBgEAACkAThtLsAxQWEBJAAEABQABBYAABQMABXAAAwQAAwR+AAQAAgQCZgAMDAlhCgEJCStNAAsLCWEKAQkJK00ABwcAYQYBAAApTQAICABhBgEAACkAThtASgABAAUAAQWAAAUDAAUDfgADBAADBH4ABAACBAJmAAwMCWEKAQkJK00ACwsJYQoBCQkrTQAHBwBhBgEAAClNAAgIAGEGAQAAKQBOWVlAFF1bWFZRT0pIJCUpJCQXJBESDQgfKyQGBgcVNhYVFAYjIiYnJjU0NzYzMhcWFjMyNjU0JiMHIiY1NSYnFRQGIyImNTU0NjMyFhcWFjMyNjU0JicmJicmJicmJjU0NjYzMhYXNTQ2MzIWFRUUBiMiJyYmIyIGFRQWFxYWFxYWFxYWFQQaU6FxZWZ8eUSAMxcIER0IBStnLzM6Nj4nDxOMXCIpKSIiKRUYCSSojHR8LCkjW0ZefjVJUVuhZmGhOiIpKSIiKSIOK6R+YW0pKCFXRWF3NVBZv4NNBFwBXktXaBgYChkOFS0CEBYhHyEgARUXohZcOCMeHiPwIx4TFmBYVEYiLA4LDwcKFhUdZ1NXfUA6NC0jHh4jviMeGlJDRT4gKA0LDAcLExMdblr//wCe/+oEKQaEACIANgAAAQcBK//nAQ4ACbEBAbgBDrA1KwD//wCz/+oEGgV2ACIAVgAAAAIBK/kA//8Aev3yBFIEowAiADcAAAADAYAEwgAA//8Adf3yBEgEuQAiAFcAAAADAYAE/gAA//8AegAABFIGhAAiADcAAAEHASsAAAEOAAmxAQG4AQ6wNSsA//8Adf/qBEgFeAAiAFcAAAEHAYAF5AYKAAmxAQG4BgqwNSsA//8ARv/qBIYF8AAnAG4AAAEOAQIAOAAAAAmxAAG4AQ6wNSsA//8ASP/qBHgE4gAiAG4AAAACAFgAAP//AEb/6gSGBmoAIgA4AAABBwEsAAABDgAJsQEBuAEOsDUrAP//AEj/6gR4BVwAIgBYAAAAAgEs7AD//wBG/+oEhgcjACIAOAAAAQcBLgAAAQ4ACbEBArgBDrA1KwD//wBI/+oEeAYVACIAWAAAAAIBLuIA//8ARv/qBIYGhAAiADgAAAEHATEAAAEOAAmxAQK4AQ6wNSsA//8ASP/qBHgFdgAiAFgAAAACATHYAAABAEb+KASGBKMARwBtS7AbUFhAIgIBAQADAQNlCQcFAwAABl8LCgIGBiJNAAgIBGEABAQpBE4bQCkAAgQBBAIBgAABAAMBA2UJBwUDAAAGXwsKAgYGIk0ACAgEYQAEBCkETllAFAAAAEcARUE/IyQ0IyUnMSkkDAgfKwAWFRQGIyMRFAYHBgYVFBYzMjc2MzIXFhUUBgcGIyImNTQ2NyMiJjURIyImNTQ2MyEyFhUUBiMjERQWMzI2NREjIiY1NDYzIQRpHR0iPmRgZlgqIzQ9CAMeCQIREUtZXWtEQQrI2z4iHR0iAUQiHR0icIKLi4JwIh0dIgFEBKMfJSUf/W6NuS1cgzsjJhECNhIHFhkGGmhXRH9AztECkh8lJR8fJSUf/YKZhoaZAn4fJSUfAAEASP4oBHgDnABMASFLsBdQWEAKFAEFAxABAgUCTBtLsDFQWEAKFAEFAxABCQUCTBtAChQBCAMQAQkFAkxZWUuwF1BYQCIKCwIAAAEAAWUGAQMDBF8HAQQEJU0IAQUFAmEJAQICKQJOG0uwG1BYQCwKCwIAAAEAAWUGAQMDBF8HAQQEJU0IAQUFCWEACQkjTQgBBQUCYQACAikCThtLsDFQWEAzCwEAAgoCAAqAAAoAAQoBZQYBAwMEXwcBBAQlTQgBBQUJYQAJCSNNCAEFBQJhAAICKQJOG0AxCwEAAgoCAAqAAAoAAQoBZQYBAwMEXwcBBAQlTQAICAlhAAkJI00ABQUCYQACAikCTllZWUAdAgBLSUNCPjw5NjIwLColIh4cGBYLCQBMAkwMCBYrADMyFxYVFAYHBiMiJjU0NjcmJjU1BgYjIiYmNREjIiY1NDYzMzIWFREUFjMyNjY1ESMiJjU0NjMzMhYVETMyFhUUBiMjBgYVFBYzMjcESwMeCQIREUtZXWtRTRcVQrFmW4ZIUiIdHSKpIh1SUFWTWI4iHR0i5SIdUiIdHSIOWU0qIzQ9/sY2EgcWGQYaaFdKikYEHx95ZmxPlGMB5B8lJR8fJf3nWWhirGoBHh8lJR8fJf0wHyUlH1N6NyMmEQD//wA8AAAEkAZhACIAPAAAAQcAaQAAAQ4ACbEBArgBDrA1KwD//wCnAAAEIwaVACIAPQAAAQcAc//+AQ4ACbEBAbgBDrA1KwD//wCyAAAEGgWHACIAXQAAAAIAc/QA//8ApwAABCMGYQAnAS0AAAEOAQIAPQAAAAmxAAG4AQ6wNSsA//8AsgAABBoFUwAiAF0AAAACAS0KAP//AKcAAAQjBoQAIgA9AAABBwErAAgBDgAJsQEBuAEOsDUrAP//ALIAAAQaBWwAIgBdAAABBgErCvYACbEBAbj/9rA1KwAAAQAh/ukEgAUlADcAjEAKAwEBCR8BBAYCTEuwIFBYQC0AAAECAQACgAAFAwYDBQaACAECBwEDBQIDZwAGAAQGBGUAAQEJYQoBCQkkAU4bQDMAAAECAQACgAAFAwYDBQaACgEJAAEACQFpCAECBwEDBQIDZwAGBAQGWQAGBgRhAAQGBFFZQBIAAAA3ADYkIyMWIyQjIxYLCB8rABcWFRQHBiMiJyYjIgYHBzMyFhUUBiMjAwYGIyInJjU0NzYzMhcWMzI2NxMjIiY1NDYzMzc2NjMD9mEpBhEoBhBbW0xVCg7qIh0dIvhDELCOcmEpBhEoBhBbW0xVCkLFIh0dItIQELCOBSUfDScPFTwEHVxfjB8lJR/9ZZmnHw0nDxU8BB1cXwKOHyUlH5mZpwD//wCe/fIEKQS5ACIANgAAAAMBgATMAAD//wCz/fIEGgOyACIAVgAAAAMBgATMAAAAAQC+/mYDhwOcACAANEAxCwECAQFMAAEDAgMBAoAAAwMEXwUBBAQlTQACAgBhAAAALQBOAAAAIAAeIyQXJQYIGisAFhURFAYjIiYnJjU0NzYzMhcWFjMyNjURISImNTQ2MyEDah2dqlPATiENGCIRDkWUQ2JP/lkiHR0iAf4DnB8l/G+wsT8xFCATGi4KLTZqcgNAHyUlHwABAScEDwOlBXQAFwAosQZkREAdEgsCAAIBTAMBAgAChQEBAAB2AAAAFwAWJRcECBgrsQYARAAXFxYVFAcGIyInJwcGIyInJjU0Nzc2MwKKFvUQFxUXEA/d3Q8QFxUXEPUWJAV0FOkPEhUaGAytrQwYGhUSD+kUAAABAScEEQOlBXYAFwAosQZkREAdEgsCAgABTAEBAAIAhQMBAgJ2AAAAFwAWJRcECBgrsQYARAAnJyY1NDc2MzIXFzc2MzIXFhUUBwcGIwJCFvUQFxUXEA/d3Q8QFxUXEPUWJAQRFOkPEhUaGAytrQwYGhUSD+kUAAABAR4ELwOuBVwAHQAusQZkREAjCgECAQFMAwEBAgGFAAIAAAJZAAICAGEAAAIAURMjGSYECBorsQYARAAWFRQHBgYjIiYnJjU0Njc2MzIXFhYzMjY3NjMyFwOUGgEXp4mJpxcBGhwPDSIJF2RQUWQWCSINDwVTFxMIBXF8fHEFCBMXBgMYR0RERxgDAAECBwRPAsUFUwANACexBmREQBwCAQEAAAFZAgEBAQBhAAABAFEAAAANAAwlAwgXK7EGAEQAFhUVFAYjIiY1NTQ2MwKdKCg3NygoNwVTHSSCJB0dJIIkHQACAXAEKQNcBhUADwAbADexBmREQCwEAQEFAQMCAQNpAAIAAAJZAAICAGEAAAIAURAQAAAQGxAaFhQADwAOJgYIFyuxBgBEABYWFRQGBiMiJiY1NDY2MwYGFRQWMzI2NTQmIwKrcUBAcUVFcUBAcUU0Pj40ND4+NAYVQHFFRXFAQHFFRXFAhD40ND4+NDQ+AAABAZv+KAMpABwAGQBNsQZkREuwG1BYQBcAAwADhQEBAAICAFkBAQAAAmIAAgACUhtAGgADAQOFAAEAAYUAAAICAFkAAAACYgACAAJSWbYVJzEkBAgaK7EGAEQEBhUUFjMyNzYzMhcWFRQGBwYjIiY1NDY3MwKSWyojND0IAx4JAhERS1lda2FbpUKGPCMmEQI2EgcWGQYaaFdRlk4AAAEBDgQ+A74FLQAnAIGxBmRES7AxUFhACg4BAAEiAQIDAkwbQAoOAQAFIgECAwJMWUuwMVBYQBsAAAMCAFkGBQIBAAMCAQNpAAAAAmEEAQIAAlEbQCMAAQUBhQAEAgSGAAADAgBZBgEFAAMCBQNpAAAAAmEAAgACUVlADgAAACcAJiMkJyMkBwgbK7EGAEQAFhcWFjMyNjc2MzIXFhUUBwYGIyImJyYmIyIGBwYjIicmNTQ3NjYzAhE5KCMwGiA9IQwRGRYVDjBtNSM5KCMwGiA9IQwRGRYVDjBtNQUjExIRECIiDBkWFxMRPj0TEhEQIiIMGRYXExE+PQACAT0EDwRPBXYAEQAjACaxBmREQBscEwoBBAABAUwDAQEAAYUCAQAAdicnJyUECBorsQYARAAVFAcFBiMiJyY1NDc3NjMyFwQVFAcFBiMiJyY1NDc3NjMyFwLTE/7yERQWHB4K7RcgHB8BqRP+8hEUFhweCu0XIBwfBUcdExHpDhETFg0K/RkTHB0TEekOERMWDQr9GRMAAAEAYv/2BGoDnAAhACVAIgQCAgAABV8GAQUFFk0DAQEBFwFOAAAAIQAfIzMTMyQHBxsrABYVFAYjIxEUBiMjIiY1ESERFAYjIyImNREjIiY1NDYzIQRNHR0iVyEpAikh/lAhKQIpIVciHR0iA4oDnCEnJyH9KyMeHiMC1f0rIx4eIwLVIScnIQABAKoCAgQiAooADQAfQBwCAQEAAAFXAgEBAQBfAAABAE8AAAANAAs0AwgXKwAWFRQGIyEiJjU0NjMhBAUdHSL9BiIdHSIC+gKKHyUlHx8lJR8AAf/iAgIE6gKKAA0AH0AcAgEBAAABVwIBAQEAXwAAAQBPAAAADQALNAMIFysAFhUUBiMhIiY1NDYzIQTNHR0i+3YiHR0iBIoCih8lJR8fJSUfAAEBpgLwAxQFGwAQAC21CgEBAAFMS7AgUFhACwABAAGGAAAAJABOG0AJAAABAIUAAQF2WbQmJgIIGCsAJjU0NxM2MzIWFRQHAwYjIwG5EwjcFjQdIwJlCSuvAvASDwwSAcErHBgFDP5CKAABAbUCygMjBPUAEAAttQoBAAEBTEuwF1BYQAsAAAEAhgABASQBThtACQABAAGFAAAAdlm0JiYCCBgrABYVFAcDBiMiJjU0NxM2MzMDEBMI3BU1HSMCZQkrrwT1Eg8MEv4/KxwYBQwBvij//wG1/vsDIwEmAQcBNgAA/DEACbEAAbj8MbA1KwD//wCxAvAECQUbACMBNf8LAAAAAwE1APUAAP//AMACygQYBPUAIwE2/wsAAAADATYA9QAA//8AwP77BBgBJgAjATcA9QAAAAMBN/8LAAAAAQEiARkDqgS5AB8AKUAmAwEBAQBfBAEAACVNAAICBWEGAQUFKAJOAAAAHwAeJCMjJCMHCBsrABYVFTMyFhUUBiMjERQGIyImNREjIiY1NDYzMzU0NjMCix/BIh0dIsEfJSUfwSIdHSLBHyUEuR0i3h8lJR/+RCIdHSIBvB8lJR/eIh0AAQEiAN0DqgS5ADEA30uwDFBYQCAIAQAHAQECAAFnBgECBQEDBAIDZwAEBAlhCgEJCSgEThtLsA5QWEAiBgECBQEDBAIDZwcBAQEAXwgBAAAlTQAEBAlhCgEJCSgEThtLsBBQWEAgCAEABwEBAgABZwYBAgUBAwQCA2cABAQJYQoBCQkoBE4bS7AVUFhAIgYBAgUBAwQCA2cHAQEBAF8IAQAAJU0ABAQJYQoBCQkoBE4bQCAIAQAHAQECAAFnBgECBQEDBAIDZwAEBAlhCgEJCSgETllZWVlAEgAAADEAMCQhJCMjJCEkIwsIHysAFhUVMzIWFRQGIyMVMzIWFRQGIyMVFAYjIiY1NSMiJjU0NjMzNSMiJjU0NjMzNTQ2MwKLH8EiHR0iwcEiHR0iwR8lJR/BIh0dIsHBIh0dIsEfJQS5HSKsHyUlH/YfJSUfrCIdHSKsHyUlH/YfJSUfrCIdAAEBfgFjA04DVQANAB9AHAIBAQAAAVkCAQEBAGEAAAEAUQAAAA0ADCUDCBcrABYVERQGIyImNRE0NjMC4W1te3ttbXsDVS40/tI0Li40AS40LgADAG3/9gRfAOYADQAbACkAL0AsCAUHAwYFAQEAYQQCAgAAIwBOHBwODgAAHCkcKCMhDhsOGhUTAA0ADCUJCBcrJBYVFRQGIyImNTU0NjMgFhUVFAYjIiY1NTQ2MyAWFRUUBiMiJjU1NDYzAQ4xMTg4MTE4AcgxMTg4MTE4AcgxMTg4MTE45hkchhwZGRyGHBkZHIYcGRkchhwZGRyGHBkZHIYcGQAABgAy/+oGPAS5AA8AIQAxAE0AXQBtAH1AekoBCwg8AQYDAkwAAgEFAQIFgAADCgYKAwaAAAQAAAgEAGkQCQIIEg0RAwsKCAtpDwEFBQFhDgEBAShNDAEKCgZhBwEGBikGTl5eTk4yMiIiAABebV5sZmROXU5cVlQyTTJMSEZAPjo4IjEiMCooGxkSEAAPAA4mEwgXKwAWFhUUBgYjIiYmNTQ2NjMEMzIXFhUUBwEGIyInJjU0NwEkBgYVFBYWMzI2NjU0JiYjABYWFRQGBiMiJicGBiMiJiY1NDY2MzIWFzY2MwQGBhUUFhYzMjY2NTQmJiMgBgYVFBYWMzI2NjU0JiYjAY5+Skp+Skp+Skp+SgK9FxoYGRj8lhYXGhgZGANq/TJCJydCJydCJydCJwQwfkpKfkpAbSQlbEBKfkpKfkpAbCUkbUD+N0InJ0InJ0InJ0InAXtCJydCJydCJydCJwS5Sn5KSn5KSn5KSn5KgBsbFhcX/MIWGxsWGBYDPhQnQicnQicnQicnQif910p+Skp+SjgwMTdKfkpKfko4MTE4gidCJydCJydCJydCJydCJydCJydCJydCJwAAAQGJALYDPwOyABcAGkAXCAUCAQABTAABAQBhAAAAKwFOLCACCBgrADMyFxYVFAcDExYVFAcGIyInASY1NDcBAtAUHCAfDvb2Dh8gHBQM/s4JCQEyA7IcGxgQEP7x/vEQEBgbHA8BVwsNDwkBVwABAY0AtgNDA7IAFwAbQBgXDQoDAAEBTAAAAAFhAAEBKwBOLCUCCBgrABUUBwEGIyInJjU0NxMDJjU0NzYzMhcBA0MJ/s4MFBwgHw729g4fIBwUDAEyAkMPDQv+qQ8cGxgQEAEPAQ8QEBgbHA/+qQAAAQBvAMQEXQNWABEAF0AUBQEBAAFMAAABAIUAAQF2GBECCBgrADMyFxYVFAcBBiMiJyY1NDcBBBoJFxUODvxqBwkXFQ4OA5YDVhwSFBMI/c8EHBQSEgkCMQAAAgA8AuwE+QUqACMAOgJktyASCgMBBQFMS7AKUFhAJwABBQAFAQCABgICAACECggJBAQDBQUDWQoICQQEAwMFYQcBBQMFURtLsAxQWEAoCQQCAwgDhQABBQAFAQCABgICAACECgEIBQUIVwoBCAgFYQcBBQgFURtLsA1QWEAnAAEFAAUBAIAGAgIAAIQKCAkEBAMFBQNZCggJBAQDAwVhBwEFAwVRG0uwD1BYQCgJBAIDCAOFAAEFAAUBAIAGAgIAAIQKAQgFBQhXCgEICAVhBwEFCAVRG0uwEFBYQCcAAQUABQEAgAYCAgAAhAoICQQEAwUFA1kKCAkEBAMDBWEHAQUDBVEbS7ASUFhAKAkEAgMIA4UAAQUABQEAgAYCAgAAhAoBCAUFCFcKAQgIBWEHAQUIBVEbS7ATUFhAJwABBQAFAQCABgICAACECggJBAQDBQUDWQoICQQEAwMFYQcBBQMFURtLsBVQWEAoCQQCAwgDhQABBQAFAQCABgICAACECgEIBQUIVwoBCAgFYQcBBQgFURtLsBZQWEAnAAEFAAUBAIAGAgIAAIQKCAkEBAMFBQNZCggJBAQDAwVhBwEFAwVRG0uwGFBYQCgJBAIDCAOFAAEFAAUBAIAGAgIAAIQKAQgFBQhXCgEICAVhBwEFCAVRG0uwGVBYQCcAAQUABQEAgAYCAgAAhAoICQQEAwUFA1kKCAkEBAMDBWEHAQUDBVEbQCgJBAIDCAOFAAEFAAUBAIAGAgIAAIQKAQgFBQhXCgEICAVhBwEFCAVRWVlZWVlZWVlZWVlAGSQkAAAkOiQ4NDIvLSooACMAIiUmJiULBhorABYXExYGIyImJwMHBgYjIiYnJwMGBiMiJjcTNjYzMhcTEzYzBBYVFAYjIxEUBiMiJjURIyImNTQ2MyEEtiECHgIZIiIbAhJdDCYWFicLXhECGyIiGQIeAiEiMgyOjgwy/YcdHSKBHCIiHIEiHR0iAX4FKh4j/kQjHh0kAQPAFxkZF8D+/SQdHiMBvCMeGv7VASsaChshIRr+hCMeHiMBfBohIRsAAQBRAAAEewS5ADUAKUAmAAICBWEGAQUFFE0EAQAAAV8DAQEBFQFOAAAANQA0JDoqNCYHBxsrABYSFRQGBzMyFhUUBiMhIiY1NDc2NjU0JiYjIgYGFRQWFxYVFAYjISImNTQ2MzMmJjU0EjYzAwLvg4JnsSIdHSL+siIdEYePW6dubqdbj4cRHSL+siIdHSKxZ4KD75wEuZL+9q6U+1AhJychJCo0DFbxmoXGa2vGhZrxVgw0KiQhJychUPuUrgEKkgACAKf/6QQZBLkAJgAzAElARjAUAgUGAUwAAwIBAgMBgAcBBAACAwQCaQABCAEGBQEGaQAFAAAFWQAFBQBhAAAFAFEnJwAAJzMnMi4sACYAJTEmJigJBhorABYWFRQCBwYGIyImJjU0NjYzMhYXNjU0JiMiBwYjIiYnJjU0NzYzAgYGFRQWMzY2NyYmIwLzt288NkPJjWujWWe0cHGoKheIg0BTBQoQGgwJH1tqk3I+cFxtlzETiWcEuWXSnHD+8m+KhlyjZnW1Y2tiblicrhcCGR4XECEOJ/2OPnFLXnEBb3NlgQACAJMAAAQ4BLkAEgAWACBAHQMBAQEUTQACAgBfAAAAFQBOAAAVFAASABE3BAcXKwAWFwEWFRQGIyEiJjU0NwE2NjMHASEBApExDAFlBR0i/NkiHQYBaQwyKQL+2gJK/t4EuR8i+/IPFyUfHyUUEgQOIh+7/IoDdgABAMP/9gQJBKMAGQAnQCQCAQABAIYEAQMBAQNXBAEDAwFfAAEDAU8AAAAZABczEzUFBhkrABYVERQGIyMiJjURIREUBiMjIiY1ETQ2MyED7B0hKQIpIf3mISkCKSEdIgLIBKMfJfvYIx4eIwPc/CQjHh4jBCglHwABAKUAAAQQBKMAIQAuQCsaAQEAAUwEAQMAAAEDAGcAAQICAVcAAQECXwACAQJPAAAAIQAfNCYkBQYZKwAWFRQGIyEBFhUUBwEhMhYVFAYjISImNTQ3AQEmNTQ2MyED3x0dIv3VAUgLC/6kAlMiHR0i/RUiHxABhf6LDB8iAsMEoyEnJyH+aw4QEQ7+TyEnJyEfJSAVAeYBzw4jJR8AAAEAqgICBCICigANAB9AHAIBAQAAAVcCAQEBAF8AAAEATwAAAA0ACzQDBhcrABYVFAYjISImNTQ2MyEEBR0dIv0GIh0dIgL6AoofJSUfHyUlHwABAHT/6gRQBK0AHgAqQCcYAQABAUwAAwIDhQAAAQCGAAIBAQJXAAICAWEAAQIBURY0IycEBhorABYVFAcBBgYjIiYnAyMiJjU0NjMzMhYXEwE2NjMyFwQ1Gwb+hQ0yKyszDsGFIh0dIsAXGwe1AVgIGhQOGgSbGhMNEvvcIx4fIgHTIScnIQ8R/kgDyRgWCAADABwBJQSwA2cAGwAnADMASEBFKiQYCgQEBQFMCAMCAgoHCQMFBAIFaQYBBAAABFkGAQQEAGEBAQAEAFEoKBwcAAAoMygyLiwcJxwmIiAAGwAaJiQmCwYZKwAWFhUUBgYjIiYnBgYjIiYmNTQ2NjMyFhc2NjMEBhUUFjMyNjcmJiMgBgcWFjMyNjU0JiMD54BJSYBPZ4pBQYpnT4BJSYBPZ4tAQItn/V1PT0JJajY3aUkCFWs1NWtJQk9PQgNnTIRRUYRMY1lZY0yEUVGETGNaWmOGWENDWFBLS1BRSktQWENDWAABAAX+ZgTHBe0AKwA5QDYAAAEDAQADgAADBAEDBH4GAQUAAQAFAWkABAICBFkABAQCYQACBAJRAAAAKwAqIxgmIxgHBhsrABYXFhYVFAcGIyInJiMiBhURFAYGIyImJyYmNTQ3NjMyFxYzMjY1ETQ2NjMD048/FBIGEiIEDoRraXJZpXFJjz8UEgYSIgQOhGtpclmlcQXtHxsIGBIPFDoEM4+D+7V8uGQfGwgYEg8UOgQzj4MES3y4ZP//AJYA5QQ2A6cAJwBhAAAAyAEHAGEAAP84ABGxAAGwyLA1K7EBAbj/OLA1KwAAAQCqAEQEIgRIADcAgEAKKgEFBg4BAQACTEuwC1BYQCsABgUFBnAAAQAAAXEHAQUIAQQDBQRoCgkCAwAAA1cKCQIDAwBfAgEAAwBPG0ApAAYFBoUAAQABhgcBBQgBBAMFBGgKCQIDAAADVwoJAgMDAF8CAQADAE9ZQBIAAAA3ADYkJiMkISQmIyQLBh8rABYVFAYjIQcGBiMiJyY1NDc3IyImNTQ2MzMTISImNTQ2MyE3NjYzMhcWFRQHBzMyFhUUBiMjAyEEBR0dIv49fAsWDhMZJw5TmiIdHSLgnP6EIh0dIgHCfQsWDhMZJw5TmiIdHSLhmwF8AcIfJSUf0xIRDxYcEReNHyUlHwEIHyUlH9MSEQ8WHBEXjR8lJR/++AAAAgCqAHIEIgRnABkAJwAyQC8LCAIBAAFMAAABAIUAAQMBhQQBAwICA1cEAQMDAl8AAgMCTxoaGicaJT8cIAUGGSsAMzIXFhUUBwUFFhUUBwYjIicBJiY1NDY3ARIWFRQGIyEiJjU0NjMhA9IQJRIIMP2bAmUwCBIlEBL9HhoaGhoC4kUdHSL9BiIdHSIC+gRnMBMSJhHo6BEmEhMwBwEiCiQdHSQKASL8mh8lJR8fJSUfAAIAqgByBCIEZwAZACcAMkAvEg8CAAEBTAABAAGFAAADAIUEAQMCAgNXBAEDAwJfAAIDAk8aGhonGiU4HCcFBhkrABYVFAYHAQYjIicmNTQ3JSUmNTQ3NjMyFwESFhUUBiMhIiY1NDYzIQQIGhoa/R4SECUSCDACZf2bMAgSJRASAuIXHR0i/QYiHR0iAvoDNCQdHSQK/t4HMBMSJhHo6BEmEhMwB/7e/bwfJSUfHyUlHwACAM3/6gP+BLkAFwAbAB9AHBsaGQMAAQFMAgEBAAGFAAAAdgAAABcAFioDBhcrABYXARYVFAcBBgYjIiYnASY1NDcBNjYzAxMTAwKPLRQBJggI/toULSkpLRT+2QgIAScULSn29vb2BLkeI/33DRERDf34Ix4eIwIIEA4OEAIJIx79mP5NAbMBtAABACoAAASfBSUAOQFLtSgBCAYBTEuwDFBYQCoABwgFCAcFgAkBBQQBAgEFAmcACAgGYQAGBiRNCwoCAQEAYQMBAAAjAE4bS7AOUFhALAAHCAUIBwWAAAgIBmEABgYkTQQBAgIFXwkBBQUlTQsKAgEBAGEDAQAAIwBOG0uwEFBYQCoABwgFCAcFgAkBBQQBAgEFAmcACAgGYQAGBiRNCwoCAQEAYQMBAAAjAE4bS7AVUFhALAAHCAUIBwWAAAgIBmEABgYkTQQBAgIFXwkBBQUlTQsKAgEBAGEDAQAAIwBOG0uwIFBYQCoABwgFCAcFgAkBBQQBAgEFAmcACAgGYQAGBiRNCwoCAQEAYQMBAAAjAE4bQCgABwgFCAcFgAAGAAgHBghpCQEFBAECAQUCZwsKAgEBAGEDAQAAIwBOWVlZWVlAFAAAADkAODUzIxYjJCMzESQ0DAgfKyQWFRQGIyEiJjU0NjMzESERFAYjIyImNREjIiY1NDYzMzU0NjMyFxYVFAcGIyInJiMiFRUhMhYVETMEgh0dIv47Ih0dIpj+Xx0iGCIdkyIdHSKTuaeGhDADDiQLDX9uygH4Ih2XiB8lJR8fJSUfAlr9YiUfHyUCnh8lJR9noLQzEjALDzkFMc9aHyX9YgABADkAAASUBSUAOAEZtQ4BAwIBTEuwDFBYQCIHAQMGAQQBAwRnAAICCGEACAgkTQoJAgEBAGEFAQAAIwBOG0uwDlBYQCQAAgIIYQAICCRNBgEEBANfBwEDAyVNCgkCAQEAYQUBAAAjAE4bS7AQUFhAIgcBAwYBBAEDBGcAAgIIYQAICCRNCgkCAQEAYQUBAAAjAE4bS7AVUFhAJAACAghhAAgIJE0GAQQEA18HAQMDJU0KCQIBAQBhBQEAACMAThtLsCBQWEAiBwEDBgEEAQMEZwACAghhAAgIJE0KCQIBAQBhBQEAACMAThtAIAAIAAIDCAJpBwEDBgEEAQMEZwoJAgEBAGEFAQAAIwBOWVlZWVlAEgAAADgANyMkIzMkIiIkNAsIHyskFhUUBiMhIiY1NDYzMxEmIyIVFTMyFhUUBiMjERQGIyMiJjURIyImNTQ2MzM1NDYzMhYXFhYVETMEdx0dIv6AIh0dInd6Z8rsIh0dIuwdIhgiHZMiHR0ik7mnWZxLHhlziB8lJR8fJSUfA+Moz1ofJSUf/WIlHx8lAp4fJSUfZ6C0Jx0MJB779QABAHr+KARSBKMASgCstSABBQcBTEuwClBYQD4MAQABAgEAAoAABAMIBwRyAAgGAwgGfgAGBwMGB34ABwAFBwVmCwEBAQ1fDgENDSJNCgECAgNfCQEDAyMDThtAPwwBAAECAQACgAAEAwgDBAiAAAgGAwgGfgAGBwMGB34ABwAFBwVmCwEBAQ1fDgENDSJNCgECAgNfCQEDAyMDTllAGgAAAEoASENBPj08OjY0JCQXJBEkIRMlDwgfKwAWFREUBiMiJjURIREzMhYVFAYjIxU2FhUUBiMiJicmNTQ3NjMyFxYWMzI2NTQmIwciJjU1IyImNTQ2MzMRIREUBiMiJjURNDYzIQQ1HSIpKSL+9ewiHR0i9WVmfHlEgDMXCBEdCAUrZy8zOjY+Jw8T9SIdHSLs/vUiKSkiHSIDWgSjHyX+hyMeHiMBNfxtHyUlH3EBXktXaBgYChkOFS0CEBYhHyEgARUXsR8lJR8Dk/7LIx4eIwF5JR8AAAEAdf4oBEgEuQBOAPFACicBAAsTAQIEAkxLsApQWEA9AAwGCwYMC4AAAQAFBAFyAAUDAAVwAAMEAAMEfgkBBwoBBgwHBmcABAACBAJmAAgIKE0ACwsAYQAAACkAThtLsAxQWEA+AAwGCwYMC4AAAQAFAAEFgAAFAwAFcAADBAADBH4JAQcKAQYMBwZnAAQAAgQCZgAICChNAAsLAGEAAAApAE4bQD8ADAYLBgwLgAABAAUAAQWAAAUDAAUDfgADBAADBH4JAQcKAQYMBwZnAAQAAgQCZgAICChNAAsLAGEAAAApAE5ZWUAUTUtIRkNBPTsjJCgkJBckEhUNCB8rJBUUBwYGIyMVNhYVFAYjIiYnJjU0NzYzMhcWFjMyNjU0JiMHIiY1NSYmNREjIiY1NDYzMxE0NjMyFhURITIWFRQGIyERFBYzMjY3NjMyFwRIIU7AUwdlZnx5RIAzFwgRHQgFK2cvMzo2PicPE2FbyyIdHSLLIikpIgGbIh0dIv5lT2JDlEUOESIYoRMgFDE/WwFeS1doGBgKGQ4VLQIQFiEfISABFReuIKeHAXkfJSUfASwjHh4j/tQfJSUf/pRyajYtCi7//wBQAAAETAZqACIAKAAAAQcBLAAAAQ4ACbEBAbgBDrA1KwD//wDIAAAEBAZqACIALAAAAQcBLAAAAQ4ACbEBAbgBDrA1KwD//wDIAAAEBAY7ACcBMAAAAQ4BAgAsAAAACbEAAbgBDrA1KwAAAgBQAAAETASjACQANABDQEAAAgcBBwIBgAoBCAAHAggHaQUBAAAGXwkBBgYiTQQBAQEDYAADAyMDTiUlAAAlNCUzLSsAJAAiISQ1IxEkCwgcKwAWFRQGIyMRIRE0NjMyFhURFAYjISImNTQ2MzMRIyImNTQ2MyESFhYVFAYGIyImJjU0NjYzAtsdHSLyAe8iKSkiHSL8giIdHSKioiIdHSICKlVBJiZBJiZBJiZBJgSjHyUlH/xtAUkjHh4j/nMlHx8lJR8Dkx8lJR/+sCZBJiZBJiZBJiZBJgABAEb+ZgSGBKMARABSQE86HAIEABsBBQQPAQEDA0wAAgUDBQIDgAkHAgAACF8LCgIICCJNBgEEBAVfAAUFI00AAwMBYQABAS0BTgAAAEQAQj48NCEkNCYjFyMkDAgfKwAWFRQGIyMRFAYjIiYnJjU0NzYzMhcWMzI2NTUBIxEzMhYVFAYjISImNTQ2MzMRIyImNTQ2MzMyFhcBMxEjIiY1NDYzIQRpHR0iOY2EOng1JwsVIg8NYFE/P/3sBI0iHR0i/p4iHR0iQ00iHR0i4BYbCAHaBHkiHR0iAUQEox8lJR/7XoaNGxcRIxAbLwYoSlN1A7b8yB8lJR8fJSUfA5MfJSUfDg78sALkHyUlH///AFj/6gR0BmoAIgAyAAABBwEsAAABDgAJsQIBuAEOsDUrAAABAHoAAARSBKMAOwBEQEEKAQABAgEAAoAIAQIHAQMEAgNnCQEBAQtfDAELCyJNBgEEBAVfAAUFIwVOAAAAOwA5NDIvLiQhJDQhJCETJQ0IHysAFhURFAYjIiY1ESERMzIWFRQGIyMRMzIWFRQGIyEiJjU0NjMzESMiJjU0NjMzESERFAYjIiY1ETQ2MyEENR0iKSki/vXOIh0dIs7sIh0dIv2SIh0dIuzOIh0dIs7+9SIpKSIdIgNaBKMfJf6HIx4eIwE1/i8fJSUf/sYfJSUfHyUlHwE6HyUlHwHR/ssjHh4jAXklHwD//wBG/+oEhgY7ACcBMAAAAQ4BAgA4AAAACbEAAbgBDrA1KwD////2/+oE1gaVACIAOgAAAQcAcwAKAQ4ACbEBAbgBDrA1KwD////2/+oE1gaCACIAOgAAAQcBKgAAAQ4ACbEBAbgBDrA1KwD////2/+oE1gZhACIAOgAAAQcAaQAAAQ4ACbEBArgBDrA1KwD////2/+oE1gaVACIAOgAAAQcAQ//2AQ4ACbEBAbgBDrA1KwD//wA8AAAEkAaCACIAPAAAAQcBKgAKAQ4ACbEBAbgBDrA1KwD//wA8AAAEkAaVACIAPAAAAQcAQwAKAQ4ACbEBAbgBDrA1KwD//wCS/+oEQwVcACIASAAAAAIBLBQAAAEAuwAABEkDnAAbACdAJAADAwRfBQEEBCVNAgEAAAFfAAEBIwFOAAAAGwAZISQ0IwYIGisAFhURITIWFRQGIyEiJjU0NjMhESMiJjU0NjMhAqwdAUEiHR0i/PAiHR0iATn9Ih0dIgFUA5wfJf0wHyUlHx8lJR8CjB8lJR8A//8AuwAABEkFXAAiAWUAAAACASz2AP//ALsAAARJBS0AIgFlAAAAAgEw7AD//wCTAAAELQUgACIAT+IAAQcBLQFo/gwACbEBAbj+DLA1KwAAAQBh/mYEFAOyAD8A20uwMVBYQAo8AQQDDAEAAgJMG0AKPAEEBwwBAAICTFlLsBdQWEArAAEFAgUBAoAHAQMDCGEKCQIICCVNBgEEBAVfAAUFI00AAgIAYQAAAC0AThtLsDFQWEA1AAEFAgUBAoAHAQMDCWEKAQkJK00HAQMDCF8ACAglTQYBBAQFXwAFBSNNAAICAGEAAAAtAE4bQDMAAQUCBQECgAADAwlhCgEJCStNAAcHCF8ACAglTQYBBAQFXwAFBSNNAAICAGEAAAAtAE5ZWUASAAAAPwA+NCEkNCQlIxcmCwgfKwAWFhURFAYjIiYnJjU0NzYzMhcWMzI2NRE0JiMiBgYVETMyFhUUBiMhIiY1NDYzMxEjIiY1NDYzMzIWFRU2NjMDRoZIjYQ6eDUnCxUiDw1gUT87UlBVk1hcIh0dIv68Ih0dIlJmIh0dIrMiHUKxZgOyT5Rj/Q2GjRsXESMQGy8GKEpTAshZaGKsav7iHyUlHx8lJR8CjB8lJR8fJXhmbP//AIT/6gRIBVwAIgBSAAAAAgEsAAAAAQB1/+oESAS5AD8AQUA+AAsBCgELCoAGAQQHAQMCBANnCAECCQEBCwIBaQAFBShNAAoKAGEAAAApAE4+PDk3NDIhJCMjJCEkIyUMCB8rJBUUBwYGIyImNTUjIiY1NDYzMzUjIiY1NDYzMxE0NjMyFhURITIWFRQGIyEVITIWFRQGIyEVFBYzMjY3NjMyFwRIIU7AU6qdjCIdHSKMyyIdHSLLIikpIgGbIh0dIv5lARAiHR0i/vBPYkOURQ4RIhihEyAUMT+xsG0fJSUfhB8lJR8BLCMeHiP+1B8lJR+EHyUlH2ByajYtCi7//wBI/+oEeAUtACIAWAAAAAIBMOQA////9v/qBNYFhwAiAFoAAAACAHMUAP////b/6gTWBXQAIgBaAAAAAgEqAAD////2/+oE1gVTACIAWgAAAAIAaQAA////9v/qBNYFhwAiAFoAAAACAEPsAP//ADL+ZQSaBXQAIgBcAAAAAgEqEAD//wAy/mUEmgWHACIAXAAAAAIAQwAAAAIA8gHbA8QFNgAeACEAMkAvIQEABBcBAQACTAUBAAMBAQIAAWkGAQQEMk0AAgIzAk4AACAfAB4AHSMjJCMHCRorABYVETMyFhUUBiMjFRQGIyImNTUhIiY1NDY3ATY2MwEhEwLxNm0YGBgYbR8kJCD+iBkdCAkBexMkGv7OAQMGBTYgGP5CHSEhHrgYGBgYuCcnERgMAcQXFf4KAT8AAQDcAXUD8AH9AA0AH0AcAgEBAAABVwIBAQEAXwAAAQBPAAAADQALNAMIFysAFhUUBiMhIiY1NDYzIQPTHR0i/WoiHR0iApYB/R8lJR8fJSUf//8AqgICBCICigACABAAAP//AJkAtgQvA7IAIwFA/xAAAAADAUAA8AAA//8AnQC2BDMDsgAjAUH/EAAAAAMBQQDwAAAAAQBQ/+oEWQS5AFYAZEBhUgEBDQFMAAcFBgUHBoAMAQILAQMEAgNpCgEECQEFBwQFaQABAQ1hDw4CDQ0oTQAAAA1hDw4CDQ0oTQAGBghhAAgIKQhOAAAAVgBVUE5MSkZEQD46OCcjIiQkJCIlJRAIHysAFhURFAYjIiY1NCYmIyIGByEyFhUUBiMhBhUUFyEyFhUUBiMhFhYzMjY3NjMyFxYVFAcGBiMiJicjIiY1NDYzMyY1NDcjIiY1NDYzMzY2MzIWFzU0NjMEJCIiKSkiO3ZTZo8iASIiHR0i/scEAwE6Ih0dIv7aH4poW6hIERQeFxIfXs5sq94pYSIdHSJQAwRRIh0dImQr4KRUijAiKQS5HiP+tiMeHiNDcUN9dB8lJR8pNygmHyUlH3iAOTgOJx4XHhZBQtG7HyUlHyQrOyQfJSUft85AOjkjHgABACgAAARWBKMAPwCJS7AKUFhAMQAAAQIBAHIAAgADBAIDZwoBBAkBBQYEBWcLAQEBDF8NAQwMIk0IAQYGB18ABwcjB04bQDIAAAECAQACgAACAAMEAgNnCgEECQEFBgQFZwsBAQEMXw0BDAwiTQgBBgYHXwAHByMHTllAGAAAAD8APTk3NjQwLiQ0ISQhJCETJQ4IHysAFhURFAYjIiY1NSERITIWFRQGIyEVITIWFRQGIyEVMzIWFRQGIyEiJjU0NjMzNSMiJjU0NjMzESMiJjU0NjMhBDkdIikpIv3pAVkiHR0i/qcBuCIdHSL+SOgiHR0i/f4iHR0ihKwiHR0irIQiHR0iA4gEox8l/vgjHh4jxP6hHyUlH5AfJSUflB8lJR8fJSUflB8lJR8Cdx8lJR8AAAP/4v/qBOoEowBIAEsATgCKtQ0BAAQBTEuwGVBYQCkRDgoIBAQQDwMDAAEEAGkNCwcDBQUGXwwBBgYiTQAJCSVNAgEBASkBThtALAAJBQQFCQSAEQ4KCAQEEA8DAwABBABpDQsHAwUFBl8MAQYGIk0CAQEBKQFOWUAgAABOTUtKAEgAR0ZEQD05NzY1MjARJDQhJCMkIyQSCB8rABYVFAYjIwMGBiMiJwMDBiMiJicDIyImNTQ2MzMDIyImNTQ2MyEyFhUUBiMjEzM3NjMyFhcXMxMjIiY1NDYzITIWFRQGIyMDMwETIwETIwTNHR0ihk4FKShSFLm7FVMnKQRLfyIdHSJtKDEiHR0iAVgiHR0ikibeHA46ICMGHt4nfCIdHSIBRCIdHSI2KXP8tHShAjUvoQLuHyUlH/3FJB1BAkX9u0EeIwI7HyUlHwEtHyUlHx8lJR/+01gvFBRfAS0fJSUfHyUlH/7T/gwBbP6UAWwAAQDD/qEECQYuABEAHkAbCwICAAEBTAIBAQABhQAAAHYAAAARABAnAwYXKwAWFRQHAQYGIyImNTQ3ATY2MwPWMwP9WgYjGCkzAwKmBiMYBi4dGQcJ+N0QFB4YBwkHIxETAP//ANr+cgP8A6YAAgB0AAAAAQGeAqkDSwSsABIAGkAXCgECAAEBTAAAAQCGAAEBIgFOKCUCCBgrABUUBwEGIyInJjU0NxM2NjMyFwNLCf6wDBATEBUG9goTDhkuBGkfDAv+gw0NEBkMCgGXEBAc//8A1gKpBBMErAAjAX7/OAAAAAMBfgDIAAAAAf0J/fL+BP9uAA8ALbEGZERAIgoCAgEAAUwAAAEBAFkAAAABYQIBAQABUQAAAA8ADjYDCBcrsQYARAAmNTQ3EzYzMzIVFAcDBiP9KyICPwgidBwGdQ8s/fIYFQQMAR8gGgwN/t0mAAAB/Qn98v4E/24ADwAlQCIKAgIBAAFMAAABAQBZAAAAAWECAQEAAVEAAAAPAA42AwcXKwAmNTQ3EzYzMzIVFAcDBiP9KyICPwgidBwGdQ8s/fIYFQQMAR8gGgwN/t0mAP//AaEFHAOTBpUBBwBzAAABDgAJsQABuAEOsDUrAP//AR4FPQOuBmoBBwEsAAABDgAJsQABuAEOsDUrAAABAPoDXgIJBSAAEAA0tQoBAAEBTEuwIFBYQAsAAAABYQABASQAThtAEAABAAABWQABAQBhAAABAFFZtCYmAggYKwAWFRQHAwYjIiY1NDcTNjMzAfsOBYYNPRweAlIIInYFIA8MCQ/+lSQWFAQKAWogAP//AScFHwOlBoQBBwErAAABDgAJsQABuAEOsDUrAP//AV/+KANiABwAAgB3AAD//wEnBR0DpQaCAQcBKgAAAQ4ACbEAAbgBDrA1KwD//wE1BV0DlwZhAQcAaQAAAQ4ACbEAArgBDrA1KwD//wIHBV0CxQZhAQcBLQAAAQ4ACbEAAbgBDrA1KwD//wE5BRwDKwaVAQcAQwAAAQ4ACbEAAbgBDrA1KwD//wE9BR0ETwaEAQcBMQAAAQ4ACbEAArgBDrA1KwD//wEiBWADqgXwAQcAbgAAAQ4ACbEAAbgBDrA1KwD//wGb/igDKQAcAAIBLwAA//8BcAU3A1wHIwEHAS4AAAEOAAmxAAK4AQ6wNSsA//8BDgVMA74GOwEHATAAAAEOAAmxAAG4AQ6wNSsAAAAAAQAAAZAAcAAGAGUABAACACwAWgCNAAAApg4VAAIAAwAAAIgAiACIAIgA4gDvAY4CXwMJA+cEHQRhBKUFIgVpBZcFwAXlBiIGbAa1BzEHrAgFCHYI2wkxCasKDwpQCpYK1AsZC1cL4QyMDPMNWA3DDhAOqg81D64QKhBvEMIRWxGqEigSpBLuE0YUDRSOFSEVeBXOFiIWohckF4kX3hgZGFYYkRjZGQIZLxn0GrIbHBvaHDgcux2ZHiEeLB44HssfGh/fIIIgyiF1IiAinyMzI5AkHiRyJOElYSXCJkMmyib7J4En4Sg7KM0pnyopKsQrGivYLBwsvy07LW4uBy40LoEu4i9dL9YwBjBiMKkwuDEmMW0xtDJiM2Q0ezUFNRc1KTU7NU01XzVxNiI25jb4Nwo3HDcuN0A3UjdkN3Y34zf1OAc4GTgrOD04TzijOTQ5RjlYOWo5fDmOOfY6rTq4OsM6zjrZOuQ67zuNPFE8XDxnPHI8fTyIPJM8njypPV89aj11PYA9iz2WPaE+AD6MPpc+oj6tPrg+wz9VP2A/cj99P48/mkBGQW9BgUGMQZ5BqUG7QcZB2EHjQfVC4UNPRFhEakR1RIdEkkWDRgZGGEYjRjVGQEZSRl1Gb0Z6RoZHlUenR7lIX0khSTNJPknESoVKl0tWTCdMOUxETFBMXExuTIBMjEyYTKpMtk0wTbBNwk3NTdlN5U33TgJOFE4fTjFOPE7MT05PYE9rT3dPg0+VT6BPsk+9T89P2lD2UhNSJVIwUjxSSFJaUmxSflKJUptSplK4UsNS1VLgU3dUblSAVJJUnVSvVLpUzFTdVXNVf1WLVddWE1ZPVpVWwVcJV1hX1VghWGVYjli3WOxZIVkwWT1ZSllXWZlaSVpyWsVbo1vaXBJcP13LXixenl7aXxZfZV+OX9ZgSGClYLxhTGGlYf5iQ2M2ZA5kyWWrZb1lz2XhZk5m1WbnZ1tnbWd/Z5Fno2e1Z8dn2WfkaCNoLmg5aEtpD2kaaY9pmmmlabBpu2nGadFp3GoralRqXGppanZqdmsca7ZsbmyfbKds1mzjbRdtR21WbWVtnm2tbbVtxG3TbeJt8W4Abg9uF24mbjUAAAABAAAAAwSbpc6iM18PPPUADwgAAAAAANmcg+EAAAAA2ftJR/0J/fIMiwcjAAAABwACAAAAAAAABMwAlQTMAAAEzAAABMwAAATMAekEzAD/BMwAPATMALMEzAAyBMwAkwTMAeUEzAEpBMwBawTMAL8EzACqBMwBdATMAKoEzAHfBMwAxgTMALwEzADcBMwAuwTMAL8EzACTBMwAvATMAMkEzADlBMwAzgTMAMAEzAHfBMwBiATMAH0EzACqBMwArwTMAP4EzAAyBMwACgTMAFAEzAB2BMwAUATMAFAEzABQBMwAYgTMAFAEzADIBMwAcwTMAFAEzABQBMwAHgTMAEYEzABYBMwAUATMAFgEzABQBMwAngTMAHoEzABGBMwACgTM//YEzAAyBMwAPATMAKcEzAFKBMwAxgTMAWYEzADoBMz/5ATMATkEzACHBMwAJQTMAH8EzAB/BMwAkgTMALsEzAB/BMwATQTMALsEzAC+BMwAQwTMALEEzP/8BMwATQTMAIQEzAAlBMwAfwTMAJMEzACzBMwAdQTMAEgEzAAyBMz/9gTMAEYEzAAyBMwAsgTMALEEzAIbBMwA7gTMAJYEzAHpBMwAfwTMAMsEzABvBMwAPATMAhsEzACzBMwBNQTMACQEzADyBMwAjATMAIQEzAEiBMwA9gTMAKoEzAEgBMwBLgTMAaEEzADaBMwAgwTMAd8EzAFfBMwBNATMAOsEzP/7BMz/+wTMABQEzAEGBMwACgTMAAoEzAAKBMwACgTMAAoEzAAKBMwAAATMAHYEzABQBMwAUATMAFAEzABQBMwAyATMAMgEzADIBMwAyATMADIEzABGBMwAWATMAFgEzABYBMwAWATMAFgEzADpBMwAWATMAEYEzABGBMwARgTMAEYEzAA8BMwAbgTMACgEzACHBMwAhwTMAIcEzACHBMwAhwTMAIcEzABLBMwAfwTMAJIEzACSBMwAkgTMAJIEzAC7BMwAuwTMALsEzAC7BMwAjATMAE0EzACEBMwAhATMAIQEzACEBMwAhATMAKoEzABUBMwASATMAEgEzABIBMwASATMADIEzAAlBMwAMgTMAAoEzACHBMwACgTMAIcEzAAKBMwAhwTMAHYEzAB/BMwAdgTMAH8EzAB2BMwAfwTMAHYEzAB/BMwAUATMAH8EzABQBMwAlQTMAFAEzACSBMwAUATMAJIEzABQBMwAkgTMAFAEzACSBMwAYgTMAH8EzABiBMwAfwTMAGIEzAB/BMwAYgTMAH8EzABQBMwATQTMAB4EzAAU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AS4AAwABBAkABQAaAVgAAwABBAkABgAoAXIAAwABBAkACAAkAZoAAwABBAkACQBKAb4AAwABBAkACwA2AggAAwABBAkADAAsAj4AAwABBAkADQEgAmoAAwABBAkADgA0A4oAQwBvAHAAeQByAGkAZwBoAHQAIAAyADAAMQA1ACAAVABoAGUAIABDAG8AdQByAGkAZQByACAAUAByAGkAbQBlACAAUAByAG8AagBlAGMAdAAgAEEAdQB0AGgAbwByAHMAIAAoAGgAdAB0AHAAcwA6AC8ALwBnAGkAdABoAHUAYgAuAGMAbwBtAC8AcQB1AG8AdABlAHUAbgBxAHUAbwB0AGUAYQBwAHAAcwAvAEMAbwB1AHIAaQBlAHIAUAByAGkAbQBlACkALgBDAG8AdQByAGkAZQByACAAUAByAGkAbQBlAFIAZQBnAHUAbABhAHIAMwAuADAAMQA4ADsAUQBVAFEAQQA7AEMAbwB1AHIAaQBlAHIAUAByAGkAbQBlAC0AUgBlAGcAdQBsAGEAcgBDAG8AdQByAGkAZQByACAAUAByAGkAbQBlACAAUgBlAGcAdQBsAGEAcgBWAGUAcgBzAGkAbwBuACAAMwAuADAAMQA4AEMAbwB1AHIAaQBlAHIAUAByAGkAbQBlAC0AUgBlAGcAdQBsAGEAcgBRAHUAbwB0AGUALQBVAG4AcQB1AG8AdABlACAAQQBwAHAAcwBBAGwAYQBuACAARABhAGcAdQBlAC0ARwByAGUAZQBuAGUALAAgAFEAdQBvAHQAZQAtAFUAbgBxAHUAbwB0AGUAIABBAHAAcABzAGgAdAB0AHAAOgAvAC8AcQB1AG8AdABlAHUAbgBxAHUAbwB0AGUAYQBwAHAAcwAuAGMAbwBtAGgAdAB0AHAAOgAvAC8AYgBhAHMAaQBjAHIAZQBjAGkAcABlAC4AYwBvAG0AVABoAGkAcwAgAEYAbwBuAHQAIABTAG8AZgB0AHcAYQByAGUAIABpAHMAIABsAGkAYwBlAG4AcwBlAGQAIAB1AG4AZABlAHIAIAB0AGgAZQAgAFMASQBMACAATwBwAGUAbgAgAEYAbwBuAHQAIABMAGkAYwBlAG4AcwBlACwAIABWAGUAcgBzAGkAbwBuACAAMQAuADEALgAgAFQAaABpAHMAIABsAGkAYwBlAG4AcwBlACAAaQBzACAAYQB2AGEAaQBsAGEAYgBsAGUAIAB3AGkAdABoACAAYQAgAEYAQQBRACAAYQB0ADoAIABoAHQAdABwADoALwAvAHMAYwByAGkAcAB0AHMALgBzAGkAbAAuAG8AcgBnAC8ATwBGAEwAaAB0AHQAcAA6AC8ALwBzAGMAcgBpAHAAdABzAC4AcwBpAGwALgBvAHIAZwAvAE8ARgBMAAIAAAAAAAD/RwCCAAAAAQAAAAAAAAAAAAAAAAAAAAABkAAAAQIAAgADAAQABQAGAAcACAAJAAoACwAMAA0ADgAPABAAEQASABMAFAAVABYAFwAYABkAGgAbABwAHQAeAB8AIAAhACIAIwAkACUAJgAnACgAKQAqACsALAAtAC4ALwAwADEAMgAzADQANQA2ADcAOAA5ADoAOwA8AD0APgA/AEAAQQBCAEMARABFAEYARwBIAEkASgBLAEwATQBOAE8AUABRAFIAUwBUAFUAVgBXAFgAWQBaAFsAXABdAF4AXwBgAGEAowCEAIUAvQCWAOgAhgCOAIsAnQCkAIoA2gCDAJMBAwEEAI0BBQCIAMMA3gEGAJ4A9QD0APYAogCtAMkAxwCuAGIAYwCQAGQAywBlAMgAygDPAMwAzQDOAOkAZgDTANAA0QCvAGcA8ACRANYA1ADVAGgA6wDtAIkAagBpAGsAbQBsAG4AoABvAHEAcAByAHMAdQB0AHYAdwDqAHgAegB5AHsAfQB8ALgAoQB/AH4AgACBAOwA7gC6AQcBCAEJAQoBCwEMAP0A/gENAQ4BDwEQAP8BAAERARIBEwEBARQBFQEWARcBGAEZARoBGwEcAR0A+AD5AR4BHwEgASEBIgEjASQBJQEmAScBKAEpAPoBKgErASwBLQEuAS8BMAExATIBMwE0ATUA4gDjATYBNwE4ATkBOgE7ATwBPQE+AT8AsACxAUABQQFCAUMBRAFFAUYBRwFIAUkA+wD8AOQA5QFKAUsBTAFNAU4BTwFQAVEBUgFTAVQBVQFWAVcAuwFYAVkBWgFbAOYA5wCmAVwBXQFeANgA4QDbANwA3QDgANkA3wCbALIAswC2ALcAxAC0ALUAxQCCAMIAhwCrAMYAvgC/ALwAjAFfAJgBYACaAJkA7wClAJIAnACnAI8AlACVALkAwADBAWEBYgFjAWQBZQFmAWcBaAFpAWoBawFsAW0BbgFvAXABcQDXAXIBcwF0AXUBdgF3AXgBeQF6AXsBfAF9AX4BfwGAAYEAqQCqAYIBgwD3AYQBhQGGAYcBiAGJAYoBiwGMAY0BjgGPAZABkQGSAZMBlAGVAZYBlwGYBE5VTEwHdW5pMDBCMgd1bmkwMEIzB3VuaTAzQkMHdW5pMDBCOQdBbWFjcm9uB2FtYWNyb24GQWJyZXZlBmFicmV2ZQdBb2dvbmVrB2FvZ29uZWsLQ2NpcmN1bWZsZXgLY2NpcmN1bWZsZXgKQ2RvdGFjY2VudApjZG90YWNjZW50BkRjYXJvbgZkY2Fyb24GRGNyb2F0B0VtYWNyb24HZW1hY3JvbgpFZG90YWNjZW50CmVkb3RhY2NlbnQHRW9nb25lawdlb2dvbmVrBkVjYXJvbgZlY2Fyb24LR2NpcmN1bWZsZXgLZ2NpcmN1bWZsZXgKR2RvdGFjY2VudApnZG90YWNjZW50B3VuaTAxMjIHdW5pMDEyMwtIY2lyY3VtZmxleAtoY2lyY3VtZmxleARIYmFyBGhiYXIHSW1hY3JvbgdpbWFjcm9uB0lvZ29uZWsHaW9nb25lawJJSgJpagtKY2lyY3VtZmxleAtqY2lyY3VtZmxleAd1bmkwMTM2B3VuaTAxMzcGTGFjdXRlBmxhY3V0ZQd1bmkwMTNCB3VuaTAxM0MGTGNhcm9uBmxjYXJvbgZOYWN1dGUGbmFjdXRlB3VuaTAxNDUHdW5pMDE0NgZOY2Fyb24GbmNhcm9uB09tYWNyb24Hb21hY3Jvbg1PaHVuZ2FydW1sYXV0DW9odW5nYXJ1bWxhdXQGUmFjdXRlBnJhY3V0ZQd1bmkwMTU2B3VuaTAxNTcGUmNhcm9uBnJjYXJvbgZTYWN1dGUGc2FjdXRlC1NjaXJjdW1mbGV4C3NjaXJjdW1mbGV4B3VuaTAyMUEHdW5pMDIxQgZUY2Fyb24GdGNhcm9uB1VtYWNyb24HdW1hY3JvbgZVYnJldmUGdWJyZXZlBVVyaW5nBXVyaW5nDVVodW5nYXJ1bWxhdXQNdWh1bmdhcnVtbGF1dAdVb2dvbmVrB3VvZ29uZWsGWmFjdXRlBnphY3V0ZQpaZG90YWNjZW50Cnpkb3RhY2NlbnQHdW5pMDIxOAd1bmkwMjE5B3VuaTAyMzcHdW5pMDNBOQd1bmkwMzk0B3VuaTAxNjIHdW5pMDE2MwZFYnJldmUGSWJyZXZlBkl0aWxkZQRMZG90A0VuZwZPYnJldmUEVGJhcgZVdGlsZGUGV2FjdXRlC1djaXJjdW1mbGV4CVdkaWVyZXNpcwZXZ3JhdmULWWNpcmN1bWZsZXgGWWdyYXZlBmVicmV2ZQZpYnJldmUGaXRpbGRlBGxkb3QDZW5nBm9icmV2ZQR0YmFyBnV0aWxkZQZ3YWN1dGULd2NpcmN1bWZsZXgJd2RpZXJlc2lzBndncmF2ZQt5Y2lyY3VtZmxleAZ5Z3JhdmUHdW5pMjA3NAd1bmkwMEFEB3VuaTIwMTEHdW5pMDBBMARFdXJvB3VuaTIwQTkHdW5pMjIxNQd1bmkwMEI1Bm1pbnV0ZQZzZWNvbmQHdW5pMDMyNgx1bmkwMzI2LmNhc2UKYWN1dGUuY2FzZQpicmV2ZS5jYXNlCWNhcm9uLmFsdApjYXJvbi5jYXNlDGNlZGlsbGEuY2FzZQ9jaXJjdW1mbGV4LmNhc2UNZGllcmVzaXMuY2FzZQ5kb3RhY2NlbnQuY2FzZQpncmF2ZS5jYXNlEWh1bmdhcnVtbGF1dC5jYXNlC21hY3Jvbi5jYXNlC29nb25lay5jYXNlCXJpbmcuY2FzZQp0aWxkZS5jYXNlAAABAAH//wAPAAEAAAAMAAAAHAAAAAIAAgFSAVMAAgGAAYEAAwAIAAIAEAAYAAEAAgFSAVMAAQAEAAECAQABAAQAAQIrAAEAAAAKAKIBmgADREZMVAAUZ3JlawAobGF0bgA8AAQAAAAA//8ABQAAAAYADAAVABsABAAAAAD//wAFAAEABwANABYAHAAWAANDQVQgACZNT0wgADhST00gAEoAAP//AAUAAgAIAA4AFwAdAAD//wAGAAMACQAPABIAGAAeAAD//wAGAAQACgAQABMAGQAfAAD//wAGAAUACwARABQAGgAgACFhYWx0AMhhYWx0AMhhYWx0AMhhYWx0AMhhYWx0AMhhYWx0AMhjYXNlAM5jYXNlAM5jYXNlAM5jYXNlAM5jYXNlAM5jYXNlAM5mcmFjANRmcmFjANRmcmFjANRmcmFjANRmcmFjANRmcmFjANRsb2NsANpsb2NsAOBsb2NsAOZvcmRuAOxvcmRuAOxvcmRuAOxvcmRuAOxvcmRuAOxvcmRuAOxzdXBzAPJzdXBzAPJzdXBzAPJzdXBzAPJzdXBzAPJzdXBzAPIAAAABAAAAAAABAAcAAAABAAUAAAABAAMAAAABAAIAAAABAAEAAAABAAYAAAABAAQACgAWAJAAkACyAPYBFgFSAZoB5AISAAEAAAABAAgAAgA6ABoAeABxAHIBcwBrAHkBigBrAHkBiAGMAYIBhgEnASgBhwGFAYMBiQGOAY0BjwGLAREBEgGBAAEAGgAUABUAFgAXACQAMgBDAEQAUgBpAG4AcwB3AQ0BDgEqASsBLAEtAS4BLwEwATEBVAFVAYAAAQAAAAEACAACAA4ABAEnASgBEQESAAEABAENAQ4BVAFVAAYAAAACAAoAJAADAAAAAgAUAC4AAQAUAAEAAAAIAAEAAQBPAAMAAAACABoAFAABABoAAQAAAAgAAQABAHYAAQABAC8AAQAAAAEACAACAA4ABAB4AHEAcgFzAAIAAQAUABcAAAAEAAAAAQAIAAEALAACAAoAIAACAAYADgB7AAMAEgAVAHoAAwASABcAAQAEAHwAAwASABcAAQACABQAFgAGAAAAAgAKACQAAwABACwAAQASAAAAAQAAAAkAAQACACQARAADAAEAEgABABwAAAABAAAACQACAAEAEwAcAAAAAQACADIAUgABAAAAAQAIAAIAIgAOAYoBiAGMAYIBhgGHAYUBgwGJAY4BjQGPAYsBgQABAA4AQwBpAG4AcwB3ASoBKwEsAS0BLgEvATABMQGAAAQAAAABAAgAAQAeAAIACgAUAAEABAFZAAIAdgABAAQBaAACAHYAAQACAC8ATwABAAAAAQAIAAIADgAEAGsAeQBrAHkAAQAEACQAMgBEAFIAAA==';\nvar callAddFont = function () {\nthis.addFileToVFS('CourierPrime-Regular-normal.ttf', font);\nthis.addFont('CourierPrime-Regular-normal.ttf', 'CourierPrime-Regular', 'normal');\n};\njsPDF.API.events.push(['addFonts', callAddFont])\n","import { jsPDF } from \"jspdf\"\nvar font = '';\nvar callAddFont = function () {\nthis.addFileToVFS('CourierPrime-Bold-normal.ttf', font);\nthis.addFont('CourierPrime-Bold-normal.ttf', 'CourierPrime-Bold', 'normal');\n};\njsPDF.API.events.push(['addFonts', callAddFont])\n","import { jsPDF } from \"jspdf\"\nvar font = '';\nvar callAddFont = function () {\nthis.addFileToVFS('CourierPrime-BoldItalic-bolditalic.ttf', font);\nthis.addFont('CourierPrime-BoldItalic-bolditalic.ttf', 'CourierPrime-BoldItalic', 'bolditalic');\n};\njsPDF.API.events.push(['addFonts', callAddFont])\n","import { jsPDF } from \"jspdf\"\nvar font = '';\nvar callAddFont = function () {\nthis.addFileToVFS('CourierPrime-Italic-italic.ttf', font);\nthis.addFont('CourierPrime-Italic-italic.ttf', 'CourierPrime-Italic', 'italic');\n};\njsPDF.API.events.push(['addFonts', callAddFont])\n","import styled from 'styled-components'\nimport { jsPDF } from 'jspdf'\nimport '../../../fonts/CourierPrime-Regular-normal'\nimport '../../../fonts/CourierPrime-Bold-normal'\nimport '../../../fonts/CourierPrime-BoldItalic-bolditalic'\nimport '../../../fonts/CourierPrime-Italic-italic'\n\nconst CreatePDFButton = (props) => {\n    let line = 1\n    let newPage = 56\n    let currentPage = '2'\n\n    const createPage = () => {\n        return new jsPDF({\n            orientation: 'portrait',\n            unit: 'in',\n            format: [8.5, 11]\n        })\n    }\n    \n    const selectFont = (wordItem) => {\n        if(wordItem.bold && wordItem.italics) return ['CourierPrime-BoldItalic', 'bolditalic']\n        if(wordItem.bold) return ['CourierPrime-Bold', 'normal']\n        if(wordItem.italics) return ['CourierPrime-Italic', 'italic']\n        return ['CourierPrime-Regular', 'normal']\n    }\n\n    const insertPageBreak = (script, currentPage) => {\n        script.addPage()\n        script.text(currentPage + '.', script.internal.pageSize.width - 1, .5)\n    }\n\n    const decrementLine = () => {\n        newPage -= 1\n        line+= .16\n    }\n\n    const addNewPage = (script) => {\n        insertPageBreak(script, currentPage)\n        currentPage = String(Number(currentPage) + 1)\n        line = 1\n        newPage = 56\n    }\n\n    const assignWords = (item) => {\n        if(item.children.length > 1) return Object.values(item.children)\n        if(item.children.length === 1) return item.children[0].text\n    }\n\n    const addTransiton = (script, words) => {\n        const stringWidth = script.getTextWidth(words)\n        return script.text(words.toUpperCase(), script.internal.pageSize.width - 1 - stringWidth, line)\n        // return decrementLine()\n    }\n    \n    const addCharacter = (script, words) => {\n        script.text(words.toUpperCase(), 3.7, line)\n    }\n\n    const addParenthetical = (script, words) => {\n        const lineWrap = script.splitTextToSize(words, 2)\n        lineWrap.forEach(item=> {\n            return script.text(item, 3.1, line)\n        })\n    }\n\n    const addHeading = (script, text, index, words) => {\n        script.setFont('CourierPrime-Bold', 'normal')\n        if(text[index-1] && text[index-1].children[0].text.length===0) {\n            decrementLine()\n        }\n        script.text(words.toUpperCase(), 1.5, line)\n    }\n\n    const handleDialogPageBreak = (script, words, wordIndex, text, index) => {\n        console.log(newPage)\n        if(newPage === 1 && words.length > wordIndex + 1) {\n            addParenthetical(script, '(MORE)')\n            addNewPage(script)\n            addCharacter(script, `${text[index-1].children[0].text} (CONT'D)`)\n            decrementLine( )\n        }else if(newPage <= 0) {\n            addNewPage(script)\n        }\n    }\n\n    let dialogLineLengthMax = 3.3\n    let dialogLineLength = 0\n    const addDialogWords = (words, script, index, text) => {\n        words.forEach((word, wordIndex)=> {\n            const wordLength = script.getTextWidth(word)\n            if(dialogLineLengthMax - wordLength < 0) {\n                decrementLine()\n                dialogLineLengthMax = 3.3\n                dialogLineLength = 0\n                handleDialogPageBreak(script, words, wordIndex, text, index)\n            }\n            script.text(word, 2.5 + dialogLineLength, line)\n            dialogLineLengthMax -= (wordLength + .1)\n            dialogLineLength += (wordLength + .1)\n        })\n    }\n\n    const addDialog = (script, words, index, text) => {\n        dialogLineLengthMax = 3.3\n        dialogLineLength = 0\n        if(Array.isArray(words)){\n            words.forEach(wordItem=> {\n                script.setFont(...selectFont(wordItem))\n                const splitWords = wordItem.text.trim().split(' ')\n                addDialogWords(splitWords, script, index, text)\n            })\n        }else {\n            const splitWords = words.trim().split(' ')\n            addDialogWords(splitWords, script, index, text)\n        }\n    }\n\n    let descriptionLineLengthMax = 6\n    let descriptionLineLength = 0\n    const addDescriptionWords = (words, script) => {\n        words.forEach(word => {\n            let wordLength = script.getTextWidth(word)\n            if(descriptionLineLengthMax - wordLength < 0) {\n                if(newPage <= 0) addNewPage(script)\n                decrementLine()\n                descriptionLineLengthMax = 6\n                descriptionLineLength = 0\n            }\n            script.text(word, 1.5 + descriptionLineLength, line)\n            descriptionLineLengthMax -= (wordLength + .1)\n            descriptionLineLength += (wordLength + .1)\n        })\n    }\n\n    const addDescription = (script, words) => {\n        descriptionLineLengthMax = 6\n        descriptionLineLength = 0\n        if(Array.isArray(words)) {\n            words.forEach(wordItem=> {\n                script.setFont(...selectFont(wordItem))\n                const splitWords = wordItem.text.trim().split(' ')\n                addDescriptionWords(splitWords, script)\n            })\n        }else{\n            const splitWords = words.trim().split(' ')\n            addDescriptionWords(splitWords, script)\n        }\n    }\n\n    const addItems = (type, script, words, text, index) => {\n        if(type === 'transition') addTransiton(script, words)\n        if(type === 'character') addCharacter(script, words)\n        if(type === 'parenthetical') addParenthetical(script, words)\n        if(type === 'heading') addHeading(script, text, index, words)\n        if(type === 'dialog') addDialog(script, words, index, text)\n        if(!type) addDescription(script, words)\n    }\n\n    const createPDF = (text) => {\n        const script = createPage()\n        script.setFontSize(12)\n        text.forEach((item, index)=> {\n            script.setFont('CourierPrime-Regular', 'normal')\n            if(newPage <= 0) addNewPage(script)\n            const words = assignWords(item)\n            addItems(item.type, script, words, text, index)\n            decrementLine()\n        })\n        script.save('script-test-export.pdf')\n    }\n\n\n    return(\n        <CreatePDF onClick={()=>createPDF(props.value)}>Export test</CreatePDF>\n    )\n}\n\nexport default CreatePDFButton\n\nconst CreatePDF = styled.button`\n    height: 40px;\n    min-width: 150px;\n    background-color: var(--primary-text);\n    color: var(--sidebar);\n    border-radius: 5px;\n    margin-left: 20px;\n    @media(max-width: 500px) {\n        min-width: 120px;\n    }\n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { Link } from 'react-router-dom'\nimport CreatePDFButton from './CreatePDFButton'\n\nconst Toolbar = (props) => {\n    return(\n        <Container>\n            <Home aria-label='return to home' to='/writing-app'>\n                <IconComponent><path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\"/></IconComponent>\n            </Home>\n            <RightContainer>\n                {props.savingStatus}\n                <CreatePDFButton value={props.value} />\n            </RightContainer>\n        </Container>\n    )\n}\n\nexport default Toolbar\n\nconst RightContainer = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Home = styled(Link)`\n    justify-self: flex-start;\n`\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    background-color: var(--background);\n    width: 100%;\n    z-index: 1;\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 60px;\n    transition: opacity 300ms ease-in-out;\n    outline: 1px solid rgba(0, 0, 0, .1);\n    &:hover {\n        opacity: 1;\n    }\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n        }\n    }\n`","import styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { useState, useEffect } from 'react'\nimport { db } from '../../../firebase'\nimport firebase from 'firebase/app'\nimport EditorInterface from './Editor'\nimport Toolbar from './Toolbar'\nimport moment from 'moment'\n\nconst Screenplay = (props) => {\n    const [value, setValue] = useState([{type: 'paragraph', children: [{text: ''}]}])\n    const [scriptID, setScriptID] = useState('')\n    const [isPreventSave, setIsPreventSave] = useState(true)\n    const [currentWords, setCurrentWords] = useState(0)\n    const [savingStatus, setSavingStatus] = useState('All changes saved')\n    const [characters, setCharacters] = useState([])\n    const [charactersObj, setCharactersObj] = useState({})\n    const [locations, setLocations] = useState([])\n    const [locationsObj, setLocationsObj] = useState({})\n    const [lastSaved, setLastSaved] = useState(0)\n\n    useEffect(()=> {\n        if(isPreventSave) return\n        updateSavingStatus('Saving...')\n        const save = setTimeout(()=> saveScript(value, props.userData.userID, props.match.params.fileID), 2000)\n        return ()=> clearTimeout(save)\n        // eslint-disable-next-line\n    }, [value])\n\n    useEffect(()=> {\n        getScript()\n        // eslint-disable-next-line\n    }, [])\n\n    const getScript = () => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .get()\n        .then(data=> {\n            const scriptData = data.data()\n            const script = scriptData.text\n            document.title = scriptData.name\n            setScriptID(data.data().docID)\n            if(script.length > 0) {\n                setValue(script)\n                getCharacters(script)\n                getLocations(script)\n                setCurrentWords(getWords(script))\n            }\n        })\n    }\n\n    window.onbeforeunload = function() {\n        if(savingStatus==='Saving...') {\n            return 'saving'\n        }\n    }\n\n    const updateLastUpdatedFunction = (currentTime, collectionName, fileID) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection(collectionName)\n        .doc(fileID)\n        .update({\n            lastModified: currentTime,\n        })\n        .then(()=> {\n            console.log('updated')\n        })\n    }\n\n    const updateLastUpdated = (currentTime) => {\n        if(currentTime - lastSaved > 600000) {\n            updateLastUpdatedFunction(currentTime, 'files-folders', props.match.params.fileID)\n            updateLastUpdatedFunction(currentTime, 'files-folders', String(scriptID))\n        }\n    }\n\n    const getWords = (script) => {\n        let words = 0\n        script.forEach(item=> {\n            if(item.children[0].text.length===0) return\n            let text = item.children[0].text.trim()\n            if(item.type==='heading') {\n                text = text.split(' -').join('').split(' ')\n            }else {\n                text = text.split(' ')\n            }\n            words += text.length\n        })\n        return words\n    }\n\n    const saveScript = (scriptObject, userID, scriptID) => {\n        const currentTime = Date.now()\n        updateWordCount()\n        saveScriptToDatabase(scriptObject, userID, scriptID)\n        updateLastUpdated(currentTime)\n        setLastSaved(currentTime)\n    }\n\n    const updateWordCount = () => {\n        const newWordCount = getWords(value)\n        const change = newWordCount - currentWords\n        setCurrentWords(newWordCount)\n        if(change > 0) return incrementWordsInDatabase(change)\n    }\n\n    const saveScriptToDatabase = (scriptObject, userID, scriptID) => {\n        db.collection('users')\n        .doc(userID)\n        .collection('files')\n        .doc(scriptID)\n        .update({\n            text: scriptObject\n        })\n        .then(()=> {\n            updateSavingStatus('All changes saved')\n        })\n    }\n\n    const incrementWordsInDatabase = (wordsAdded) => {\n        const wordsToAdd = firebase.firestore.FieldValue.increment(wordsAdded)\n        const date = moment().format('L')\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('goals')\n        .doc('daily-goal')\n        .update({\n            'wordsWritten.words': wordsToAdd,\n            'wordsWritten.date': date\n        })\n    }\n\n    const getCharacterCount = (scriptObject) => {\n        const charactersObject = {}\n        scriptObject.forEach(item=> {\n            if(item?.type !== 'character') return\n            const name = item.children[0].text.toUpperCase()\n            const nameNoParentheses = removeParenthesesFromCharacter(name)\n            incrementItem(nameNoParentheses, charactersObject)\n        })\n        return charactersObject\n    }\n\n    const sortArray = (array) => {\n        array.sort((a, b)=> b[1] - a[1])\n        return array.map(item=> {\n            return item[0]\n        }) \n    }\n\n    const getCharacters = (scriptObject) => {\n        const characterCount = getCharacterCount(scriptObject)\n        setCharactersObj(characterCount)\n        const charactersArray =  Object.entries(characterCount)\n        const charactersList = sortArray(charactersArray)\n        setCharacters(charactersList)\n    }\n\n    const incrementItem = (itemName, itemCount) => {\n        if(itemName.length===0) return\n        if(itemCount[itemName]) {\n            return itemCount[itemName] += 1\n        }else{\n            return itemCount[itemName] = 1\n        }\n    }\n\n    const removeParenthesesFromCharacter = (characterName) => {\n        if(characterName.includes('(')) {\n            const split = characterName.split('(')\n            split.pop()\n            return split.join('').trim()\n        }\n        return characterName\n    }\n\n    const addCharacter = (characterName) => {\n        const characterUppercase = characterName.toUpperCase()\n        const characterNoParentheses = removeParenthesesFromCharacter(characterUppercase)\n        const characterCopy = {...charactersObj}\n        incrementItem(characterNoParentheses, characterCopy)\n        setCharactersObj(characterCopy)\n        const charactersArray =  Object.entries(characterCopy)\n        const charactersList = sortArray(charactersArray)\n        setCharacters(charactersList)\n    }\n\n    const getLocations = (scriptObject) => {\n        const locations = {}\n        scriptObject.forEach(item=> {\n            if(item?.type === 'heading') {\n                const heading = item.children[0].text\n                const splitHeading = heading.split(' ')\n                if(splitHeading.length > 1) {\n                    splitHeading.shift()\n                    const joined = splitHeading.join(' ')\n                    const splitDash = joined.split('-')\n                    splitDash.pop()\n                    splitDash.join('')\n                    const location = splitDash[0].trim().toUpperCase()\n                    incrementItem(location, locations)\n                } \n            }\n        })\n        setLocationsObj(locations)\n        const locationsArray =  Object.entries(locations)\n        const locationsList = sortArray(locationsArray)\n        setLocations(locationsList)\n    }\n\n    const addLocation = (heading) => {\n        const splitHeading = heading.split(' ')\n        const locationsCopy = {...locationsObj}\n        if(splitHeading.length < 2) return\n        splitHeading.shift()\n        const joined = splitHeading.join(' ')\n        const splitDash = joined.split('-')\n        splitDash.pop()\n        splitDash.join('')\n        const location = splitDash[0].trim().toUpperCase()\n        incrementItem(location, locationsCopy)\n        setLocationsObj(locationsCopy)\n        const locationsArray = Object.entries(locationsCopy)\n        const locationsList = sortArray(locationsArray)\n        setLocations(locationsList)\n    }\n\n\n    const updateSavingStatus = (status) => {\n        setSavingStatus(status)\n    }\n\n    return(\n        <Container>\n            <Toolbar value={value} savingStatus={savingStatus} />\n            <InterfaceContainer>\n                <EditorInterface isPreventSave={isPreventSave} setIsPreventSave={setIsPreventSave} value={value} setValue={setValue} locations={locations} addLocation={addLocation} getLocations={getLocations} characters={characters} addCharacter={addCharacter} match={props.match} getCharacters={getCharacters} updateSavingStatus={updateSavingStatus} />\n            </InterfaceContainer>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n})\n\nexport default connect(mapStateToProps)(Screenplay)\n\nconst InterfaceContainer = styled.div`\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    /* height: 100%; */\n    position: relative;\n`\n\nexport const Container = styled.div`\n    /* height: 100%; */\n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { Link } from 'react-router-dom'\n\nconst Toolbar = (props) => {\n    return(\n        <Container>\n            <Home aria-label='return to home' to='/writing-app'>\n                <IconComponent><path d=\"M21 13v10h-6v-6h-6v6h-6v-10h-3l12-12 12 12h-3zm-1-5.907v-5.093h-3v2.093l3 3z\"/></IconComponent>\n            </Home>\n            {props.savingStatus}\n        </Container>\n    )\n}\n\nexport default Toolbar\n\nconst Home = styled(Link)`\n    justify-self: flex-start;\n`\n\nconst Container = styled.div`\n    position: fixed;\n    background-color: var(--background);\n    width: 100%;\n    z-index: 1;\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 60px;\n    top: 0;\n    transition: opacity 300ms ease-in-out;\n    border: 1px solid rgba(0, 0, 0, .1);\n    &:hover {\n        opacity: 1;\n    }\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n        }\n    }\n`","import styled from 'styled-components'\nimport { useEffect, useState } from 'react'\nimport { db } from '../../../firebase'\nimport fitTextarea from 'fit-textarea';\nimport { connect } from 'react-redux'\nimport Toolbar from './Toolbar'\nimport { notesData } from '../../../redux/actions/appActions'\n\nconst Notes = (props) => {\n\n    const [note, setNote] = useState('')\n    const [lastSaved, setLastSaved] = useState(0)\n    const [isPreventSave, setIsPreventSave] = useState(true)\n    const [savedStatus, setSavedStatus] = useState('All changes saved')\n\n    useEffect(()=> {\n        getNotes()\n        // eslint-disable-next-line\n    }, [props.match])\n    \n    useEffect(()=> {\n        if(props.userData.userID && !isPreventSave) {\n            return autosave()\n        }\n        // eslint-disable-next-line \n    }, [note])\n\n    const autosave = () => {\n        setSavedStatus('Saving...')\n        const timeout = setTimeout(()=>saveWork(), 1000)\n        return  ()=>clearTimeout(timeout)\n    }\n\n    const getNotes = () => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .get()\n        .then(result=> {\n            if(result.exists) {\n                const notesInfo = result.data()\n                document.getElementById('notes-textarea').value = notesInfo.text\n                document.title = notesInfo.name\n                props.dispatch(notesData(notesInfo))\n                const textarea = document.getElementById('notes-textarea')\n                fitTextarea.watch(textarea)\n            }\n        })\n    }\n\n    window.onbeforeunload = function() {\n        if(savedStatus==='Saving...') {\n            return 'saving'\n        }\n    }\n\n    const sendToDatabase = (note) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(props.match.params.fileID)\n        .update({\n            text: note,\n        })\n        .then(()=> {\n            setSavedStatus('All changes saved')\n        })\n    }\n\n    const updateLastUpdatedFunction = (currentTime, collectionName, fileID) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection(collectionName)\n        .doc(fileID)\n        .update({\n            lastModified: currentTime,\n        })\n        .catch((err)=>console.log(err))\n    }\n\n    const updateLastUpdated = (currentTime) => {\n        if(currentTime - lastSaved > 600000) {\n            updateLastUpdatedFunction(currentTime, 'files-folders', props.match.params.fileID)\n            updateLastUpdatedFunction(currentTime, 'files-folders', String(props.notesData.docID))\n        }\n    }\n\n    const saveWork = () => {\n        const currentTime = Date.now()\n        sendToDatabase(note)\n        updateLastUpdated(currentTime)\n        setLastSaved(currentTime)\n    }\n\n    const addNotesToState = (e) => {\n        setNote(e.target.value)\n        if(isPreventSave) setIsPreventSave(false)\n    }\n\n    return(\n        <Container>\n            <Toolbar savingStatus={savedStatus} />\n            <NotesContainer>\n                <div>\n                    <Title>{props?.notesData?.name}</Title>\n                    <TextAreaPage rows='5' placeholder='Write notes here' onChange={addNotesToState} autoFocus id='notes-textarea' />\n                </div>\n            </NotesContainer>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    notesData: state.app.notesData,\n})\n\nexport default connect(mapStateToProps)(Notes)\n\nconst NotesContainer = styled.div`\n    display: flex; \n    flex-direction: column; \n    align-items: center; \n    justify-content: center;\n    padding: 20px 30vw;\n    margin-top: 40px;\n`\n\nconst Container = styled.div`\n`\n\nconst Title = styled.h1`\n    font-size: 3rem;\n    font-weight: 600;\n    margin-bottom: 10px;\n    @media(max-width: 900px) {\n        font-size: 2.5rem;\n    }\n`\n\nconst TextAreaPage = styled.textarea`\n    margin-top: 40px;\n    background-color: transparent;\n    border-radius: 15px;\n    font-size: 1rem;\n    line-height: 1.5;\n    width: 50vw;\n    color: var(--primary-text);\n    border: none;\n    resize: none;\n    &:focus{\n        box-shadow: none;\n    }\n`","import { createGlobalStyle } from 'styled-components'\nimport { connect } from 'react-redux'\nconst GlobalStyles = createGlobalStyle`\n\n    html {\n        scroll-behavior: smooth;\n        --background: ${props=>props.colors.background};\n        --sidebar: ${props=>props.colors.sidebar};\n        --primary-text: ${props=>props.colors.primaryText};\n        --highlight: ${props=>props.colors.highlight};\n        --secondary: ${props=>props.colors.secondary};\n    }\n\n    html, body {\n        height: 100%;\n        background-color: var(--background);\n    }\n\n    body {\n        overflow: ${props=> props.page==='tasks' || props.page==='themes' || (props.page===undefined && props.userID.length > 0) ? 'hidden' : 'scroll'};\n        overscroll-behavior-block: ${props=> props.page==='goals' || props.page==='themes' || (props.page===undefined && props.userID.length > 0) ? 'none' : 'auto'};\n    }\n\n    * {\n        &:focus {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n            outline: none;\n        }\n        -webkit-overflow-scrolling: touch;\n    }\n\n    html, body, div, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote,\n    a, img, ol, ul, li, form, label,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, section, summary,\n    time, mark, audio, video, button {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n        font-family: 'Montserrat', sans-serif;\n        font-weight: 500;\n    }  \n\n    button {\n        cursor: pointer;\n        background-color: transparent;\n    }\n\n    textarea {\n        font-family: 'Montserrat', sans-serif;\n        font-weight: 500;\n    }\n\n    h1, h2, h3, h4, h5, h6, p, a, div, label {\n        line-height: 1;\n        color: var(--primary-text);\n    }\n\n    button {\n        color: var(--primary-text);\n    }\n\n    ol, ul {\n        list-style: none;\n    }\n\n    *, *::before, *::after {\n        box-sizing: border-box;\n    }\n`\n\nconst mapStateToProps = state => ({\n    colors: state.app.colors,    \n})\n\nexport default connect(mapStateToProps)(GlobalStyles)","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Header = () => {\n    return(\n        <Container>\n            <UL>\n                <LI><Logo>Redraft</Logo></LI>\n                <RightContainer>\n                    <LI>\n                        <StyledLink to='/writing-app/signin'><SignIn>Sign in</SignIn></StyledLink>\n                    </LI>\n                    <LI>\n                        <StyledLink to='/writing-app/signup'><SignUp>Sign up</SignUp></StyledLink>\n                    </LI>\n                </RightContainer>\n            </UL>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst RightContainer = styled.div`\n    display: flex;\n    margin-right: 50px;\n    @media(max-width: 800px) {\n        margin-right: 20px;\n    }\n`\n\nconst Container = styled.nav`\n    padding-top: 20px;\n    background-color: hsl(184, 30%, 92%);\n`\n\nconst UL = styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    list-style-type: none;\n    padding: 0;\n`\n\nconst LI = styled.li`\n`\n\nconst SignIn = styled.div`\n    background-color: transparent;\n    border: 1px solid black;\n    padding: 15px;\n    border-radius: 7px;\n    white-space: nowrap;\n    @media(max-width: 500px) {\n        font-size: .9rem;\n        padding: 12px;\n    }\n    @media(max-width: 350px) {\n        font-size: .8rem;\n        padding: 9px;\n    }\n`\n\nconst SignUp = styled.div`\n    background-color: black;\n    border: 1px solid black;\n    color: white;\n    padding: 15px;\n    border-radius: 7px;\n    margin-left: 10px;\n    white-space: nowrap;\n    @media(max-width: 500px) {\n        font-size: .9rem;\n        padding: 12px;\n    }\n    @media(max-width: 350px) {\n        font-size: .8rem;\n        padding: 9px;\n    }\n`\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n    &:focus {\n        box-shadow: none;\n    }\n    &:focus-within {\n        ${SignIn} {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n        }\n        ${SignUp} {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n        }\n    }\n`\n\nconst Logo = styled.h1`\n    font-size: 2rem;\n    font-weight: 700;\n    margin-left: 50px;\n    @media(max-width: 800px) {\n        margin-left: 20px;\n    }\n    @media(max-width: 500px) {\n        font-size: 1.75rem;\n    }\n    @media(max-width: 350px) {\n        font-size: 1.5rem;\n    }\n`","// @refresh reset\nimport { createEditor, Editor, Transforms, Range, Text } from 'slate'\nimport { Slate, Editable, withReact, ReactEditor } from 'slate-react'\nimport { useMemo, useState, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Autocomplete from '../Edit/Screenplay/Autocomplete'\nimport isHotKey from 'is-hotkey'\nimport { withHistory } from 'slate-history'\nimport {\n    TIME_OF_DAY,\n    Dialog,\n    SceneHeading,\n    Paragraph,\n    Transition,\n    Character,\n    Parenthetical,\n    Decorations\n} from '../Edit/Screenplay/EditorAssets'\n\nconst EditorPreview = (props) => {\n    const [value, setValue] = useState([\n        {type: 'heading', children: [{text: 'INT. HOUSE - NIGHT'}]},\n        {children: [{text: ''}]},\n        {children: [{text: 'Water rushes down the stairs.'}]},\n        {children: [{text: ''}]},\n        {type: 'character', children: [{text: 'JASMINE'}]},\n        {type: 'parenthetical', children: [{text: '(softly)'}]},\n        {type: 'dialog', children: [{text: 'What day is it?'}]},\n        {children: [{text: ''}]},\n        {type: 'transition', children: [{text: 'CUT TO:'}]},\n        {children: [{text: ''}]},\n        {children: [{text: ''}]},\n    ])\n    const editor = useMemo(()=> withReact(withHistory(createEditor())), [])\n    const [target, setTarget] = useState()\n    const [index, setIndex] = useState(0)\n    const [position, setPosition] = useState({top: '-9999px', left: '-9999px', display: 'none',})\n    const [searchType, setSearchType] = useState('')\n    const [searchQuery, setSearchQuery] = useState('')\n    const [characters, setCharacters] = useState(['JASMINE'])\n    const [locations, setLocations] = useState(['HOUSE'])\n    const [locationsObj, setLocationsObj] = useState({})\n    const [charactersObj, setCharactersObj] = useState({})\n\n    const searchMap = {\n        names: characters,\n        times: TIME_OF_DAY,\n        locations: locations,\n    }\n\n    const searchResults = searchMap[searchType]?.filter(item=> {\n        return item.startsWith(searchQuery.toUpperCase()) && item!==searchQuery.toUpperCase()\n    })\n\n    useEffect(() => {\n        if(editor.selection) {\n            const { path } = editor.selection.focus\n            const currentText = value[path[0]]?.children[0]?.text\n            if (target && searchType.length > 0 && searchResults?.length > 0 && currentText?.length > 0) {\n                const domRange = ReactEditor.toDOMRange(editor, target)\n                const rect = domRange.getBoundingClientRect()\n                const newPosition = {\n                    top: `${rect.top + window.pageYOffset + 25}px`,\n                    display: 'flex',\n                }\n                if(searchType==='locations' || 'times') {\n                    newPosition['left'] = `${rect.left + window.pageXOffset + 10}px`\n                }\n                if (searchType==='names') {\n                    newPosition['left'] = `${rect.left + window.pageXOffset}px`\n                }\n                setPosition(newPosition)\n            }else{\n                setPosition({\n                    top: '-9999px',\n                    left: '-9999px',\n                    display: 'none'\n                })\n            }\n        }\n        // eslint-disable-next-line \n    }, [searchResults?.length, searchType, editor.selection, searchQuery, target])\n    \n    const renderElement = useCallback((props)=> {\n        const { type } = props.element\n        if(type==='character') return <Character {...props} />\n        if(type==='dialog') return <Dialog {...props} />\n        if(type==='heading') return <SceneHeading {...props} />\n        if(type==='transition') return <Transition {...props} />\n        if(type==='parenthetical') return <Parenthetical {...props} />\n        return <Paragraph {...props} />\n    }, [])\n\n    const checkTransition = (e, currentText, type) => {\n        if(type==='transition') return false\n        if(e.code==='Semicolon' \n        && e.shiftKey\n        && currentText === currentText.toUpperCase()\n        ) {\n            setNode('transition')\n            return true\n        }\n        return false\n    }\n\n    const checkDescription = (path, e, currentText, type) => {\n        if(!type) return false\n        const previousText = value[path[0]-1].children[0].text \n        const previousPreviousType = value[path[0]-2].type\n        const currentTextUppercase = currentText.toUpperCase()\n        let nextType\n        if(value[path[0]+1]) {\n            nextType = value[path[0]+1].type\n        }\n        if(\n            previousText === '' \n            && e.key !== 'Enter'\n            && !currentTextUppercase.includes('EXT.')\n            && !currentTextUppercase.includes('INT.')\n            && !currentTextUppercase.includes('INT./EXT.')\n            && previousPreviousType !== 'dialog'\n            && nextType !== 'dialog'\n        ) {\n            setNode(null)\n            return true\n        }\n        return false\n    }\n\n    const checkDialog = (path, type) => {\n        if(type==='dialog') return false\n        const currentText = value[path[0]].children[0].text\n        const previousText = value[path[0]-1].children[0].text\n        const previousType = value[path[0]-1].type\n        if(\n            previousText === previousText.toUpperCase() \n            && previousText.length > 0\n            && currentText[currentText.length - 1] !== ':'\n            && currentText[0] !== '('\n            && previousText[previousText.length - 1] !== ':'\n            && !previousText.includes('INT.')\n            && !previousText.includes('EXT.')\n            && !previousText.includes('INT./EXT.')\n        ) {\n            Transforms.setNodes(\n                editor,\n                { type: 'character' },\n                { \n                    at: [path[0]-1],\n                    match: n => Editor.isBlock(editor, n),\n                    mode: 'lowest',\n                },\n            )\n            setNode('dialog')\n            return true\n        }else if(previousText.length > 0 && (currentText[0] !== '(') && (previousText[0] === '(' || previousType==='character')) {\n            setNode('dialog')\n            return true\n        }\n        return false\n    }\n\n    const checkParenthetical = (path, currentText, e, type) => {\n        if(type==='parenthetical') return false\n        const character = value[path[0]-1].children[0].text\n        if(character === character.toUpperCase() \n        && (currentText[0] === '(' || (e.key==='(' && e.shiftKey))\n        ) {\n            setNode('parenthetical')\n            Transforms.setNodes(\n                editor,\n                { type: 'character' },\n                { \n                    at: [path[0]-1],\n                    match: n => Editor.isBlock(editor, n),\n                    mode: 'lowest',\n                },\n            )\n            return true\n        }\n        return false\n    }\n\n    const checkCharacter = (path, currentText, currentType, type) => {\n        if(type==='character') return false\n        if(path[0] > 1) {\n            const previousType = value[path[0]-2].type\n            if(\n                previousType === 'dialog' \n                && currentType\n                && currentText === currentText.toUpperCase()\n                && !currentText.includes('INT.')\n                && !currentText.includes('EXT.')\n                && !currentText.includes('INT./EXT.')\n                && !currentText.includes(':')\n            ) {\n                setNode('character')\n                return true\n            }\n        }\n        return false\n    }\n\n    const incrementIndex = (e) => {\n        if(e.key==='ArrowUp') {\n            e.preventDefault()\n            setIndex(index === 0 ? searchResults.length - 1 : index - 1)\n            return true\n        }\n        if(e.key==='ArrowDown') {\n            e.preventDefault()\n            setIndex(index === searchResults.length - 1 ? 0 : index + 1)\n            return true\n        }\n    }\n\n    const timeSearch = (newValue) => {\n        const { path } = editor.selection.focus\n        const currentText = newValue[path[0]].children[0].text\n        if(!currentText.includes('-')) return\n        const splitValue = currentText.split('-')\n        if(splitValue.length > 1) {\n            setSearchQuery((splitValue[splitValue.length - 1]).trim())\n        }\n    }\n\n    const insertNodes = (type) => {\n        const obj = {children: [{ text: '' }]}\n        if(type) obj['type'] = type\n        Transforms.insertNodes(editor, [obj])  \n    }\n\n    const replaceLocation = (path, currentText) => {\n        const intExt = currentText.split(' ')[0].toUpperCase() \n        const [endPosition] = Range.edges(editor.selection)\n        let offset = 0\n        if(intExt=== 'INT.' || intExt === 'EXT.') offset = 5\n        if(intExt=== 'INT./EXT.') offset = 10\n        const startPosition = { offset, path }\n        const range = Editor.range(editor, startPosition, endPosition)\n        insertText(searchResults[index], range)\n        setIndex(0)\n        setSearchQuery('')\n    }\n\n    // const replaceLocationEnter = (path) => {\n    //     const currentText = value[path[0]].children[path[1]].text\n    //     replaceLocation(path, currentText)\n    //     insertNodes(null)\n    //     insertNodes(null)\n    // }\n\n    const replaceLocationAddDash = (path) => {\n        const currentText = value[path[0]].children[path[1]].text\n        replaceLocation(path, currentText)\n        if(!currentText.includes('-')) {\n            insertText(' - ')\n        }\n    }\n\n    const handleDelete = (path, e, type) => {\n        const anchor = editor.selection.anchor\n        const focus = editor.selection.focus\n        if(anchor.path[0] !== focus.path[0]) return\n        if(anchor.offset !== focus.offset) return\n        const currentText = value[path[0]].children[path[1]].text\n        if(type==='heading') {\n            const split = currentText.split(' ')\n            if(split.length === 2 && split[1].trim().length===0) {\n                setTarget(null)\n            }\n            if(anchor.offset===0) return\n        }\n        if(!type) {\n            if(anchor.offset===0) return\n        }\n        const offset = editor.selection.focus.offset\n        if(currentText.length > 0 && offset > 0) return\n        if(currentText === '' && (type==='heading' || !type)) return\n        \n        e.preventDefault()\n        return setNode(null)\n    }\n    const setNode = (newType) => {\n        return Transforms.setNodes(\n            editor,\n            { type: newType },\n            { match: n => Editor.isBlock(editor, n) },\n        )\n    }\n\n    const replaceCharacter = (path) => {\n        insertText(searchResults[index].toUpperCase(), [path[0]])\n        addCharacter(searchResults[index])\n    }\n\n    const replaceCharacterEnter = (path) => {\n        replaceCharacter(path)\n        if(value[path[0]].type==='character') {\n            return insertNodes('dialog')\n        }\n        return editor.insertBreak()\n    }\n\n    const replaceTime = (path) => {\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = Editor.before(editor, endPosition, { unit: 'word' })\n        const range =  Editor.range(editor, startPosition, endPosition)\n        const heading = value[path[0]].children[0].text\n        insertText(heading.toUpperCase(), [path[0]])\n        insertText(searchResults[index], range)\n        return addLocation(heading)\n    }\n\n    const replaceTimeEnter = (path) => {\n        replaceTime(path)\n        insertNodes(null)\n        return insertNodes(null)\n    }\n\n    const checkHeading = (splitText, type) => {\n        if(type==='heading') return false\n        const intExt = splitText[0].toUpperCase()\n        if(intExt === 'INT.' || intExt === 'EXT.' || intExt === 'INT./EXT.') {\n            setNode('heading')\n            return true\n        }\n        return false\n    }\n\n    const insertText = (text, position) => {\n        Transforms.insertText(\n            editor,\n            text, \n            { at: position }\n        )\n    }\n\n    const handleReplace = (path, e, type) => {\n        if(searchResults?.length > 0 && searchType.length > 0 && searchQuery.length>0) {\n            e.preventDefault()\n            setSearchQuery('')\n            setIndex(0)\n            if(searchType==='names') return replaceCharacterEnter(path)\n            if(searchType==='locations') return replaceLocationAddDash(path)\n            return replaceTimeEnter(path)\n        } else if (type === 'character') {\n            e.preventDefault()\n            const character = value[path[0]].children[0].text\n            insertText(character.toUpperCase(), [path[0]])\n            addCharacter(character)\n            return insertNodes('dialog')\n        } else if (type === 'heading') {\n            e.preventDefault()\n            const heading = value[path[0]].children[0].text\n            insertText(heading.toUpperCase(), [path[0]])\n            addLocation(heading)\n            insertNodes(null)\n            return insertNodes(null)\n        }\n    }\n\n    const handleEnter = (path, e, type) => {\n        if(value.length >= 20) e.preventDefault()\n        if(type === 'transition') {\n            editor.insertBreak()\n            return setNode(null)\n        }\n        if(!type && value[path[0]].children[0].text !== value[path[0]].children[0].text.toUpperCase()) {\n            return editor.insertBreak()\n        }\n        if(type === 'dialog') {\n            e.preventDefault()\n            insertNodes(null)\n            if(value[path[0]-1].type==='parenthetical') {\n                addCharacter(value[path[0]-2].children[0].text)\n            }else{\n                addCharacter(value[path[0]-1].children[0].text)\n            }\n            return insertNodes('character')\n        }\n        if(type === 'parenthetical') {\n            e.preventDefault()\n            return insertNodes('dialog')\n        }\n        return handleReplace(path, e, type)\n    }\n\n    const handleTab = (path, e) => {\n        if(searchResults?.length > 0 && searchType.length > 0 && searchQuery.length>0) {\n            e.preventDefault()\n            setSearchQuery('')\n            setIndex(0)\n            if(searchType==='names') return replaceCharacter(path)\n            if(searchType==='locations') return replaceLocationAddDash(path)\n            return replaceTime(path)\n        } \n    }\n\n    const handleUndo = () => {\n        setTarget(null)\n    }\n\n    const modifiers = (e) => {\n        // const { path } = editor.selection.focus\n        if(isHotKey('mod+b', e)) {\n            e.preventDefault()\n            const [match] = Editor.nodes(editor, {\n                match: n => n.bold === true\n            })\n            Transforms.setNodes(\n                editor, \n                {bold: match ? false : true}, \n                {match: n => Text.isText(n), split: true}\n            )\n        }\n        if(isHotKey('mod+i', e)) {\n            e.preventDefault()\n            const [match] = Editor.nodes(editor, {\n                match: n => n.italics === true\n            })\n            Transforms.setNodes(\n                editor, \n                {italics: match ? false : true}, \n                {match: n => Text.isText(n), split: true}\n            )\n        }\n        if(isHotKey('mod+c', e)) return\n        // if(isHotKey('mod+v', e)) e.preventDefault()\n        if(isHotKey('mod+x', e)) return\n        if(isHotKey('mod+z+shift', e)) return handleUndo()\n        if(isHotKey('mod+z', e)) return handleUndo()\n        if(isHotKey('mod', e)) return\n        const anchor = editor.selection.anchor\n        const focus = editor.selection.focus\n        if(anchor.path[0] !== focus.path[0]) return\n        if(anchor.offset !== focus.offset) return\n        \n        if(props.isPreventSave) props.setIsPreventSave(false)\n        if(!editor.selection) return\n        if(searchQuery.length > 0 && searchType.length > 0 && searchResults.length > 0) {\n            if(incrementIndex(e)) return\n        }\n        const { path } = editor.selection.focus\n        const { type } = value[path[0]]\n        const currentText = value[path[0]].children[0].text\n        const splitText = currentText.split(' ')\n        if (e.key==='Backspace') return handleDelete(path, e, type)\n        if (e.key === 'Enter') return handleEnter(path, e, type)\n        // if (e.key === 'Tab') return handleReplace(path, e, type)\n        if (e.key === 'Tab') return handleTab(path, e, type)\n        if (checkTransition(e, currentText, type)) return\n        if (checkHeading(splitText, type)) return\n        if(path[0] > 1) {\n            if (checkDescription(path, e, currentText, type)) return\n        }\n        if (checkCharacter(path, currentText, type)) return\n        if(path[0] > 0) {\n            if (checkParenthetical(path, currentText, e, type)) return\n            if (checkDialog(path, type)) return\n        }\n    }\n\n    const namesOnChange = (newValue, path) => {\n        setSearchType('names')\n        setSearchQuery(newValue[path[0]].children[0].text)\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = Editor.before(editor, endPosition, { unit: 'word' })\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const locationsOnChange = (startValue, joinedValue, path) => {\n        setSearchType('locations')\n        setSearchQuery(joinedValue.split('-')[0].trim())\n        const [endPosition] = Range.edges(editor.selection)\n        let offset = 0\n        const intExt = startValue.toUpperCase()\n        if(intExt=== 'INT.' || intExt === 'EXT.') offset = 4\n        if(intExt=== 'INT./EXT.') offset = 9\n        const startPosition = { offset, path }\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const timesOnChange = (newValue, currentText, path) => {\n        setSearchType('times')\n        timeSearch(newValue)\n        const splitText = currentText.split('-')\n        splitText.pop()\n        const joinedText = splitText.join('')\n        let offset = joinedText.length + 1\n        const [endPosition] = Range.edges(editor.selection)\n        const startPosition = { path, offset }\n        const range = Editor.range(editor, startPosition, endPosition)\n        setTarget(range)\n    }\n\n    const handleOnChange = (newValue) => {\n        const { path } = editor.selection.focus\n        const currentText = newValue[path[0]]?.children[path[1]]?.text\n\n        if((\n            currentText?.length > 0 \n            && (newValue[path[0]].type === 'character'\n            || currentText===currentText.toUpperCase())\n            ) \n            && !currentText?.includes('INT.') \n            && !currentText?.includes('EXT.') \n            && !currentText?.includes('INT./EXT.')\n        ) {\n            namesOnChange(newValue, path)\n        }else if(newValue[path[0]].type === 'heading') {\n            const currentOffset = editor.selection.anchor.offset\n            const splitValue = currentText?.split(' ')\n            const startValue = splitValue.shift()\n            const joinedValue = splitValue.join(' ')\n            const minOffset = startValue.length\n            let maxOffset = Infinity\n            if(joinedValue.includes('-')){\n                const splitDash = joinedValue.split('-')\n                maxOffset = currentText.length - splitDash.length - 4\n            }\n            if(currentOffset > minOffset && currentOffset < maxOffset) {\n                locationsOnChange(startValue, joinedValue, path)\n            } else if (currentOffset > maxOffset) {\n                timesOnChange(newValue, currentText, path)\n            }\n        }else{\n            setTarget(null)\n            setSearchType('')\n        }\n    }\n\n    const sortArray = (array) => {\n        array.sort((a, b)=> b[1] - a[1])\n        return array.map(item=> {\n            return item[0]\n        }) \n    }\n\n    const addLocation = (heading) => {\n        const splitHeading = heading.split(' ')\n        const locationsCopy = {...locationsObj}\n        if(splitHeading.length < 2) return\n        splitHeading.shift()\n        const joined = splitHeading.join(' ')\n        const splitDash = joined.split('-')\n        splitDash.pop()\n        splitDash.join('')\n        const location = splitDash[0].trim().toUpperCase()\n        incrementItem(location, locationsCopy)\n        setLocationsObj(locationsCopy)\n        const locationsArray = Object.entries(locationsCopy)\n        const locationsList = sortArray(locationsArray)\n        setLocations(locationsList)\n    }\n\n    const addCharacter = (characterName) => {\n        const characterUppercase = characterName.toUpperCase()\n        const characterNoParentheses = removeParenthesesFromCharacter(characterUppercase)\n        const characterCopy = {...charactersObj}\n        incrementItem(characterNoParentheses, characterCopy)\n        setCharactersObj(characterCopy)\n        const charactersArray =  Object.entries(characterCopy)\n        const charactersList = sortArray(charactersArray)\n        setCharacters(charactersList)\n    }\n\n    const removeParenthesesFromCharacter = (characterName) => {\n        if(characterName.includes('(')) {\n            const split = characterName.split('(')\n            split.pop()\n            return split.join('').trim()\n        }\n        return characterName\n    }\n\n    const incrementItem = (itemName, itemCount) => {\n        if(itemName.length===0) return\n        if(itemCount[itemName]) {\n            return itemCount[itemName] += 1\n        }else{\n            return itemCount[itemName] = 1\n        }\n    }\n\n    const Leaf = (props) => {\n        let weight \n        if(props.leaf.bold) {\n            weight = 600\n        }else if(props?.children?.props?.parent?.type==='heading') { \n            weight = 600\n        } else {\n            weight = 500\n        }\n        return(\n            <Decorations {...props.attributes}\n                weight={weight}\n                italics={props.leaf.italics ? 'italic' : 'normal'}\n            >\n                {props.children}\n            </Decorations>\n        )\n    }\n\n    const renderLeaf = useCallback(props => {\n        return <Leaf {...props} />\n    }, [])\n\n    return(\n        <Container>\n            <StyledSlate value={value} editor={editor} onChange={newValue => {\n                setValue(newValue)\n                if(editor.selection) {\n                    handleOnChange(newValue)\n                }\n            }}>\n                <StyledEditable autoFocus renderLeaf={renderLeaf} onKeyDown={modifiers} renderElement={renderElement} />\n                {((searchQuery.length > 1 && searchType==='names') || (searchQuery.length > 0 && searchType==='names' && value[editor?.selection?.focus?.path[0]]?.type==='character')) &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n                {searchQuery.length > 0 && searchType==='locations' && searchResults?.length> 0 &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n                {searchQuery.length > 0 && searchType==='times' && searchResults.length> 0 &&\n                <Autocomplete position={position} items={searchResults} index={index} />\n                }\n            </StyledSlate>\n        </Container>\n    )\n}\n\nexport default EditorPreview\n\nconst StyledSlate = styled(Slate)`\n`\n\nconst Container = styled.div`\n    font-family: 'Courier New', Courier, monospace;\n    width: 100%;\n    background-color: white;\n    padding: 50px 60px 50px 60px;\n    border-radius: 5px;\n    min-height: 20vh;\n    margin: 45px 0 35px 0;\n    z-index: 1;\n    box-shadow: 2px 5px 7px rgba(0, 0, 0, .2);\n    @media(max-width: 650px) {\n        padding: 40px 40px 40px 40px;\n    }\n    @media(max-width: 400px) {\n        padding: 40px 25px 40px 25px;\n    }\n`\n\nconst StyledEditable = styled(Editable)`\n    &:focus{\n        box-shadow: none;\n    }\n`","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport EditorPreview from './EditorPreview'\nimport { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { isArrowVisible } from '../../redux/actions/appActions'\n\nconst MainSection = (props) => {\n\n    useEffect(()=> {\n        props.dispatch(isArrowVisible(true))\n        // eslint-disable-next-line\n    }, [])\n\n    return(\n        <Container>\n            <ContentContainer>\n                <Title>Screenwriting, <Span>essentials only.</Span></Title>\n                <Subtitle>Everything you need to write your next best screenplay.</Subtitle>\n                <EditorPreview />\n                <StyledLink to='/writing-app/signup'>\n                    <GetStarted>Get started now</GetStarted>\n                </StyledLink>\n                <TryItAbsolute>\n                    <TryItRelative>\n                        <Arrow isArrowVisible={props.isArrowVisible} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M16 15v4l8-8.035-8-7.965v4s-13.277 2.144-16 14c5.796-6.206 16-6 16-6z\"/></Arrow>\n                        <TryItText isArrowVisible={props.isArrowVisible}>Try it out!</TryItText>\n                    </TryItRelative>\n                </TryItAbsolute>\n            </ContentContainer>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isArrowVisible: state.app.isArrowVisible,\n})\n\nexport default connect(mapStateToProps)(MainSection)\n\nconst Span = styled.span`\n    white-space: nowrap;\n`\n\nconst Arrow = styled.svg`\n    transform: ${props=>props.isArrowVisible ? 'rotate(240deg)' : 'rotate(200deg)'};\n    width: 80px;\n    height: 80px;\n    opacity: ${props=>props.isArrowVisible ? 1 : 0};\n    transition: opacity 400ms ease-in-out, transform 400ms ease-in-out;\n    transform-origin: bottom left;\n    transition-delay: 300ms;\n    @media(max-width: 600px) {\n        transform: rotate(260deg);\n        width: 55px;\n        height: 55px;\n    }\n`\n\nconst TryItText = styled.h3`\n    opacity: ${props=>props.isArrowVisible ? 1 : 0};\n    transition: opacity 400ms ease-in-out;\n    transition-delay: 800ms;\n    position: relative;\n    top: -10px;\n    left: 0px;\n    font-size: 1.25rem;\n    font-weight: 600;\n    @media(max-width: 600px) {\n        font-size: 1.125rem;\n        top: -15px;\n        left: 0px;\n    }\n`\n\nconst TryItRelative = styled.div`\n    position: relative;\n    top: -100px;\n    @media(max-width: 600px) {\n        top: -80px;\n    }\n`\n\nconst TryItAbsolute = styled.div`\n    position: absolute;\n    left: 70%;\n    @media(min-width: 1450px) {\n        left: 60%;\n    }\n    @media(max-width: 400px) {\n        display: none;\n    }\n`\n\nconst ContentContainer = styled.div`\n    padding: 0 30px;\n    width: 80vw;\n    max-width: 800px;\n    @media(max-width: 800px) {\n        width: 100%;\n    }\n`\n\nconst Subtitle = styled.h2`\n    font-size: 1.25rem;\n    font-weight: 400;\n    margin: 20px 0;\n    line-height: 1.2;\n`\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: hsl(184, 30%, 92%);\n    height: 95vh;\n    min-height: 650px;\n    @media(max-width: 600px) {\n        height: 80vh;\n    }\n`\n\nconst GetStarted = styled.div`\n    background-color: black;\n    color: white;\n    padding: 20px;\n    border-radius: 7px;\n    display: inline-block;\n`\n\nconst Title = styled.h1`\n    font-size: 2.75rem;\n    font-weight: 600;\n    @media(max-width: 800px) {\n        font-size: 2.5rem;\n    }\n    @media(max-width: 300px) {\n        font-size: 1.75rem;\n    }\n`\n\nconst StyledLink = styled(Link)`\n    &:focus {\n        box-shadow: none;\n    }\n    &:focus-within {\n        ${GetStarted} {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n        }\n    }\n`","import styled from 'styled-components'\n\nconst FormattingSection = () => {\n    return(\n        <Container>\n            <ContentContainer>\n                <div>\n                    <Title>Leave the formatting to us</Title>\n                    <Subtitle>Redraft formats your script as you type.</Subtitle>\n                </div>\n                <Preview playsInline autoPlay muted loop>\n                    <source src='https://firebasestorage.googleapis.com/v0/b/writing-136ac.appspot.com/o/RedraftDemo.mov?alt=media&token=5f526d06-c7d3-4e8f-8d93-fa06e8d194f7' />\n                </Preview>\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default FormattingSection\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n    padding: 0 30px;\n`\n\nconst Preview = styled.video`\n    width: 40vw;\n    max-width: 700px;\n    box-shadow: 0 10px 10px rgba(0, 0, 0, .3);\n    @media(max-width: 900px) {\n        width: 70vw;\n        height: auto;\n        margin-right: 0px;\n    }\n    @media(max-width: 500px) {\n        width: 100%;\n    }\n`\n\nconst ContentContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    margin: 8% 0;\n    @media(max-width: 900px) {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n    @media(max-width: 600px) {\n        margin: 14% 0;\n    }\n`\n\nconst Title = styled.h1`\n    font-size: 2.7rem;\n    font-weight: 600;\n    max-width: 15ch;\n    @media(max-width: 600px) {\n        font-size: 2.5rem;\n    }\n`\n\nconst Subtitle = styled.h2`\n    font-size: 1.25rem;\n    font-weight: 400;\n    max-width: 30ch;\n    margin: 20px 0;\n    line-height: 1.2;\n`","import styled from 'styled-components'\n\nconst ColorsSection = () => {\n    return(\n        <Container>\n            <ContentContainer>\n                <ImageColorsContainer>\n                    <Image src='https://firebasestorage.googleapis.com/v0/b/writing-136ac.appspot.com/o/dark.png?alt=media&token=a0bc5acd-7950-4998-b106-7fbada394e95' alt='color selection demo' />\n                    <Colors>\n                        {colors.map((color, index)=> {\n                            return(\n                                <Color color={color} key={index} />\n                            )\n                        })}\n                    </Colors>\n                </ImageColorsContainer>\n                <div>\n                    <Title>Make it yours</Title>\n                    <Subtitle>Dark mode, light mode, and everything in between. Customize the app with your favorite colors.</Subtitle>\n                </div>\n            </ContentContainer>\n        </Container>\n    )\n}\n\nconst colors = [\n    '#3e3d4d',\n    '#9d8cbf',\n    '#fbebff',\n    '#6d718a',\n    '#141415',\n]\n\nexport default ColorsSection\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n`\n\nconst ContentContainer = styled.div`\n    padding: 0 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    margin: 4% 0;\n    position: relative;\n    @media(max-width: 900px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n    }\n    @media(max-width: 600px) {\n        flex-direction: column-reverse;\n        align-items: flex-start;\n        margin: 8% 0;\n    }\n`\n\nconst Subtitle = styled.h2`\n    font-size: 1.25rem;\n    font-weight: 400;\n    max-width: 30ch;\n    margin: 20px 0;\n    line-height: 1.2;\n`\n\nconst Title = styled.h1`\n    font-size: 2.7rem;\n    font-weight: 600;\n    @media(max-width: 600px) {\n        font-size: 2.5rem;\n    }\n`\n\nconst Image = styled.img`\n    max-height: auto;\n    width: 40vw;\n    max-width: 700px;\n    box-shadow: 0 10px 10px rgba(0, 0, 0, .3);\n    margin-bottom: 10px;\n    @media(max-width: 900px) {\n        width: 70vw;\n        max-height: none;\n        height: auto;\n        margin-right: 0px;\n    }\n    @media(max-width: 500px) {\n        width: 100%;\n    }\n`\n\nconst ImageColorsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-right: 50px;\n    width: 40vw;\n    max-width: 700px;\n    @media(max-width: 900px) {\n        width: 70vw;\n        max-height: none;\n        height: auto;\n        margin-right: 0px;\n    }\n    @media(max-width: 500px) {\n        width: 100%;\n    }\n`\n\nconst Colors = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`\n\nconst Color = styled.article`\n    background-color: ${props=>props.color};\n    border-radius: 50%;\n    width: 5vw;\n    height: 5vw;\n    box-shadow: 0 10px 10px rgba(0, 0, 0, .1);\n    border: 1px solid rgba(0, 0, 0, .2);\n    @media(max-width: 900px) {\n        width: 8vw;\n        height: 8vw;\n    }\n    @media(max-width: 500px) {\n        width: 12vw;\n        height: 12vw;\n    }\n`","import styled from 'styled-components'\n\nconst OutliningSection = () => {\n    return(\n        <Container>\n            <ContentContainer>\n                <div>\n                    <Title>Outlining tools</Title>\n                    <Subtitle>Virtual notecards make it easy to structure your story.</Subtitle>\n                </div>\n                <Preview playsInline autoPlay muted loop>\n                    <source type='video/mp4' src='https://firebasestorage.googleapis.com/v0/b/writing-136ac.appspot.com/o/OutlineDemoVideo.mov?alt=media&token=658422ff-eaa9-4610-8645-fba4629822d1' />\n                </Preview>\n            </ContentContainer>\n        </Container>\n    )\n}\n\n\nexport default OutliningSection\n\nconst Preview = styled.video`\n    width: 40vw;\n    max-width: 700px;\n    box-shadow: 0 10px 10px rgba(0, 0, 0, .3);\n    @media(max-width: 900px) {\n        width: 70vw;\n        max-height: none;\n        height: auto;\n        margin-right: 0px;\n    }\n    @media(max-width: 500px) {\n        width: 100%;\n    }\n`\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n`\n\nconst Subtitle = styled.h2`\n    font-size: 1.25rem;\n    font-weight: 400;\n    max-width: 30ch;\n    margin: 20px 0;\n    line-height: 1.2;\n`\n\nconst ContentContainer = styled.div`\n    padding: 0 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    margin: 8% 0;\n    position: relative;\n    @media(max-width: 900px) {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n    @media(max-width: 600px) {\n        margin: 14% 0;\n    }\n`\n\nconst Title = styled.h1`\n    font-size: 2.7rem;\n    font-weight: 600;\n    @media(max-width: 600px) {\n        font-size: 2.5rem;\n    }\n`","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return(\n        <Container>\n            <ContentContainer>\n                <Title>Ready to start writing?</Title>\n                <StyledLink to='/writing-app/signup'>\n                    <GetStarted>Sign up now</GetStarted>\n                </StyledLink>\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default Footer\n\nconst Container = styled.section`\n    display: flex;\n    justify-content: center;\n    background-color: hsl(184, 30%, 92%);\n`\n\n\nconst GetStarted = styled.div`\n    background-color: black;\n    color: white;\n    padding: 20px;\n    border-radius: 7px;\n    display: inline-block;\n    @media(max-width: 500px) {\n        font-size: .9rem;\n    }\n`\n\nconst ContentContainer = styled.div`\n    padding: 0 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 10vh;\n    min-height: 300px;\n    position: relative;\n    @media(max-width: 600px) {\n        height: 28vh;\n        min-height: 200px;\n    }\n`\n\nconst Title = styled.h1`\n    font-size: 2.25rem;\n    font-weight: 600;\n    margin-bottom: 15px;\n    white-space: nowrap;\n    @media(max-width: 600px) {\n        font-size: 2rem;\n    }\n    @media(max-width: 500px) {\n        font-size: 1.65rem;\n    }\n    @media(max-width: 300px) {\n        font-size: 1.25rem;\n    }\n`\n\nconst StyledLink = styled(Link)`\n    &:focus {\n        box-shadow: none;\n    }\n    &:focus-within {\n        ${GetStarted} {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n        }\n    }\n`","// import styled from 'styled-components'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport { useEffect } from 'react'\nimport MainSection from './MainSection'\nimport FormattingSection from './FormattingSection'\nimport ColorsSection from './ColorsSection'\nimport OutliningSection from './OutliningSection'\nimport Footer from './Footer'\nimport { colors } from '../../redux/actions/appActions'\nimport { connect } from 'react-redux'\n\nconst LandingPage = (props) => {\n\n    useEffect(()=> {\n        props.setIsLoading(false)\n        props.dispatch(colors({\n            background: '#fafafa',\n            primaryText: 'black',\n        }))\n        // eslint-disable-next-line\n    }, [])\n\n    return(\n        <Container>\n            <Header />\n            <MainSection />\n            <FormattingSection />\n            <ColorsSection />\n            <OutliningSection />\n            <Footer />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({})\n\nexport default connect(mapStateToProps)(LandingPage)\n\nconst Container = styled.div`\n    position: relative;\n`","import styled from 'styled-components'\nimport { db } from '../../../firebase'\nimport { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { generateID } from '../../../globalFunctions'\nimport { updateLastModified } from '../../../globalFunctions'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\nimport { \n    rootDocs,\n    layerOneDocs,\n    layerTwoDocs,\n    layerThreeDocs\n} from '../../../redux/actions/appActions'\n\nconst CreateDocModal = (props) => {\n    const [name, setName] = useState('')\n\n    const createProject = () => {\n        if (props.createType==='folder' && props.currentLayer < 3) return createFolder()\n        return startFileCreation(props.createType)\n    }\n\n    const getParentId = () => {\n        if(props.breadcrumbs.length === 1) return props.userData.userID\n        return props.breadcrumbs[props.breadcrumbs.length - 1].docID\n    }\n\n    const createFolder = () => {\n        const parentID = getParentId()\n        const timestamp = Date.now()\n        const folderProperties = {\n            name,\n            parentID: String(parentID),\n            type: 'folder',\n            docID: String(timestamp),\n            lastModified: timestamp,\n        }\n        addFileToPreviews(String(timestamp), folderProperties, props.setIsCreateProjectModal)\n    }\n\n    const addDocID = (docID) => {\n        db.collection('docID')\n        .doc(docID)\n        .set({\n            docID,\n        })\n        .catch(err=> console.log(err))\n    }\n\n    const createFile = (parentID, docID, type) => {\n        const timestamp = Date.now()\n        const fileProperties = {\n            name,\n            type,\n            parentID: String(parentID),\n            docID: String(docID),\n        }\n        addFileToPreviews(docID, {...fileProperties, lastModified: timestamp})\n        let text = (type==='notes' ? '' : [])\n        if(type==='outline') fileProperties['cardsPerRow'] = 2\n        addFileToDatabase(docID, {...fileProperties, text}, type)\n    }\n\n    const addFileToPreviews = (docID, fileProperties, closeModal) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .doc(docID)\n        .set({\n            ...fileProperties\n        })\n        .then(()=> {\n            addDocToStore(fileProperties)\n            if(closeModal) closeModal(false)\n        })\n    }\n\n    const addFileToDatabase = (docID, fileProps, type) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(docID)\n        .set({\n            ...fileProps\n        })\n        .then(()=> {\n            openFileInNewTab(type, docID)\n            props.setIsCreateProjectModal(false)\n            if(props.projectSelectedData.docID) {\n                updateLastModified(props.userData.userID, String(props.projectSelectedData.docID))\n            }\n        })\n    }\n\n    const openFileInNewTab = (type, docID) => {\n        const location = `/writing-app/edit/${type}/${docID}`\n        window.open(location, \"_blank\") || (document.location = location)\n    }\n\n    const startFileCreation = (type) => {\n        const parentID = getParentId()\n        generateIDAndCreateFile(parentID, type)\n    }\n\n    const generateIDAndCreateFile = (parentID, type) => {\n        const docID = generateID()\n        db.collection('docID')\n        .where('docID', '==', docID)\n        .get()\n        .then(data=> {\n            if(data.empty) {\n                createFile(parentID, docID, type)\n                addDocID(docID)\n            }else{\n                generateIDAndCreateFile()\n            }\n        })\n    }\n\n    const onEnter = (e) => {\n        if(e.key==='Enter') {\n            e.preventDefault()\n            createProject()\n        }\n    }\n\n    const addDocToStore = (data) => {\n        if(props.currentLayer===0) props.dispatch(rootDocs([data, ...props.rootDocs]))\n        if(props.currentLayer===1) props.dispatch(layerOneDocs([data, ...props.layerOneDocs]))\n        if(props.currentLayer===2) props.dispatch(layerTwoDocs([data, ...props.layerTwoDocs]))\n        if(props.currentLayer===3) props.dispatch(layerThreeDocs([data, ...props.layerThreeDocs]))\n    }\n \n    return (\n        <Modal aria-label='create document' isOpen={props.isCreateProjectModal} onDismiss={()=>props.setIsCreateProjectModal(false)}>\n            <CloseDialog aria-label='close dialog' onClick={()=>props.setIsCreateProjectModal(false)}>\n                <IconComponent><path d=\"M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z\"/></IconComponent>\n            </CloseDialog>\n            <Header>Create new {props.createType}</Header>\n            <DocumentTitle aria-label='document title' onKeyDown={onEnter} autoComplete='off' onChange={(e)=>setName(e.target.value)} />\n            <div>\n                <Cancel onClick={()=>props.setIsCreateProjectModal(false)}>Cancel</Cancel>\n                <Create onClick={createProject}>Create project</Create>\n            </div>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    breadcrumbs: state.dashboard.breadcrumbs,\n    currentLayer: state.app.currentLayer,\n    rootDocs: state.app.rootDocs,\n    layerOneDocs: state.app.layerOneDocs,\n    layerTwoDocs: state.app.layerTwoDocs,\n    layerThreeDocs: state.app.layerThreeDocs,\n})\n\nexport default connect(mapStateToProps)(CreateDocModal)\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n    text-align: center;\n`\n\nconst CloseDialog = styled.button`\n    align-self: flex-end;\n`\n\nconst Create = styled.button`\n    background-color: hsl(0, 0%, 20%);\n    height: 40px;\n    width: 130px;\n    border: none;\n    color: white;\n    background-color: var(--primary-text);\n    color: var(--sidebar);\n`\n\nconst Cancel = styled.button`\n    background-color: transparent;\n    height: 40px;\n    width: 90px;\n    border: none;\n    margin-right: 10px;\n`\n\nconst DocumentTitle = styled.input`\n    width: 200px;\n    min-height: 40px;\n    font-size: 1.25rem;\n    background-color: var(--secondary);\n    color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n`\n\nconst Modal = styled(Dialog)`\n    background-color: var(--secondary);\n    height: 300px;\n    width: 500px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    border-radius: 15px;\n    display: flex;\n    margin: 0;\n    box-shadow: none;\n    flex-direction: column;\n    padding: 0px 20px 20px 20px;\n    align-items: center;\n    justify-content: space-evenly;\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`","import styled from 'styled-components'\nimport IconComponent from '../../../Icons/IconComponent'\nimport {\n    MenuItem,\n} from \"@reach/menu-button\";\n\nconst NewDocListItem = (props) => {\n    return(\n        <Item onSelect={()=>props.openModal(props.docType)}>\n            <IconContainer>\n                <IconComponent>{props.children}</IconComponent>\n            </IconContainer>\n            <Type>{props.docType}</Type>\n        </Item>\n    ) \n}\n\nexport default NewDocListItem\n\nconst IconContainer = styled.div`\n    transform: scale(.8);\n    margin-right: 5px;\n`\n\nconst Item = styled(MenuItem)`\n    font-size: 1rem;\n    display: flex;\n    align-items: center;\n    &:hover{\n        background-color: var(--highlight);\n    }\n`\n\nconst Type = styled.p`\n    text-transform: capitalize;\n`","import styled from 'styled-components'\nimport NewDocListItem from './NewDocListItem'\nimport { connect } from 'react-redux'\nimport \"@reach/menu-button/styles.css\";\nimport {\n    Menu,\n    MenuList,\n    MenuButton,\n} from \"@reach/menu-button\";\n\nconst CreateDocButton = (props) => {\n\n    const openModal = (type) => {\n        props.setIsCreateProjectModal(true)\n        props.setCreateType(type)\n    }\n\n    return(\n        <Menu>\n            <CreateNew><Plus aria-hidden>+</Plus> Create new</CreateNew>\n            <List>\n                {props.currentLayer!==3 &&\n                <NewDocListItem docType='folder' openModal={openModal}><path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\"/></NewDocListItem>\n                }\n                <NewDocListItem docType='screenplay' openModal={openModal}><path d=\"M21.155 8.64c-.909 1.519-2.327 3.067-4.097 3.004-.413.706-.852 1.677-1.339 2.803l-1.312.553c.936-2.343 2.231-4.961 3.698-6.994-.67.529-1.746 1.637-2.662 2.783-1.098-1.828-.3-3.691.973-5.179.021.641.359 1.196.601 1.475-.087-.53-.114-1.489.195-2.351.718-.732 1.364-1.271 2.113-1.76-.083.478.08 1.026.262 1.361.024-.49.224-1.43.521-1.84.924-.727 2.332-1.373 3.892-1.495-.081.973-.436 2.575-1.024 3.604-.515.404-1.221.68-1.791.833.493.089 1.031.077 1.494-.001-.269.743-.552 1.428-.998 2.276-.679.468-1.578.732-2.203.825.46.187 1.272.245 1.677.103zm-13.841 3.805l.645.781 4.773-2.791-.668-.768-4.75 2.778zm6.96-.238l-.668-.767-4.805 2.808.645.781 4.828-2.822zm4.679.007c-.421.203-.851.341-1.286.398-.12.231-.246.494-.377.773l.298.342c.623.692.459 1.704-.376 2.239-.773.497-5.341 3.376-6.386 4.035-.074-.721-.358-1.391-.826-1.948-.469-.557-6.115-7.376-7.523-9.178-.469-.6-.575-1.245-.295-1.816.268-.549.842-.918 1.43-.918.919 0 1.408.655 1.549 1.215.16.641-.035 1.231-.623 1.685l1.329 1.624 7.796-4.446c1.422-1.051 1.822-2.991.93-4.513-.618-1.053-1.759-1.706-2.978-1.706-1.188 0-.793-.016-9.565 4.475-1.234.591-2.05 1.787-2.05 3.202 0 .87.308 1.756.889 2.487 1.427 1.794 7.561 9.185 7.616 9.257.371.493.427 1.119.15 1.673-.277.555-.812.886-1.429.886-.919 0-1.408-.655-1.549-1.216-.156-.629.012-1.208.604-1.654l-1.277-1.545c-.822.665-1.277 1.496-1.377 2.442-.232 2.205 1.525 3.993 3.613 3.993.596 0 1.311-.177 1.841-.51l9.427-5.946c.957-.664 1.492-1.781 1.492-2.897 0-.745-.24-1.454-.688-2.003l-.359-.43zm-7.933-10.062c.188-.087.398-.134.609-.134.532 0 .997.281 1.243.752.312.596.226 1.469-.548 1.912l-5.097 2.888c-.051-1.089-.579-2.081-1.455-2.732l5.248-2.686zm2.097 13.383l.361-.905.249-.609-3.449 2.017.645.781 2.194-1.284z\"/></NewDocListItem>\n                <NewDocListItem docType='outline' openModal={openModal}><path d=\"M4 4v20h20v-20h-20zm18 18h-16v-13h16v13zm-3-3h-10v-1h10v1zm0-3h-10v-1h10v1zm0-3h-10v-1h10v1zm2-11h-19v19h-2v-21h21v2z\"/></NewDocListItem>\n                <NewDocListItem docType='notes' openModal={openModal}><path d=\"M4 22v-20h16v11.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-14.386h-20v24h10.189c3.163 0 9.811-7.223 9.811-9.614zm-5-1.386h-10v-1h10v1zm0-4h-10v1h10v-1zm0-3h-10v1h10v-1z\"/></NewDocListItem>\n            </List>\n        </Menu>\n    )\n}\n\nconst mapStateToProps = state => ({\n    currentLayer: state.app.currentLayer,\n})\n\nexport default connect(mapStateToProps)(CreateDocButton)\n\nconst Plus = styled.span`\n    font-size: 1.75rem;\n    margin-right: 5px;\n    background-color: inherit;\n    color: inherit;\n`\n\nconst CreateNew = styled(MenuButton)`\n    background-color: var(--primary-text);\n    position: relative;\n    color: var(--sidebar);\n    padding: 12px 15px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    font-size: .875rem;\n`\n\nconst List = styled(MenuList)`\n    background-color: var(--sidebar);\n    position: absolute;\n    left: 10%;\n`","export const CURRENT_PROJECT_ID = 'CURRENT_PROJECT_ID'\nexport const NOTES_DATA = 'NOTES_DATA'\nexport const BREADCRUMBS = 'BREADCRUMBS'\nexport const SORT_METHOD = 'SORT_METHOD'\nexport const RESET_DASHBOARD = 'RESET_DASHBOARD'\n\nexport function resetDashboard() {\n    return(dispatch) => {\n        dispatch({type: RESET_DASHBOARD})\n    }\n}\n\nexport function sortMethod(data) {\n    return(dispatch) => {\n        dispatch({type: SORT_METHOD, payload: data})\n    }\n}\n\nexport function breadcrumbs(data) {\n    return(dispatch) => {\n        dispatch({type: BREADCRUMBS, payload: data})\n    }\n}\n\nexport function currentProjectID(data) {\n    return(dispatch) => {\n        dispatch({type: CURRENT_PROJECT_ID, payload: data})\n    }\n}","import styled from \"styled-components\";\nimport { connect } from 'react-redux'\nimport IconComponent from '../../Icons/IconComponent'\nimport { \n    currentLayer,\n    layerOneDocs,\n    layerTwoDocs,\n    layerThreeDocs,\n } from '../../redux/actions/appActions'\nimport { breadcrumbs } from '../../redux/actions/dashboardActions'\n\nconst Breadcrumbs = (props) => {\n\n    const changeCurrentLayer = (indexToRoute) => props.dispatch(currentLayer(indexToRoute))\n\n    const removeBreadcrumbs = (indexToRoute) => {\n        const crumbsCopy = [...props.breadcrumbs]\n        const breadcrumbsReduced = crumbsCopy.slice(0, indexToRoute+1)\n        props.dispatch(breadcrumbs(breadcrumbsReduced))\n    }\n\n    const clearFilesFromState = (indexToRoute) => {\n        if(indexToRoute <= 0) props.dispatch(layerOneDocs([]))\n        if(indexToRoute <= 1) props.dispatch(layerTwoDocs([]))\n        if(indexToRoute <= 2) props.dispatch(layerThreeDocs([]))\n    }\n\n    const breadcrumbChangeRoute = (indexToRoute) => {\n        changeCurrentLayer(indexToRoute)\n        removeBreadcrumbs(indexToRoute)\n        clearFilesFromState(indexToRoute)\n    }\n\n    return(\n        <Container>\n            {props.breadcrumbs.map((crumb, index)=> {\n                return(\n                    <CrumbContainer key={index}>\n                        {index === props.breadcrumbs.length -1 ? \n                        <LastCrumb>{crumb.name}</LastCrumb>\n                        :\n                        <Crumb onClick={()=>breadcrumbChangeRoute(index)}>{crumb.name}</Crumb>\n                        }\n                        {index !== props.breadcrumbs.length -1 &&\n                        <IconContainer>\n                            <IconComponent><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></IconComponent>\n                        </IconContainer>\n                        }\n                    </CrumbContainer>\n                )\n            })}\n        </Container>\n    )\n} \n\nconst mapStateToProps = state => ({\n    breadcrumbs: state.dashboard.breadcrumbs,\n    currentLayer: state.app.currentLayer,\n    layerOneDocs: state.app.layerOneDocs,\n    layerTwoDocs: state.app.layerTwoDocs,\n    layerThreeDocs: state.app.layerThreeDocs,\n})\n\nexport default connect(mapStateToProps)(Breadcrumbs)\n\nconst IconContainer = styled.div`\n    opacity: 0.6;\n    margin: 0 8px;\n`\n\nconst CrumbContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n`\n\nconst LastCrumb = styled.h2`\n    font-size: 1.75rem;\n    font-weight: 500;\n`\n\nconst Crumb = styled.button`\n    cursor: pointer;\n    font-size: 1.75rem;\n    font-weight: 500;\n    opacity: .6;\n    &:hover{\n        opacity: 1;\n    }\n`\n\nconst Container = styled.nav`\n    display: flex;\n    margin: 20px 0;\n    flex-wrap: wrap;\n`","import styled from 'styled-components'\nimport IconComponent from '../../../../Icons/IconComponent'\n\nconst FileIcons = (props) => {\n    return(\n        <DocIconNameContainer>\n            <IconsContainer hide='0px'>\n                {props.docType==='folder' &&\n                    <DocIcon><IconComponent><path d=\"M6.083 4c1.38 1.612 2.578 3 4.917 3h11v13h-20v-16h4.083zm.917-2h-7v20h24v-17h-13c-1.629 0-2.305-1.058-4-3z\"/></IconComponent></DocIcon>\n                }\n                {props.docType==='screenplay' &&\n                    <DocIcon><IconComponent><path d=\"M21.155 8.64c-.909 1.519-2.327 3.067-4.097 3.004-.413.706-.852 1.677-1.339 2.803l-1.312.553c.936-2.343 2.231-4.961 3.698-6.994-.67.529-1.746 1.637-2.662 2.783-1.098-1.828-.3-3.691.973-5.179.021.641.359 1.196.601 1.475-.087-.53-.114-1.489.195-2.351.718-.732 1.364-1.271 2.113-1.76-.083.478.08 1.026.262 1.361.024-.49.224-1.43.521-1.84.924-.727 2.332-1.373 3.892-1.495-.081.973-.436 2.575-1.024 3.604-.515.404-1.221.68-1.791.833.493.089 1.031.077 1.494-.001-.269.743-.552 1.428-.998 2.276-.679.468-1.578.732-2.203.825.46.187 1.272.245 1.677.103zm-13.841 3.805l.645.781 4.773-2.791-.668-.768-4.75 2.778zm6.96-.238l-.668-.767-4.805 2.808.645.781 4.828-2.822zm4.679.007c-.421.203-.851.341-1.286.398-.12.231-.246.494-.377.773l.298.342c.623.692.459 1.704-.376 2.239-.773.497-5.341 3.376-6.386 4.035-.074-.721-.358-1.391-.826-1.948-.469-.557-6.115-7.376-7.523-9.178-.469-.6-.575-1.245-.295-1.816.268-.549.842-.918 1.43-.918.919 0 1.408.655 1.549 1.215.16.641-.035 1.231-.623 1.685l1.329 1.624 7.796-4.446c1.422-1.051 1.822-2.991.93-4.513-.618-1.053-1.759-1.706-2.978-1.706-1.188 0-.793-.016-9.565 4.475-1.234.591-2.05 1.787-2.05 3.202 0 .87.308 1.756.889 2.487 1.427 1.794 7.561 9.185 7.616 9.257.371.493.427 1.119.15 1.673-.277.555-.812.886-1.429.886-.919 0-1.408-.655-1.549-1.216-.156-.629.012-1.208.604-1.654l-1.277-1.545c-.822.665-1.277 1.496-1.377 2.442-.232 2.205 1.525 3.993 3.613 3.993.596 0 1.311-.177 1.841-.51l9.427-5.946c.957-.664 1.492-1.781 1.492-2.897 0-.745-.24-1.454-.688-2.003l-.359-.43zm-7.933-10.062c.188-.087.398-.134.609-.134.532 0 .997.281 1.243.752.312.596.226 1.469-.548 1.912l-5.097 2.888c-.051-1.089-.579-2.081-1.455-2.732l5.248-2.686zm2.097 13.383l.361-.905.249-.609-3.449 2.017.645.781 2.194-1.284z\"/></IconComponent></DocIcon>\n                }\n                {props.docType==='notes' &&\n                    <DocIcon><IconComponent><path d=\"M4 22v-20h16v11.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-14.386h-20v24h10.189c3.163 0 9.811-7.223 9.811-9.614zm-5-1.386h-10v-1h10v1zm0-4h-10v1h10v-1zm0-3h-10v1h10v-1z\"/></IconComponent></DocIcon>\n                }\n                {props.docType==='outline' &&\n                    <DocIcon><IconComponent><path d=\"M4 4v20h20v-20h-20zm18 18h-16v-13h16v13zm-3-3h-10v-1h10v1zm0-3h-10v-1h10v1zm0-3h-10v-1h10v1zm2-11h-19v19h-2v-21h21v2z\"/></IconComponent></DocIcon>\n                }\n            </IconsContainer>\n            <Name>{props.docName}</Name>\n        </DocIconNameContainer>\n    )\n}\n\nexport default FileIcons\n\nconst IconsContainer = styled.div`\n    @media(max-width: ${props=>props.hide}) {\n        display: none;\n    }\n`\n\nconst Name = styled.p`\n    word-break: break-all;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n`\n\nconst DocIconNameContainer = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst DocIcon = styled.div`\n    margin-right: 10px;\n    @media(max-width: 800px) {\n        transform: scale(.8);\n    }\n`","import styled from 'styled-components'\nimport IconComponent from '../../../../Icons/IconComponent'\n\nconst ModifierIcon = (props) => {\n    return(\n        <IconBackgroundContainer aria-label={props.ariaLabel} onClick={(e)=>props.openModal(e)} label={props.labelName} >\n            <IconTitle>{props.title}</IconTitle>\n            <IconBackground />\n            <Icon><IconComponent>\n                {props.children}\n            </IconComponent></Icon>\n        </IconBackgroundContainer>\n    )\n}\n\nexport default ModifierIcon\n\nconst IconTitle = styled.div`\n    opacity: 0;\n    transition: opacity 200ms ease-in-out;\n    background-color: var(--primary-text);\n    min-height: 20px;\n    min-width: 50px;\n    position: absolute;\n    top: 165%;\n    left: 50%;\n    transform: translate(-50%, -50%); \n    border-radius: 5px;\n    color: var(--sidebar);\n    vertical-align: middle;\n    padding: 10px;\n`\n\nconst IconBackground = styled.div`\n    opacity: 0;\n    transition: opacity 200ms ease-in-out;\n    height: 35px;\n    width: 35px;\n    position: relative;\n    border-radius: 50%;\n    background-color: var(--sidebar);\n    @media(hover: hover) {\n        &:hover{\n            opacity: 1;\n        }\n        &:focus{\n            opacity: 1;\n        }\n        &:not(:hover) {\n            &:active{\n                opacity: 1;\n            }\n        }\n    }\n`\n\nconst IconBackgroundContainer = styled.button`\n    position: relative;\n    margin-right: 10px;\n    @media(hover: hover) {\n        &:hover{\n            ${IconBackground} {\n                opacity: 1;\n            }\n            ${IconTitle} {\n                opacity: 1;\n            }\n        }\n        &:focus{\n            ${IconBackground} {\n                opacity: 1;\n            }\n            ${IconTitle} {\n                opacity: 1;\n            }\n        }\n       \n        &:not(:hover) {\n            &:active{\n                ${IconBackground} {\n                opacity: 1;\n                }\n                ${IconTitle} {\n                    opacity: 1;\n                }\n            }\n        }\n    }\n`\n\nconst Icon = styled.div`\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%) scale(.7);\n`","import styled from 'styled-components'\nimport FileIcons from '../Table/FileIcons'\nimport ModifierIcon from '../Table/ModifierIcon'\nimport moment from 'moment'\n\nconst TableBodyComponent = (props) => {\n    return(\n        <TableBody role='row'>\n            {props.folderMap[props.currentLayer]?.map((doc, index)=> {\n                return(\n                    <Row id='projects-table-row' tabIndex='0' onKeyDown={(e)=>props.buttonPress(e.code, doc.type, doc.docID, doc.name)} role='button' onFocus={()=>props.selectProject(doc, index)} onClick={()=>props.selectItem(doc.type, doc.docID, doc.name)} key={index}>\n                        <Cell role='cell'>\n                            <FileIcons docType={doc.type} docName={doc.name} />\n                        </Cell>\n                        <Cell aria-label={`Document type: ${doc.type}`} hide='550px' role='cell'>{doc.type}</Cell>\n                        <CellDate aria-label={`Last modified: ${moment(doc.lastModified).format('ll')}`} hide='550px' role='cell'><Date>{moment(doc.lastModified).format('ll')}</Date></CellDate>\n                        <Cell hide='550px' role='cell'>\n                            <IconContainer>\n                                <ModifierIcon ariaLabel='Rename document' title='Rename' openModal={props.showRenameProject} labelName='rename file'>\n                                    <path d=\"M18.363 8.464l1.433 1.431-12.67 12.669-7.125 1.436 1.439-7.127 12.665-12.668 1.431 1.431-12.255 12.224-.726 3.584 3.584-.723 12.224-12.257zm-.056-8.464l-2.815 2.817 5.691 5.692 2.817-2.821-5.693-5.688zm-12.318 18.718l11.313-11.316-.705-.707-11.313 11.314.705.709z\"/>\n                                </ModifierIcon>\n                                <ModifierIcon ariaLabel='Delete document' title='Delete' openModal={props.showDeleteProject} labelName='delete file'>\n                                    <path d=\"M9 19c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5-17v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712zm-3 4v16h-14v-16h-2v18h18v-18h-2z\"/>\n                                </ModifierIcon>\n                            </IconContainer>\n                        </Cell>\n                    </Row>\n                )\n            })}\n        </TableBody>\n    )\n}\n\nexport default TableBodyComponent\n\nconst Date = styled.p`\n    white-space: nowrap;\n`\n\nconst IconContainer = styled.div`\n    display: flex;\n    @media(hover: hover) {\n        &:not(:hover) {\n            opacity: 0;\n        }\n    }\n`\n\nconst TableBody = styled.div`\n    display: table-row-group;\n`\n\nconst Row = styled.div`\n    cursor: pointer;\n    height: 65px;\n    display: table-row;\n    background-color: var(--sidebar);\n    transition: background-color 70ms ease-in-out;\n    @media(hover: hover) {\n        &:hover{ \n            background-color: var(--highlight);\n            ${IconContainer} {\n                opacity: 1;\n                transition: opacity 500ms ease-in-out;\n            }\n        }\n        &:not(:hover) {\n        }\n    }\n    &:focus-within{ \n        background-color: var(--highlight);\n        ${IconContainer} {\n            opacity: 1;\n            transition: opacity 500ms ease-in-out;\n        }\n    }\n    &:active{\n        background-color: var(--highlight);\n        ${IconContainer} {\n            opacity: 1;\n            transition: opacity 500ms ease-in-out;\n        }\n    }\n    &:first-of-type {\n        border-top-left-radius: 10px;\n        border-bottom-left-radius: 10px;\n    }\n    &:last-of-type {\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n    }\n`\n\nconst Cell = styled.div`\n    width: 0px;\n    display: table-cell;\n    padding: 15px 20px;\n    vertical-align: middle;\n    &:first-of-type {\n        border-top-left-radius: 10px;\n        border-bottom-left-radius: 10px;\n    }\n    &:last-of-type {\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n    }\n    @media(max-width: ${props=>props.hide}) {\n        display: none;\n    }\n`\n\nconst CellDate = styled.div`\n    width: 0px;\n    display: table-cell;\n    padding: 15px 20px;\n    vertical-align: middle;\n    @media(max-width: ${props=>props.hide}) {\n        border-top-right-radius: 10px;\n        border-bottom-right-radius: 10px;\n    }\n`","import styled from 'styled-components'\nimport { db } from '../../../firebase'\nimport { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Dialog } from \"@reach/dialog\";\nimport IconComponent from '../../../Icons/IconComponent'\nimport \"@reach/dialog/styles.css\";\nimport { \n    rootDocs,\n    layerOneDocs,\n    layerTwoDocs,\n    layerThreeDocs,\n} from '../../../redux/actions/appActions'\n\nconst RenameFileModal = (props) => {\n    const [name, setName] = useState('')\n\n    const updateFilesFoldersName = () => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .doc(String(props.projectSelectedData.docID))\n        .update({\n            name,\n        })\n    }\n\n    const updateFilesName = () => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(String(props.projectSelectedData.docID))\n        .update({\n            name,\n        })\n    }\n\n    const renameFile = () => {\n        updateFilesFoldersName()\n        .then(()=> {\n            renameStoreDocs()\n            props.setShowRenameModal(false)\n        })\n        if(props.projectSelectedData.type!=='folder') {\n            updateFilesName()\n            .catch((err)=>console.log(err))\n        }\n    }\n\n    const folderMap = {\n        0: props.rootDocs,\n        1: props.layerOneDocs,\n        2: props.layerTwoDocs,\n        3: props.layerThreeDocs,\n    }\n\n    const renameStoreDocs = () => {\n        let renamedItems = folderMap[props.currentLayer]\n        renamedItems[props.projectSelectedData.currentIndex].name = name\n        if(props.currentLayer===0) return props.dispatch(rootDocs(renamedItems))\n        if(props.currentLayer===1) return props.dispatch(layerOneDocs(renamedItems))\n        if(props.currentLayer===2) return props.dispatch(layerTwoDocs(renamedItems))\n        if(props.currentLayer===3) return props.dispatch(layerThreeDocs(renamedItems))\n    }\n\n    const closeModal = (e) => {\n        if(e.code==='Enter' || e.code==='Space' || e.code==='Escape') {\n            e.preventDefault()\n            props.setShowRenameModal(false)\n        }\n    }\n\n    const renameFileOnKeyDown = (e) => {\n        if(e.code==='Enter' || e.code==='Space' || e.code==='Escape') {\n            e.preventDefault()\n            renameFile()\n        }\n    }\n\n    const onEnter = (e) => {\n        if(e.key==='Enter') {\n            e.preventDefault()\n            renameFile()\n        }\n    }\n\n    return (\n        <Container>\n            <NewModal aria-label={`change name of ${props.projectSelectedData.name}`} isOpen={props.showRenameModal} onDismiss={()=>props.setShowRenameModal(false)}>\n                <CloseDialog aria-label='close rename dialog' onKeyDown={closeModal} onMouseDown={()=>props.setShowRenameModal(false)} id='rename-doc-close-button'>\n                    <IconComponent><path d=\"M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z\"/></IconComponent>\n                </CloseDialog>\n                <Header>Rename {props.projectSelectedData.type}</Header>\n                <DocumentTitle aria-label='document title' onKeyDown={onEnter} defaultValue={props.projectSelectedData.name} autoComplete='off' id='rename-file-input' onChange={(e)=>setName(e.target.value)} />\n                <div>\n                    <Cancel onKeyDown={closeModal} onMouseDown={()=>props.setShowRenameModal(false)}>Cancel</Cancel>\n                    <Create onKeyDown={renameFileOnKeyDown} onMouseDown={renameFile}>Rename</Create>\n                </div>\n            </NewModal>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    currentLayer: state.app.currentLayer,\n    rootDocs: state.app.rootDocs,\n    layerOneDocs: state.app.layerOneDocs,\n    layerTwoDocs: state.app.layerTwoDocs,\n    layerThreeDocs: state.app.layerThreeDocs,\n})\n\nexport default connect(mapStateToProps)(RenameFileModal)\n\nconst CloseDialog = styled.button`\n    align-self: flex-end;\n`\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n`\n\nconst Create = styled.button`\n    background-color: var(--primary-text);\n    height: 40px;\n    width: 130px;\n    border: none;\n    color: var(--sidebar);\n`\n\nconst Cancel = styled.button`\n    background-color: transparent;\n    height: 40px;\n    width: 90px;\n    border: none;\n    margin-right: 5px;\n    color: var(--primary-text);\n`\n\nconst DocumentTitle = styled.input`\n    width: 200px;\n    min-height: 40px;\n    font-size: 1.25rem;\n    color: var(--primary-text);\n    background-color: var(--secondary);\n    border: 1px solid var(--primary-text);\n`\n\nconst NewModal = styled(Dialog)`\n    background-color: var(--secondary);\n    height: 300px;\n    width: 500px;\n    border-radius: 15px;\n    flex-direction: column;\n    padding: 20px 50px;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    position: absolute;\n    box-shadow: none;\n    margin: 0;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`\n\nconst Container = styled.div`\n    height: 100%;\n`","import styled from 'styled-components'\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/dialog/styles.css\";\nimport { connect } from 'react-redux'\nimport { db } from '../../../firebase'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { \n    rootDocs,\n    layerOneDocs,\n    layerTwoDocs,\n    layerThreeDocs,\n} from '../../../redux/actions/appActions'\n\nconst DeleteDocModal = (props) => {\n\n    const initialDelete = (docData) => {\n        deleteDoc(docData)\n        removeDocFromStore(docData.currentIndex)\n    }\n\n    const deleteDoc = (docData) => {\n        if(docData.type==='folder') return deleteFolder(docData.docID)\n        return deleteFileAndPreview(docData.docID)\n    }\n\n    const deleteFile = (docID) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files')\n        .doc(String(docID))\n        .delete()\n        .catch(err=>console.log(err))\n    }\n\n    const deletePreview = (docID) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .doc(String(docID))\n        .delete()\n        .catch(err=>console.log(err))\n    }\n\n    const deleteFileAndPreview = (docID) => {\n        deleteFile(docID)\n        deletePreview(docID)\n        deleteDatabaseID(docID)\n        props.setShowDeleteModal(false)\n    }\n\n    const getFolderContents = (docID) => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .where('parentID', '==', String(docID))\n        .get()\n    }\n    \n    const deleteFolderContents = () => {\n        getFolderContents()\n        .then((data)=> {\n            data.forEach(item=> {\n               deleteDoc(item.data())\n            })\n        })\n    }\n  \n    const deleteFolder = (docID) => {\n        deleteFolderContents()\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .doc(String(docID))\n        .delete()\n        .catch(err=>console.log(err))\n        props.setShowDeleteModal(false)\n    }\n\n    const folderMap = {\n        0: props.rootDocs,\n        1: props.layerOneDocs,\n        2: props.layerTwoDocs,\n        3: props.layerThreeDocs,\n    }\n\n    const removeDocFromStore = (currentIndex) => {\n        let deletedItem = [...folderMap[props.currentLayer]]\n        deletedItem.splice(currentIndex, 1)\n        if(props.currentLayer===0) return props.dispatch(rootDocs(deletedItem))\n        if(props.currentLayer===1) return props.dispatch(layerOneDocs(deletedItem))\n        if(props.currentLayer===2) return props.dispatch(layerTwoDocs(deletedItem))\n        if(props.currentLayer===3) return props.dispatch(layerThreeDocs(deletedItem))\n    }\n\n    const closeModal = (e) => {\n        if(e.code==='Enter' || e.code==='Space' || e.code==='Escape') {\n            e.preventDefault()\n            props.setShowDeleteModal(false)\n        }\n    }\n\n    const deleteDatabaseID = (docID) => {\n        db.collection('docID')\n        .doc(docID)\n        .delete()\n        .catch((err)=>console.log(err))\n    }\n\n    return(      \n        <div>\n            <Modal isOpen={props.showDeleteModal} onDismiss={()=>props.setShowDeleteModal(false)} aria-label={`Are you sure you want to delete ${props.projectSelectedData.name} ?`}>\n                <CloseDialog aria-label='close rename dialog' onKeyDown={(e)=> closeModal(e)} onMouseDown={()=>props.setShowDeleteModal(false)}>\n                    <IconComponent><path d=\"M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z\"/></IconComponent>\n                </CloseDialog>\n                <Header>{`Delete ${props.projectSelectedData.type}`}</Header>\n                <p>Are you sure you want to delete <Name>{props.projectSelectedData.name}</Name> ?</p>\n                <div>\n                    <Cancel onKeyDown={(e)=> closeModal(e)}  onMouseDown={()=>props.setShowDeleteModal(false)}>Cancel</Cancel>\n                    <Delete onClick={()=>initialDelete(props.projectSelectedData)}>Delete</Delete>\n                </div>\n            </Modal>\n        </div>      \n\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    outlineData: state.app.outlineData,\n    currentFileID: state.app.currentFileID,\n    outlineItemsForUpdate: state.app.outlineItemsForUpdate,\n    outlineItemsDisplay: state.app.outlineItemsDisplay,\n    currentLayer: state.app.currentLayer,\n    rootDocs: state.app.rootDocs,\n    layerOneDocs: state.app.layerOneDocs,\n    layerTwoDocs: state.app.layerTwoDocs,\n    layerThreeDocs: state.app.layerThreeDocs,\n})\n\nexport default connect(mapStateToProps)(DeleteDocModal)\n\nconst Name = styled.span`\n    font-weight: 700;\n`\n\nconst Header = styled.h1`\n    font-size: 1.75rem;\n`\n\nconst CloseDialog = styled.button`\n    justify-self: flex-end;\n`\n\nconst Cancel = styled.button`\n    height: 50px;\n    width: 100px;\n    margin: 10px;\n`\n\nconst Delete = styled.button`\n    margin: 10px;\n    background-color: hsl(0, 60%, 50%);\n    height: 50px;\n    width: 100px;\n    color: white;\n`\n\nconst Modal = styled(Dialog)`\n    z-index: 100;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 500px;\n    height: 300px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    box-shadow: none;\n    margin: 0;\n    background-color: var(--secondary);\n    isolation: isolate;\n    padding: 20px 50px;\n    border-radius: 10px;\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`","import styled from 'styled-components'\nimport IconsComponent from '../../../../Icons/IconComponent'\n\nconst TableHeadComponent = (props) => {\n    return(\n        <TableHead hide={props.hide}>\n            <ColumnNameButton aria-label={`sort by: ${props.sortMethod===props.sortMethodValue1 ? props.sortMap[props.sortMethodValue1] : props.sortMap[props.sortMethodValue2]}`} onClick={()=>props.changeSortOrder(props.sortType)}>\n                {props.name}\n                {props.sortMethod === props.sortMethodValue1 ? \n                    <ArrowIcon isVisible={props.sortMethod === props.sortMethodValue1} rotate='rotate(180deg)'><IconsComponent><path d=\"M24 22h-24l12-20z\"/></IconsComponent></ArrowIcon>\n                :\n                    <ArrowIcon isVisible={props.sortMethod === props.sortMethodValue2} rotate='rotate(0deg)'><IconsComponent><path d=\"M24 22h-24l12-20z\"/></IconsComponent></ArrowIcon>\n                }\n            </ColumnNameButton>\n        </TableHead>\n    )\n}\n\nexport default TableHeadComponent\n\nconst TableHead = styled.div`\n    display: table-cell;\n    padding: 10px 15px;\n    border-bottom: 2px solid var(--primary-text);\n    border-top: 2px solid var(--primary-text);\n    font-weight: 400;\n    white-space: nowrap;\n    @media(max-width: ${props=>props.hide}) {\n        display: none;\n    }\n`\n\nconst ColumnNameButton = styled.button`\n    display: flex;\n    align-items: center;\n`\n\nconst ArrowIcon = styled.div`\n    transform: scale(.6) ${props=>props.rotate};\n    margin-left: 5px;\n    visibility: ${props=>props.isVisible ? 'visible' : 'hidden'}\n`","import styled from 'styled-components'\nimport { db } from '../../../firebase'\nimport TableBodyComponent from './Table/TableBodyComponent'\nimport RenameDocModal from './RenameDocModal'\nimport DeleteProjectModal from './DeleteDocModal'\nimport { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { breadcrumbs, sortMethod } from '../../../redux/actions/dashboardActions'\nimport TableHeadComponent from './Table/TableHeadComponent'\nimport { \n    rootDocs,\n    layerOneDocs,\n    layerTwoDocs,\n    layerThreeDocs,\n    currentLayer,\n} from '../../../redux/actions/appActions'\n\nconst ProjectsTable = (props) => {\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n    const [showRenameModal, setShowRenameModal] = useState(false)\n\n    const folderMap = {\n        0: props.rootDocs,\n        1: props.layerOneDocs,\n        2: props.layerTwoDocs,\n        3: props.layerThreeDocs,\n    }\n\n    const selectProject = (docData, index) => {\n        props.setProjectSelectedData({...docData, currentIndex: index})\n    }\n\n    const buttonPress = (e, type, docID, name) => {\n        if((e === 'Enter' || e === 'Space') && document.activeElement.id==='projects-table-row') {\n            selectItem(type, docID, name)\n        }\n    }\n\n    const showRenameProject = (e) => {\n        e.stopPropagation()\n        setShowRenameModal(true)\n    }\n\n    const showDeleteProject = (e) => {\n        e.stopPropagation()\n        setShowDeleteModal(true)\n    }\n\n    const getSortMethod = (sortMethod) => {\n        if(sortMethod==='dateAsc') return sortProjectsDateAsc\n        if(sortMethod==='dateDesc') return sortProjectsDateDesc\n        if(sortMethod==='typeAsc') return sortProjectsTypeAsc\n        if(sortMethod==='typeDesc') return sortProjectsTypeDesc\n        if(sortMethod==='nameAsc') return sortProjectsNameAsc\n        if(sortMethod==='nameDesc') return sortProjectsNameDesc\n    }\n\n    const getFolderContents = (docID) => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .where('parentID', '==', docID)\n        .get()\n    }\n\n    const addSortedFilesToState = (files) => {\n        const sortMethodToUse = getSortMethod(props.sortMethod)\n        const sortedFiles = files.sort(sortMethodToUse)\n        if(props.currentLayer === 0) return props.dispatch(layerOneDocs(sortedFiles))\n        if(props.currentLayer === 1) return props.dispatch(layerTwoDocs(sortedFiles))\n        if(props.currentLayer === 2) return props.dispatch(layerThreeDocs(sortedFiles))\n    }\n\n    const addBreadcrumbToState = (docID, name) => {\n        const breadcrumb = { name, docID, }\n        const breadcrumbsCopy = [...props.breadcrumbs]\n        breadcrumbsCopy.push(breadcrumb)\n        props.dispatch(breadcrumbs(breadcrumbsCopy))\n    }\n\n    const incrementCurrentLayer = () => props.dispatch(currentLayer(props.currentLayer + 1))\n\n    const sendFilesToState = (data) => {\n        const unsortedFiles = []\n        data.forEach(item=> {\n            unsortedFiles.push(item.data())\n        })\n        addSortedFilesToState(unsortedFiles)\n    }\n\n    const openFolder = (docID, name) => {\n        getFolderContents(docID)\n        .then(data=> {\n            sendFilesToState(data)\n            incrementCurrentLayer()\n            addBreadcrumbToState(docID, name)\n        })\n    }\n\n    const selectItem = (type, docID, name) => {\n        document.activeElement.blur()\n        if(type==='folder') {\n            openFolder(docID, name)\n        }else{\n            openFile(type, docID)\n        }\n    }\n\n    const openFile = (fileType, docID) => {\n        const location = `/writing-app/edit/${fileType}/${docID}`\n        window.open(location, \"_blank\") || (document.location = location)\n    }\n\n    const sortProjectsDateAsc = (a, b) => a.lastModified - b.lastModified\n    const sortProjectsDateDesc = (a, b) => b.lastModified - a.lastModified\n    const sortProjectsNameAsc = (a, b) => b.name.localeCompare(a.name)\n    const sortProjectsNameDesc = (a, b) => a.name.localeCompare(b.name)\n    const sortProjectsTypeAsc = (a, b) => b.type.localeCompare(a.type)\n    const sortProjectsTypeDesc = (a, b) => a.type.localeCompare(b.type)\n\n    const addSortMethodToDatabase = (sortMethodName) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .doc('preferences')\n        .update({\n            sortMethod: sortMethodName\n        })\n    }\n\n    const sendSortedFilesToState = (sortMethodToUse) => {\n        if(props.rootDocs.length > 0) {\n            props.dispatch(rootDocs(props.rootDocs.sort(sortMethodToUse)))\n        }\n        if(props.layerOneDocs.length > 0) {\n            props.dispatch(layerOneDocs(props.layerOneDocs.sort(sortMethodToUse)))\n        }\n        if(props.layerTwoDocs.length > 0) {\n            props.dispatch(layerTwoDocs(props.layerTwoDocs.sort(sortMethodToUse)))\n        }\n        if(props.layerThreeDocs.length > 0) {\n            props.dispatch(layerThreeDocs(props.layerThreeDocs.sort(sortMethodToUse)))\n        }\n    }\n\n    const getSortMethodData = (sortType) => {\n        if(sortType === 'name') {\n            if(props.sortMethod === 'nameDesc') return [sortProjectsNameAsc, 'nameAsc']\n            return [sortProjectsNameDesc, 'nameDesc']\n        }\n        if(sortType === 'type') {\n            if(props.sortMethod === 'typeDesc') return [sortProjectsTypeAsc, 'typeAsc']\n            return [sortProjectsTypeDesc, 'typeDesc']\n        }\n        if(sortType === 'date') {\n            if(props.sortMethod === 'dateDesc') return [sortProjectsDateAsc, 'dateAsc']\n            return [sortProjectsDateDesc, 'dateDesc']\n        }\n    }\n\n    const changeSortOrder = (sortType) => {\n        const [sortMethodToUse, sortMethodName] = getSortMethodData(sortType)\n        props.dispatch(sortMethod(sortMethodName))\n        sendSortedFilesToState(sortMethodToUse)\n        addSortMethodToDatabase(sortMethodName)\n    }\n\n    const sortMap = {\n        dateAsc: 'last modified ascending',\n        dateDesc: 'last modified descending',\n        nameAsc: 'name ascending',\n        nameDesc: 'name descending',\n        typeAsc: 'file type ascending',\n        typeDesc: 'file type descending',\n    }\n\n    return(\n        <Container>\n            <Table role='table'>\n                <Head aria-label={`current sort: ${sortMap[props.sortMethod]}`} role='heading'> \n                    <RowHeader role='rowheader'>\n                        <TableHeadComponent sortMap={sortMap} name='Name' sortType='name' sortMethodValue1='nameDesc' sortMethodValue2='nameAsc' sortMethod={props.sortMethod} changeSortOrder={changeSortOrder} />\n                        <TableHeadComponent sortMap={sortMap} hide='550px' name='Type' sortType='type' sortMethodValue1='typeDesc' sortMethodValue2='typeAsc' sortMethod={props.sortMethod} changeSortOrder={changeSortOrder} />\n                        <TableHeadComponent sortMap={sortMap} name='Last modified' sortType='date' sortMethodValue1='dateDesc' sortMethodValue2='dateAsc' sortMethod={props.sortMethod} changeSortOrder={changeSortOrder} />\n                        <TableHead hide='550px' aria-label='settings' role='heading'></TableHead>\n                    </RowHeader>\n                </Head>\n                <TableBodyComponent selectItem={selectItem} selectProject={selectProject} showRenameProject={showRenameProject} showDeleteProject={showDeleteProject} buttonPress={buttonPress} currentLayer={props.currentLayer} folderMap={folderMap} />\n            </Table> \n            <RenameDocModal showRenameModal={showRenameModal} projectSelectedData={props.projectSelectedData} setShowRenameModal={setShowRenameModal} />\n            <DeleteProjectModal showDeleteModal={showDeleteModal} projectSelectedData={props.projectSelectedData} setShowDeleteModal={setShowDeleteModal} />\n        </Container>\n    )   \n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    rootDocs: state.app.rootDocs,\n    currentLayer: state.app.currentLayer,\n    currentProjectID: state.app.currentProjectID,\n    layerOneDocs: state.app.layerOneDocs,\n    layerTwoDocs: state.app.layerTwoDocs,\n    layerThreeDocs: state.app.layerThreeDocs,\n    breadcrumbs: state.dashboard.breadcrumbs,\n    sortMethod: state.dashboard.sortMethod,\n})\n\nexport default connect(mapStateToProps)(ProjectsTable)\n\nconst Container = styled.div`\n`\n\nconst TableHead = styled.div`\n    display: table-cell;\n    text-align: left;\n    padding: 10px 15px;\n    border-bottom: 2px solid var(--primary-text);\n    border-top: 2px solid var(--primary-text);\n    color: hsl(0, 0%, 20%);\n    font-weight: 400;\n    white-space: nowrap;\n    @media(max-width: ${props=>props.hide}) {\n        display: none;\n    }\n`\n\nconst Head = styled.div`\n    display: table-header-group;\n`\n\nconst Table = styled.div`\n    display: table;\n    width: 100%;\n    border-collapse: separate;\n    border-spacing: 0 10px;\n    overflow: auto;\n    table-layout: fixed;\n`\n\nconst RowHeader = styled.div`\n    display: table-row;\n    background-color: transparent;\n`","import { db } from '../../../firebase'\nimport styled from 'styled-components'\nimport { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport CreateDocModal from './CreateDocModal'\nimport CreateDocButton from './CreateDocButton'\nimport Breadcrumbs from '../Breadcrumbs'\nimport ProjectsTable from './DocsTable'\nimport { rootDocs } from '../../../redux/actions/appActions'\nimport { sortMethod } from '../../../redux/actions/dashboardActions'\nconst AllFiles = (props) => {\n\n    const [isCreateProjectModal, setIsCreateProjectModal] = useState(false)\n    const [projectSelectedData, setProjectSelectedData] = useState({})\n    const [createType, setCreateType] = useState('')\n\n    useEffect(()=> {\n        if(props.userData.userID && props.rootDocs.length===0) return getInitialFilesAndFolders()\n        // eslint-disable-next-line\n    }, [props.userData])\n\n    const sortProjectsDateAsc = (a, b) => a.lastModified - b.lastModified  \n    const sortProjectsDateDesc = (a, b) => b.lastModified - a.lastModified  \n    const sortProjectsNameAsc = (a, b) => b.name.localeCompare(a.name)\n    const sortProjectsNameDesc = (a, b) => a.name.localeCompare(b.name)\n    const sortProjectsTypeAsc = (a, b) => b.name.localeCompare(a.name)\n    const sortProjectsTypeDesc = (a, b) =>  a.type.localeCompare(b.type)\n\n    const getDatabaseFilesFolders = () => {\n        return db.collection('users')\n        .doc(props.userData.userID)\n        .collection('files-folders')\n        .where('parentID', '==', props.userData.userID)\n        .get()\n    }\n\n    const sortFiles = (sortMethodType, projectArr) => {\n        if(sortMethodType==='dateAsc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsDateAsc)))\n        if(sortMethodType==='dateDesc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsDateDesc)))\n        if(sortMethodType==='nameAsc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsNameAsc)))\n        if(sortMethodType==='nameDesc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsNameDesc)))\n        if(sortMethodType==='typeAsc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsTypeAsc)))\n        if(sortMethodType==='typeDesc') return props.dispatch(rootDocs(projectArr.sort(sortProjectsTypeDesc)))\n    }\n\n    const getInitialFilesAndFolders = () => {\n        getDatabaseFilesFolders()\n        .then(data=> {\n            const projectArr = []\n            let sortMethodType\n            data.forEach(project=> {\n                const docData = project.data()\n                if(docData.sortMethod) return sortMethodType = docData.sortMethod\n                return projectArr.push(docData)\n            })\n            props.dispatch(sortMethod(sortMethodType))\n            sortFiles(sortMethodType, projectArr)\n        })\n    }\n\n    return(\n        <Container>\n            <Breadcrumbs />\n            <Test>\n                <Input />\n            </Test>\n            <CreateDocModal isCreateProjectModal={isCreateProjectModal} projectSelectedData={projectSelectedData} setProjectSelectedData={setProjectSelectedData} createType={createType} setIsCreateProjectModal={setIsCreateProjectModal} />\n            <div>\n                <CreateDocButton setIsCreateProjectModal={setIsCreateProjectModal} setCreateType={setCreateType} />\n            </div>\n            <ProjectsTable projectSelectedData={projectSelectedData} setProjectSelectedData={setProjectSelectedData} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    projects: state.dashboard.projects,\n    rootDocs: state.app.rootDocs,\n    currentLayer: state.app.currentLayer,\n})\n\nexport default connect(mapStateToProps)(AllFiles)\n\nconst Input = styled.input`\n\n`\n\nconst Test = styled.div`\n    height: 200px;\n    width: 200px;\n    background-color: green;\n    position: absolute;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nconst CircleProgress = (props) => {\n\n    const stroke = 4\n    const oldRadius = 80\n    const radius = oldRadius - stroke * 2\n    const circumference = radius * 2 * Math.PI\n    const offset = circumference - props.progress / 100 * circumference \n\n    return(\n        <div>\n            <svg className='progress-ring' height={oldRadius * 2} width={oldRadius*2}>\n                <Cicle \n                dasharray={circumference}\n                dashoffset={offset}\n                strokeWidth={stroke}\n                fill='transparent'\n                r={radius}\n                cx={oldRadius}\n                cy={oldRadius}\n                />\n            </svg>\n        </div>\n    )\n}\n\nexport default CircleProgress\n\nconst Cicle = styled.circle`\n    transform: rotate(270deg);\n    transform-origin: 50% 50%;\n    stroke-dasharray: ${props=>props.dasharray} ${props=>props.dasharray};\n    stroke-dashoffset: ${props=>props.dashoffset};\n    stroke: var(--primary-text);\n    transition: stroke-dashoffset .6s ease-in-out;\n`","import styled from 'styled-components'\n\nconst CirclePlaceholder = (props) => {\n\n    const stroke = 4\n    const oldRadius = 80\n    const radius = oldRadius - stroke * 2\n    const circumference = radius * 2 * Math.PI\n    const offset = 0\n\n    return(\n        <div>\n            <svg className='progress-ring' height={oldRadius * 2} width={oldRadius*2}>\n                <Cicle \n                dasharray={circumference}\n                dashoffset={offset}\n                strokeWidth={stroke}\n                fill='transparent'\n                r={radius}\n                cx={oldRadius}\n                cy={oldRadius}\n                />\n            </svg>\n        </div>\n    )\n}\n\nexport default CirclePlaceholder\n\nconst Cicle = styled.circle`\n    transform: rotate(270deg);\n    transform-origin: 50% 50%;\n    stroke-dasharray: ${props=>props.dasharray} ${props=>props.dasharray};\n    stroke-dashoffset: ${props=>props.dashoffset};\n    stroke: var(--primary-text);\n    transition: stroke-dashoffset .6s ease-in-out;\n`","import styled from 'styled-components'\nimport { Dialog } from '@reach/dialog'\nimport '@reach/dialog/styles.css'\nimport { db } from '../../../firebase'\nimport { connect } from 'react-redux'\nimport { useState } from 'react'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { goals } from '../../../redux/actions/appActions'\n\n\nconst DailyGoalModal = (props) => {\n\n    const [goal, setGoal] = useState(null)\n    \n    const sendGoalToDatabase = (goal) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('goals')\n        .doc('daily-goal')\n        .update({\n            goal: Number(goal)\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const updateGoal = (goal) => {\n        if(goal > 0 && !isNaN(goal)) {\n            props.setShowChangeGoal(false)\n            sendGoalToDatabase(goal)\n            updateStateGoal(goal)\n        }\n    }\n\n    const updateStateGoal = (goal) => {\n        const goalsCopy = { ...props.goals }\n        goalsCopy.goal = Number(goal)\n        props.dispatch(goals(goalsCopy))\n    }\n\n    const onEnter = (e, goal) => {\n        if(e.key==='Enter') {\n            e.preventDefault()\n            updateGoal(goal)\n        }\n    }\n\n    return(\n        <Modal aria-label='change daily goal' onDismiss={()=>props.setShowChangeGoal(false)} isOpen={props.showChangeGoal}>\n            <Close aria-label='close dialog' label='set new goal' onClick={()=>props.setShowChangeGoal(false)}>\n                <IconComponent><path d=\"M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z\"/></IconComponent>\n            </Close>\n            <TitleCloseContainer>\n                <Title>Set new goal</Title>\n            </TitleCloseContainer>\n            <GoalInput aria-label='daily goal' maxLength='7' onKeyDown={(e)=>onEnter(e, goal)} defaultValue={props.goals.goal} onChange={(e)=>setGoal(e.target.value)} />\n            <div>\n                <Cancel onClick={()=>props.setShowChangeGoal(false)}>Cancel</Cancel>\n                <Save onClick={()=>updateGoal(goal)}>Save goal</Save>\n            </div>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    goals: state.app.goals,\n})\n\nexport default connect(mapStateToProps)(DailyGoalModal)\n\nconst Close = styled.button`\n    align-self: flex-end;\n`\n\nconst TitleCloseContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst Title = styled.h1`\n    font-size: 1.25rem;\n`\n\nconst GoalInput = styled.input`\n    min-height: 40px;\n    width: 220px;\n    background-color: var(--secondary);\n    border: 1px solid var(--primary-text);\n    color: var(--primary-text);\n    font-size: 1.25rem;\n`\n\nconst Modal = styled(Dialog)`\n    height: 300px;\n    width: 500px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: var(--secondary);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    margin: 0;\n    box-shadow: none;\n    border-radius: 15px;\n    padding: 0px 20px 20px 20px;\n    @media(max-width: 600px) {\n        width: 80vw;\n    } \n`\n\nconst Cancel = styled.button`\n    height: 50px;\n    width: 100px;\n    margin: 10px; \n`\n\nconst Save = styled.button`\n    margin: 10px;\n    background-color: var(--primary-text);\n    height: 50px;\n    width: 120px;\n    color: var(--sidebar);\n`","import styled from 'styled-components'\nimport CircleProgress from './CircleProgress'\nimport CirclePlaceholder from './CirclePlaceholder'\nimport { useState } from 'react'\nimport { connect } from 'react-redux'\nimport DailyGoalModal from './DailyGoalModal'\n\nconst DailyGoals = (props) => {\n    const [showChangeGoal, setShowChangeGoal] = useState(false)\n    return(\n        <Container>\n            {props.goals.goal - props.goals.wordsWritten <= 0 ?\n            <Met><p>Goal</p><p>Achieved</p></Met>\n            : \n            <div>\n                <Goal>{props.goalIsVisible && props.goals.goal - props.goals.wordsWritten}</Goal>\n                <Subtitle>{props.goals.goal - props.goals.wordsWritten === 1 ? 'word' :'words'} to go</Subtitle>\n            </div>\n            }\n            <SetGoal onClick={()=>setShowChangeGoal(true)}>Set daily goal</SetGoal>\n            <CircleContainer>\n                {props.goals.wordsWritten / props.goals.goal * 100 > 100 ?\n                <CircleProgress progress={100} />\n                :\n                <CircleProgress progress={props.goals.wordsWritten / props.goals.goal * 100} />\n                }\n            </CircleContainer>\n            <CirclePlaceholderContainer>\n                <CirclePlaceholder />\n            </CirclePlaceholderContainer>\n            <DailyGoalModal setShowChangeGoal={setShowChangeGoal} showChangeGoal={showChangeGoal} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    goals: state.app.goals,\n    goalIsVisible: state.app.goalIsVisible,\n})\n\nexport default connect(mapStateToProps)(DailyGoals)\n\nconst Met = styled.h2`\n    font-size: 1.25rem;\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst Subtitle = styled.h2`\n    white-space: nowrap;\n    font-size: 1rem;\n    font-weight: 500;\n    position: absolute;\n    top: 55%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst Goal = styled.h2`\n    font-size: 1.5rem;\n    font-weight: 700;\n    position: absolute;\n    top: 45%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst SetGoal = styled.button`\n    font-size: 1.125rem;\n    padding: 2px 0;\n    position: absolute;\n    bottom: 0;\n`\n\nconst CircleContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nconst CirclePlaceholderContainer = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: .2;\n`\n\nconst Container = styled.article`\n    min-height: 200px;\n    width: 100%;\n    border-radius: 10px;\n    padding: 10px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport IconComponent from '../../../Icons/IconComponent'\nimport { connect } from 'react-redux'\nimport { dashboardCurrentSection } from '../../../redux/actions/appActions'\n\nconst SidebarItem = (props) => {\n\n    const navigateSidebar = (menuItem) => {\n        return props.dispatch(dashboardCurrentSection(menuItem))\n    }\n\n    return(\n        <LI>\n            <StyledLink to={props.link}>\n                <LiButton onClick={()=>navigateSidebar(props.type)} background={props.match.params.page===props.highlightParam ? 'var(--highlight)' : 'transparent'} hover={props.dashboardCurrentSection!==props.highlightParam ? 'var(--highlight)' : null} >\n                    <Icon><IconComponent>{props.children}</IconComponent></Icon>\n                    <NavigationItem>{props.name}</NavigationItem>\n                </LiButton>\n            </StyledLink>\n        </LI>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dashboardCurrentSection: state.app.dashboardCurrentSection\n})\n\nexport default connect(mapStateToProps)(SidebarItem)\n\nconst NavigationItem = styled.p`\n    text-align: center;\n`\n\nconst LI = styled.li`\n`\n\nconst LiButton = styled.span`\n    display: flex;\n    align-items: center;\n    background-color: ${props=> props.background};\n    border: none;\n    padding: 10px 0 10px 5px;\n    margin: 5px 0;\n    font-size: 1.25rem;\n    width: 100%;\n    border-radius: 5px;\n    transition: background-color 50ms ease-in-out;\n    &:hover {\n        background-color: ${props=> props.hover};\n    }\n`\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    &:focus{\n        box-shadow: none; \n    }\n    &:focus-within {\n        ${LiButton} {\n            box-shadow: 0 0 0 5px rgba(21, 156, 228, 0.4);\n        }\n    }\n`\n\nconst Icon = styled.div`\n    transform: scale(.8);\n    right: 7px;\n    position: relative;\n    top: 1px;\n    margin-left: 20px;\n`","import IconComponent from '../../../Icons/IconComponent'\nimport styled from 'styled-components'\nimport firebase from 'firebase/app'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reset, userData } from '../../../redux/actions/appActions'\nimport { resetDashboard } from '../../../redux/actions/dashboardActions'\n\nconst Signout = (props) => {\n    const history = useHistory()\n\n    const signout = () => {\n        firebase.auth().signOut()\n        .then(()=> {\n            props.dispatch(userData({userID: ''}))\n            props.dispatch(reset())\n            props.dispatch(resetDashboard())\n            history.push('/writing-app')\n        })\n        .catch(err=> {\n            console.log(err)\n        })\n    }\n\n    return(\n        <LI>\n            <LiButton onClick={signout}>\n                <Icon><IconComponent><path d=\"M10 9.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7zm6-3c-1.787 0-3.46.474-4.911 1.295l.228.2 1.396 1.221c1.004-.456 2.114-.716 3.287-.716 4.411 0 8 3.589 8 8s-3.589 8-8 8c-1.173 0-2.283-.26-3.288-.715l-1.396 1.221-.228.2c1.452.82 3.125 1.294 4.912 1.294 5.522 0 10-4.477 10-10s-4.478-10-10-10z\"/></IconComponent></Icon>\n                <NavigationItem>Sign out</NavigationItem>\n            </LiButton>\n        </LI>\n    )\n}\n\nconst mapStateToProps = state => ({})\n\nexport default connect(mapStateToProps)(Signout)\n\nconst LiButton = styled.button`\n    display: flex;\n    align-items: center;\n    background-color: ${props=> props.background};\n    padding: 10px 0 10px 5px;\n    margin: 5px 0;\n    font-size: 1.25rem;\n    width: 100%;\n    border-radius: 5px;\n    transition: background-color 50ms ease-in-out;\n    &:hover {\n        background-color: var(--highlight);\n    }\n`\n\nconst Icon = styled.div`\n    transform: scale(.8);\n    right: 7px;\n    position: relative;\n    top: 1px;\n    margin-left: 20px;\n`\n\nconst NavigationItem = styled.p`\n    text-align: center;\n`\n\nconst LI = styled.div`\n`","import styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport DailyGoals from '../../Goals/DailyGoals/DailyGoals'\nimport SidebarItem from './SidebarItem'\nimport Signout from './Signout'\n\nconst Sidebar = (props) => {\n\n    return(\n        <Container>\n            <Logo>Redraft</Logo>\n            <ListContainer>\n                <UL>\n                    <SidebarItem name='Files' type='projects' link='/writing-app/' highlightParam={undefined} match={props.match}>\n                        <path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/>\n                    </SidebarItem>\n                    <SidebarItem name='Tasks' type='goals' link='/writing-app/tasks' highlightParam='tasks' match={props.match}>\n                        <path d=\"M6 12c0 2.206 1.794 4 4 4 1.761 0 3.242-1.151 3.775-2.734l2.224-1.291.001.025c0 3.314-2.686 6-6 6s-6-2.686-6-6 2.686-6 6-6c1.084 0 2.098.292 2.975.794l-2.21 1.283c-.248-.048-.503-.077-.765-.077-2.206 0-4 1.794-4 4zm4-2c-1.105 0-2 .896-2 2s.895 2 2 2 2-.896 2-2l-.002-.015 3.36-1.95c.976-.565 2.704-.336 3.711.159l4.931-2.863-3.158-1.569.169-3.632-4.945 2.87c-.07 1.121-.734 2.736-1.705 3.301l-3.383 1.964c-.29-.163-.621-.265-.978-.265zm7.995 1.911l.005.089c0 4.411-3.589 8-8 8s-8-3.589-8-8 3.589-8 8-8c1.475 0 2.853.408 4.041 1.107.334-.586.428-1.544.146-2.18-1.275-.589-2.69-.927-4.187-.927-5.523 0-10 4.477-10 10s4.477 10 10 10c5.233 0 9.521-4.021 9.957-9.142-.301-.483-1.066-1.061-1.962-.947z\"/>\n                    </SidebarItem>\n                    <SidebarItem name='Colors' type='themes' link='/writing-app/themes' highlightParam='themes' match={props.match}>\n                        <path d=\"M8.997 13.985c.01 1.104-.88 2.008-1.986 2.015-1.105.009-2.005-.88-2.011-1.984-.01-1.105.879-2.005 1.982-2.016 1.106-.007 2.009.883 2.015 1.985zm-.978-3.986c-1.104.008-2.008-.88-2.015-1.987-.009-1.103.877-2.004 1.984-2.011 1.102-.01 2.008.877 2.012 1.982.012 1.107-.88 2.006-1.981 2.016zm7.981-4.014c.004 1.102-.881 2.008-1.985 2.015-1.106.01-2.008-.879-2.015-1.983-.011-1.106.878-2.006 1.985-2.015 1.101-.006 2.005.881 2.015 1.983zm-12 15.847c4.587.38 2.944-4.492 7.188-4.537l1.838 1.534c.458 5.537-6.315 6.772-9.026 3.003zm14.065-7.115c1.427-2.239 5.846-9.748 5.846-9.748.353-.623-.429-1.273-.975-.813 0 0-6.572 5.714-8.511 7.525-1.532 1.432-1.539 2.086-2.035 4.447l1.68 1.4c2.227-.915 2.868-1.04 3.995-2.811zm-12.622 4.806c-2.084-1.82-3.42-4.479-3.443-7.447-.044-5.51 4.406-10.03 9.92-10.075 3.838-.021 6.479 1.905 6.496 3.447l1.663-1.456c-1.01-2.223-4.182-4.045-8.176-3.992-6.623.055-11.955 5.466-11.903 12.092.023 2.912 1.083 5.57 2.823 7.635.958.492 2.123.329 2.62-.204zm12.797-1.906c1.059 1.97-1.351 3.37-3.545 3.992-.304.912-.803 1.721-1.374 2.311 5.255-.591 9.061-4.304 6.266-7.889-.459.685-.897 1.197-1.347 1.586z\"/>\n                    </SidebarItem>\n                </UL>\n            </ListContainer>\n            <GoalsContainer>\n                <DailyGoals />\n            </GoalsContainer>   \n            <SignoutContainer>\n                <Signout />\n            </SignoutContainer>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    projects: state.dashboard.projects,\n    projectFiles: state.app.projectFiles,\n    dashboardCurrentSection: state.app.dashboardCurrentSection,\n})\n\nexport default connect(mapStateToProps)(Sidebar)\n\nconst SignoutContainer = styled.div`\n    position: absolute;\n    bottom: 2%;\n    left: 0;\n    width: 250px;\n    padding: 0 20px;\n`\n\nconst GoalsContainer = styled.div`\n    height: 45%;\n    display: grid;\n    align-items: center;\n    min-height: 250px;\n`\n\nconst Container = styled.div`\n    width: 250px;\n    padding: 0 20px;\n    background-color: var(--sidebar);\n    height: 100%;\n    position: fixed;\n    @media(max-width: 800px) {\n        display: none;\n    }\n`\n\nconst ListContainer = styled.div`\n    height: 25vh;\n    display: grid;\n    min-height: 100px;\n`\n\nconst UL = styled.ul`\n`\n\nconst Logo = styled.h1`\n    font-size: 1.5rem;\n    font-weight: 700;\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n    margin: 0;\n    height: 18vh;\n`","import styled from 'styled-components'\n\nconst GoalCard = (props) => {\n    return(\n        <Container>\n            <Goal>{props.task.goal}</Goal>\n            <Delete aria-label='delete task' onClick={()=>props.deleteTask(props.task, props.index)}>X</Delete>\n        </Container>\n    )\n}\n\nexport default GoalCard\n\nconst Delete = styled.button`\n    padding: 5px;\n    margin-left: 10px;\n`\n\nconst Goal = styled.h1`\n    line-height: 1.2;\n` \n\nconst Container = styled.div`\n    min-height: 50px;\n    min-width: 200px;\n    max-width: 100%;\n    width: 100%;\n    background-color: var(--sidebar);\n    padding: 40px 30px;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    @media(max-width: 550px) {\n        width: 100%;\n    }\n`","import styled from 'styled-components'\nimport GoalCard from './GoalCard'\n\nconst CardComponent = (props) => {\n    return(\n        <CardContainer>\n            {props.tasks.map((task, index) => {\n                return(\n                    <GoalCard deleteTask={props.deleteTask} index={index} task={task} key={index} />\n                )\n            })}\n        </CardContainer>\n    )\n}\n\nexport default CardComponent\n\nconst CardContainer = styled.div`\n    display: grid;\n    grid-gap: 20px;\n    /* grid-template-columns: 1fr 1fr; */\n    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n    padding-bottom: 40px;\n    @media(max-width: 700px) {\n        grid-template-columns: 1fr;\n    } \n`","import { db } from '../../../firebase'\nimport { useState, useEffect } from 'react'\nimport CardComponent from './CardComponent'\nimport firebase from 'firebase/app'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { tasks } from '../../../redux/actions/appActions'\n\nconst ToDo = (props) => {\n    const [newTask, setNewTask] = useState('')\n\n    useEffect(()=> {\n        if(props.tasks.length === 0) {\n            getToDoItems()\n        }\n        // eslint-disable-next-line \n    }, [])\n\n    const getToDoItems = () => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('goals')\n        .doc('todo')\n        .get()\n        .then(data=> props.dispatch(tasks(data.data().todo.reverse())))\n    }\n\n    const sendTaskToDatabase = (toUpload) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('goals')\n        .doc('todo')\n        .update({\n            todo: firebase.firestore.FieldValue.arrayUnion(toUpload)\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const sendTaskToState = (toUpload) => {\n        const tasksCopy = [...props.tasks]\n        tasksCopy.unshift(toUpload)\n        props.dispatch(tasks(tasksCopy))\n    }\n\n    const createTask = (task) => {\n        if(task.length === 0) return\n        const toUpload = {\n            goal: task,\n        }\n        sendTaskToDatabase(toUpload)\n        sendTaskToState(toUpload)\n        document.getElementById('todo-input').value = ''\n    }\n\n    const removeTaskFromDatabase = (toDelete) => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('goals')\n        .doc('todo')\n        .update({ todo: firebase.firestore.FieldValue.arrayRemove(toDelete) })\n        .catch(err=>console.log(err))\n    }\n\n    const removeTaskFromState = (index) => {\n        const tasksCopy = [...props.tasks]\n        tasksCopy.splice(index, 1)\n        props.dispatch(tasks(tasksCopy))\n    }\n\n    const deleteTask = (toDelete, index) => {\n        removeTaskFromState(index)\n        removeTaskFromDatabase(toDelete)\n    }\n\n    const onEnter = (e, task) => {\n        if(e.key==='Enter') createTask(task)\n    }\n    \n    return(\n        <Container>\n            <Title>Current tasks</Title>\n            <Background>\n                <AddTask htmlFor='todo-input'>Add a task:</AddTask>\n                <CreateTaskContainer>\n                    <TaskInput autoComplete='off' onKeyDown={(e)=>onEnter(e, newTask)} id='todo-input' onChange={(e)=>setNewTask(e.target.value)} />\n                    <CreateTask onClick={()=>createTask(newTask)}>Create task</CreateTask>\n                </CreateTaskContainer>\n            </Background>\n            <CardComponent tasks={props.tasks} deleteTask={deleteTask} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    tasks: state.app.tasks,\n})\n\nexport default connect(mapStateToProps)(ToDo)\n\nconst Background = styled.div`\n    background-color: var(--sidebar);\n    padding: 40px; \n    border-radius: 10px;\n    margin-bottom: 20px;\n`\n\nconst AddTask = styled.label`\n    font-size: 1.125rem;\n    font-weight: 600;\n`\n\nconst CreateTaskContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 10px 0;\n    @media(max-width: 500px) {\n        flex-direction: column;\n        align-items: initial;\n    }\n`\n\nconst CreateTask = styled.button`\n    min-height: 40px;\n    padding: 10px 30px;\n    background-color: var(--primary-text);\n    color: var(--sidebar);\n    white-space: nowrap;\n    @media(max-width: 500px) {\n        width: 100%;\n    }\n`\n\nconst TaskInput = styled.input`\n    width: 55%;\n    max-width: 600px;\n    min-height: 40px;\n    background-color: var(--background);\n    border: none;\n    color: var(--primary-text);\n    font-size: 1.25rem;\n    margin-right: 10px;\n    padding-left: 5px;\n    @media(max-width: 500px) {\n        width: 100%;\n        margin-bottom: 20px;\n    }\n`\n\nconst Title = styled.h1`\n    margin-top: 40px;\n    font-size: 2.25rem;\n    font-weight: 600;\n    margin-bottom: 25px;\n    @media(max-width: 750px) { \n        margin-top: 20px;\n    }\n`\n\nconst Container = styled.div`\n    width: 100%;\n    height: 100%;\n    padding: 0 30px;\n    overflow: scroll;\n    @media(max-width: 800px) { \n        height: calc(100% - 80px);\n        padding: 0px 15px;\n        margin-top: 80px;\n    } \n`","import styled from 'styled-components'\nimport IconComponent from '../../Icons/IconComponent'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { dashboardCurrentSection } from '../../redux/actions/appActions'\n\nconst MobileNavItem = (props) => {\n\n    const navigateSidebar = (menuItem) => {\n        props.setShowMobileNav(false)\n        return props.dispatch(dashboardCurrentSection(menuItem))\n    }\n\n    return(\n        <Container>\n            <StyledLink to={props.link} onClick={()=>navigateSidebar(props.type)}>\n                <IconComponent>{props.children}</IconComponent>\n                <Name>{props.name}</Name>\n            </StyledLink>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dashboardCurrentSection: state.app.dashboardCurrentSection\n})\n\nexport default connect(mapStateToProps)(MobileNavItem)\n\nconst Name = styled.h2`\n    margin-left: 10px; \n    font-size: 2rem;\n`\n\nconst StyledLink = styled(Link)`\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n`\n\nconst Container = styled.li`\n    margin-bottom: 20px;\n`","import styled from 'styled-components'\nimport firebase from 'firebase/app'\nimport { useHistory } from 'react-router-dom'\nimport IconComponent from '../../Icons/IconComponent'\nimport { connect } from 'react-redux'\nimport { reset, userData } from '../../redux/actions/appActions'\nimport { resetDashboard } from '../../redux/actions/dashboardActions'\n\nconst MobileSignout = (props) => {\n    const history = useHistory()\n\n    const signout = () => {\n        firebase.auth().signOut()\n        .then(()=> {\n            props.dispatch(userData({userID: ''}))\n            props.dispatch(reset())\n            props.dispatch(resetDashboard())\n            history.push('/writing-app')\n        })\n        .catch(err=> console.log(err))\n    }\n\n    return(\n        <Container>\n            <Button onClick={signout}>\n                <Icon><IconComponent><path d=\"M10 9.408l2.963 2.592-2.963 2.592v-1.592h-8v-2h8v-1.592zm-2-4.408v4h-8v6h8v4l8-7-8-7zm6-3c-1.787 0-3.46.474-4.911 1.295l.228.2 1.396 1.221c1.004-.456 2.114-.716 3.287-.716 4.411 0 8 3.589 8 8s-3.589 8-8 8c-1.173 0-2.283-.26-3.288-.715l-1.396 1.221-.228.2c1.452.82 3.125 1.294 4.912 1.294 5.522 0 10-4.477 10-10s-4.478-10-10-10z\"/></IconComponent></Icon>\n                <Name>Sign out</Name>\n            </Button>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({})\n\nexport default connect(mapStateToProps)(MobileSignout)\n\nconst Name = styled.h2`\n    margin-left: 10px; \n    font-size: 1.75rem;\n`\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n`\n\nconst Icon = styled.div`\n`\n\nconst Container = styled.li`\n    margin-bottom: 20px;\n`","import styled from 'styled-components'\nimport { Dialog } from '@reach/dialog'\nimport '@reach/dialog/styles.css'\nimport DailyGoals from '../../Components/Goals/DailyGoals/DailyGoals'\nimport MobileNavItem from './MobileNavItem'\nimport MobileSignout from './MobileSignout'\n\nconst MobileNavigation = (props) => {\n    return(\n        <Modal aria-label='navigation menu' isOpen={props.showMobileNav} onDismiss={()=>props.setShowMobileNav(false)}>\n            <Close onClick={()=>props.setShowMobileNav(false)}>X</Close>\n            <NavContainer>\n                <UL>\n                    <MobileNavItem name='Files' type='projects' link='/writing-app' setShowMobileNav={props.setShowMobileNav}>\n                        <path d=\"M6 22v-16h16v7.543c0 4.107-6 2.457-6 2.457s1.518 6-2.638 6h-7.362zm18-7.614v-10.386h-20v20h10.189c3.163 0 9.811-7.223 9.811-9.614zm-10 1.614h-5v-1h5v1zm5-4h-10v1h10v-1zm0-3h-10v1h10v-1zm2-7h-19v19h-2v-21h21v2z\"/>\n                    </MobileNavItem>\n                    <MobileNavItem name='Tasks' type='goals' link='/writing-app/tasks' setShowMobileNav={props.setShowMobileNav}>\n                        <path d=\"M6 12c0 2.206 1.794 4 4 4 1.761 0 3.242-1.151 3.775-2.734l2.224-1.291.001.025c0 3.314-2.686 6-6 6s-6-2.686-6-6 2.686-6 6-6c1.084 0 2.098.292 2.975.794l-2.21 1.283c-.248-.048-.503-.077-.765-.077-2.206 0-4 1.794-4 4zm4-2c-1.105 0-2 .896-2 2s.895 2 2 2 2-.896 2-2l-.002-.015 3.36-1.95c.976-.565 2.704-.336 3.711.159l4.931-2.863-3.158-1.569.169-3.632-4.945 2.87c-.07 1.121-.734 2.736-1.705 3.301l-3.383 1.964c-.29-.163-.621-.265-.978-.265zm7.995 1.911l.005.089c0 4.411-3.589 8-8 8s-8-3.589-8-8 3.589-8 8-8c1.475 0 2.853.408 4.041 1.107.334-.586.428-1.544.146-2.18-1.275-.589-2.69-.927-4.187-.927-5.523 0-10 4.477-10 10s4.477 10 10 10c5.233 0 9.521-4.021 9.957-9.142-.301-.483-1.066-1.061-1.962-.947z\"/>\n                    </MobileNavItem>\n                    <MobileNavItem name='Colors' type='themes' link='/writing-app/themes' setShowMobileNav={props.setShowMobileNav}>\n                        <path d=\"M8.997 13.985c.01 1.104-.88 2.008-1.986 2.015-1.105.009-2.005-.88-2.011-1.984-.01-1.105.879-2.005 1.982-2.016 1.106-.007 2.009.883 2.015 1.985zm-.978-3.986c-1.104.008-2.008-.88-2.015-1.987-.009-1.103.877-2.004 1.984-2.011 1.102-.01 2.008.877 2.012 1.982.012 1.107-.88 2.006-1.981 2.016zm7.981-4.014c.004 1.102-.881 2.008-1.985 2.015-1.106.01-2.008-.879-2.015-1.983-.011-1.106.878-2.006 1.985-2.015 1.101-.006 2.005.881 2.015 1.983zm-12 15.847c4.587.38 2.944-4.492 7.188-4.537l1.838 1.534c.458 5.537-6.315 6.772-9.026 3.003zm14.065-7.115c1.427-2.239 5.846-9.748 5.846-9.748.353-.623-.429-1.273-.975-.813 0 0-6.572 5.714-8.511 7.525-1.532 1.432-1.539 2.086-2.035 4.447l1.68 1.4c2.227-.915 2.868-1.04 3.995-2.811zm-12.622 4.806c-2.084-1.82-3.42-4.479-3.443-7.447-.044-5.51 4.406-10.03 9.92-10.075 3.838-.021 6.479 1.905 6.496 3.447l1.663-1.456c-1.01-2.223-4.182-4.045-8.176-3.992-6.623.055-11.955 5.466-11.903 12.092.023 2.912 1.083 5.57 2.823 7.635.958.492 2.123.329 2.62-.204zm12.797-1.906c1.059 1.97-1.351 3.37-3.545 3.992-.304.912-.803 1.721-1.374 2.311 5.255-.591 9.061-4.304 6.266-7.889-.459.685-.897 1.197-1.347 1.586z\"/>\n                    </MobileNavItem>\n                </UL>\n            </NavContainer>\n            <GoalsContainer>\n                <DailyGoals />\n            </GoalsContainer>\n            <SignoutContainer>\n                <UL>\n                    <MobileSignout />\n                </UL>\n            </SignoutContainer>\n        </Modal>\n    )\n}\n\nexport default MobileNavigation\n\nconst SignoutContainer = styled.div`\n    height: 25%;\n    display: grid;\n    align-items: flex-end;\n    min-height: 150px;\n`\n\nconst GoalsContainer = styled.div`\n    height: 33%;\n    min-height: 150px;\n`\n\nconst NavContainer = styled.div`\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    height: 33%;\n    min-height: 150px;\n`\n\nconst UL = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Close = styled.button`\n    align-self: flex-end;\n    font-size: 2rem;\n`\n\nconst Modal = styled(Dialog)`\n    width: 100vw;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: var(--sidebar);\n    display: flex;\n    flex-direction: column;\n    padding: 30px;\n`","import styled from 'styled-components'\nimport { useState } from 'react'\nimport IconComponent from '../../Icons/IconComponent'\nimport MobileNavigation from './MobileNavigation'\n\nconst MobileHeader = () => {\n    const [showMobileNav, setShowMobileNav] = useState(false)\n    return(\n        <Container>\n            <Logo>Redraft</Logo>\n            <Icon onClick={()=>setShowMobileNav(true)}>\n                <IconComponent><path d=\"M24 6h-24v-4h24v4zm0 4h-24v4h24v-4zm0 8h-24v4h24v-4z\"/></IconComponent>\n            </Icon>\n            <MobileNavigation setShowMobileNav={setShowMobileNav} showMobileNav={showMobileNav} />\n        </Container>\n\n    )\n}\n\nexport default MobileHeader\n\nconst Icon = styled.button`\n`\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 80px;\n    width: 100vw;\n    padding: 0 30px;\n    background-color: var(--sidebar);\n    @media(min-width: 800px) {\n        display: none;\n    }\n    position: fixed;\n    top: 0;\n    isolation: isolate;\n`\n\nconst Logo = styled.h1`\n    font-size: 1.5rem;\n    font-weight: 700;\n`","import styled from 'styled-components'\nimport { HexColorPicker } from 'react-colorful'\nimport { useState, useEffect } from 'react'\n\nconst ColorPicker = (props) => {\n    const [isPickerVisible, setIsPickerVisible] = useState(false)\n\n    useEffect(()=> {\n        if(isPickerVisible) {\n            window.addEventListener('click', checkElement)\n            window.addEventListener('focusin', checkElementFocus)\n        }\n        return ()=> {\n            window.removeEventListener('click', checkElement)\n            window.removeEventListener('focusin', checkElementFocus)\n        }\n        // eslint-disable-next-line\n    }, [isPickerVisible])\n\n    const checkElementFocus = (e) => {\n        if(!e.target.className.includes('react-colorful__interactive') && !e.target.className.includes('react-colorful__pointer')  && e.target.id!==props.name) {\n            setIsPickerVisible(false)\n        }\n    }\n\n    const checkElement = (e) => {\n        if(!e.target.className.includes('react-colorful__interactive') && !e.target.className.includes('react-colorful__pointer')  && e.target.id!==props.name) {\n            setIsPickerVisible(false)\n        }\n    }\n\n    return(\n        <Picker>\n            <ColorLabel aria-label={props.ariaLabel} onClick={()=>setIsPickerVisible(true)} id={props.name} color={props.color}></ColorLabel>\n            <PickerLabel htmlFor='background'>{props.name}</PickerLabel>\n            {isPickerVisible &&\n                <ColorPickerContainer>\n                    <StyledColorPicker color={props.color} onChange={props.setColor} />\n                </ColorPickerContainer>\n            }\n        </Picker>\n    )\n}\n\nexport default ColorPicker\n\n\nconst Picker = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    /* max-width: 220px; */\n    /* justify-items: center; */\n    /* border: 1px solid white; */\n    width: 105px;\n    /* width: 101px; */\n`\n\nconst PickerLabel = styled.label`\n    /* margin-right: 5px; */\n`\n\nconst ColorLabel = styled.button`\n    background-color: ${props=>props.color};\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    border: 1px solid var(--primary-text);\n    box-shadow: 0;\n    margin-bottom: 5px;\n`\n\nconst StyledColorPicker = styled(HexColorPicker)`\n    transform: scale(.7);\n`\n\nconst ColorPickerContainer = styled.div`\n    position: absolute;\n    top: 80px;\n    z-index: 100;\n`","import { db } from '../../firebase'\nimport { connect } from 'react-redux'\nimport firebase from 'firebase/app'\nimport { colors } from '../../redux/actions/appActions'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport ColorPicker from './ColorPicker'\n\nconst ColorSelection = (props) => {\n    const [name, setName] = useState('')\n    const [background, setBackground] = useState(props.colors.background)\n    const [primaryText, setPrimaryText] = useState(props.colors.primaryText)\n    const [sidebar, setSidebar] = useState(props.colors.sidebar)\n    const [highlight, setHighlight] = useState(props.colors.highlight)\n    const [secondary, setSecondary] = useState(props.colors.secondary)\n\n    const handleColorPickerChange = (colorType, colorTypeName) => {\n        if(colorType!==props.colors.colorType) {\n            const timeout = setTimeout(()=>changeColor(colorTypeName, colorType), 400)\n            return()=> clearTimeout(timeout)\n        }\n    }\n\n    useEffect(()=> {\n        return handleColorPickerChange(background, 'background')\n        // eslint-disable-next-line\n    }, [background, props.colors.background])\n\n    useEffect(()=> {\n        return handleColorPickerChange(primaryText, 'primaryText')\n        // eslint-disable-next-line\n    }, [primaryText, props.colors.primaryText])\n\n    useEffect(()=> {\n        return handleColorPickerChange(sidebar, 'sidebar')\n        // eslint-disable-next-line\n    }, [sidebar, props.colors.sidebar])\n\n    useEffect(()=> {\n        return handleColorPickerChange(highlight, 'highlight')\n        // eslint-disable-next-line\n    }, [highlight, props.colors.highlight])\n\n    useEffect(()=> {\n        return handleColorPickerChange(secondary, 'secondary')\n        // eslint-disable-next-line\n    }, [secondary, props.colors.secondary])\n\n    useEffect(()=> {\n        setBackground(props.colors.background)\n        setHighlight(props.colors.highlight)\n        setPrimaryText(props.colors.primaryText)\n        setSidebar(props.colors.sidebar)\n        setSecondary(props.colors.secondary)\n    }, [props.colors])\n\n    const changeColor = (type, color) => {\n        props.dispatch(colors({\n            ...props.colors,\n            [type]: color,\n            name: null,\n        }))\n        db.collection('users')\n        .doc(props.userData.userID)\n        .update({\n            ['preferences.colors.' + type]: color,\n        })\n        .catch(err=>console.log(err))\n    }\n\n    const saveTheme = () => {\n        const colors = {\n            background,\n            primaryText,\n            sidebar,\n            highlight,\n            secondary,\n            name,\n        }\n        props.addTheme({\n            colors,\n        })\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('page-preferences')\n        .doc('color-themes')\n        .update({\n            themes: firebase.firestore.FieldValue.arrayUnion({\n                colors,\n            })\n        })\n        document.getElementById('theme-name-input').value = ''\n    }\n\n    const onEnter = (e) => {\n        if(e.key==='Enter') saveTheme()\n    }\n\n    return(\n        <Container>\n            <Title>Select colors</Title>\n            <Background>\n                <ColorPickers>\n                    <ColorPicker ariaLabel='select background color' color={background} setColor={setBackground} name='Background' />\n                    <ColorPicker ariaLabel='select primary text color'  color={primaryText} setColor={setPrimaryText} name='Primary text' />\n                    <ColorPicker ariaLabel='select sidebar color'  color={sidebar} setColor={setSidebar} name='Sidebar' />\n                    <ColorPicker ariaLabel='select highlight color'  color={highlight} setColor={setHighlight} name='Highlight' />\n                    <ColorPicker ariaLabel='select secondary color'  color={secondary} setColor={setSecondary} name='Secondary' />\n                </ColorPickers>\n                <InputContainer>\n                    <NameLabel htmlFor='theme-name-input'>Theme name:</NameLabel>\n                    <ButtonInputContainer>\n                        <ThemeName onKeyDown={onEnter} autoComplete='off' onChange={(e)=>setName(e.target.value)} id='theme-name-input'></ThemeName>\n                        <SaveTheme onClick={saveTheme}>Save theme</SaveTheme>\n                    </ButtonInputContainer>\n                </InputContainer>\n            </Background>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    colors: state.app.colors,\n})\n\nexport default connect(mapStateToProps)(ColorSelection)\n\nconst Background = styled.div`\n    background-color: var(--sidebar);\n    padding: 40px; \n    border-radius: 10px;\n    margin-bottom: 20px;\n    width: 100%;\n`\n\nconst ButtonInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    @media(max-width: 500px) {\n        flex-direction: column;\n        align-items: initial;\n    }\n`\n\nconst NameLabel = styled.label`\n    font-size: 1.125rem;\n    font-weight: 600;\n    margin-bottom: 10px;\n    margin-top: 40px;\n`\n\nconst Container = styled.div`\n    margin-top: 20px;\n    width: 100%;\n`\n\nconst Title = styled.h1`\n    font-size: 2.25rem;\n    font-weight: 600;\n    margin-bottom: 25px;\n`\n\nconst ThemeName = styled.input`\n    min-height: 40px;\n    margin: 0px 10px 0px 0px;\n    width: 300px;\n    background-color: var(--background);\n    border: none;\n    color: var(--primary-text);\n    font-size: 1.25rem;\n    @media(max-width: 900px) {\n        width: 100%;\n    }\n    @media(max-width: 500px) {\n        width: 100%;\n        margin-bottom: 10px;\n    }\n`\n\nconst SaveTheme = styled.button`\n    height: 40px;\n    flex: 0;\n    background-color: var(--primary-text);\n    border: 1px solid var(--primary-text);\n    color: var(--sidebar);\n    font-size: 1.125rem;\n    padding: 10px 30px;\n    white-space: nowrap;\n    @media(max-width: 900px) {\n        width: 100%;\n    }\n    @media(max-width: 400px) {\n        padding: 10px 15px;\n    }\n`\n\nconst InputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n`\n\nconst ColorPickers = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    grid-gap: 30px;\n    @media(max-width: 800px) {\n        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    } \n` ","import styled from 'styled-components'\n\nconst ColorThemeCard = (props) => {\n    return(\n        <Option isSelected={props.theme.colors.name}>\n            <SelectOption onClick={()=>props.selectTheme(props.theme.colors)}>\n                <Name>{props.theme.colors.name}</Name>\n                <Colors>\n                    <Color backgroundColor={props.theme.colors.background} />\n                    <Color backgroundColor={props.theme.colors.primaryText} />\n                    <Color backgroundColor={props.theme.colors.sidebar} />\n                    <Color backgroundColor={props.theme.colors.highlight} />\n                    <Color backgroundColor={props.theme.colors.secondary} />\n                </Colors>\n            </SelectOption>\n            {!props.theme.colors.isDefault &&\n                <DeleteOption aria-label='delete theme' onClick={()=>props.deleteTheme(props.index)}>X</DeleteOption>\n            }\n        </Option>\n    )\n}\n\nexport default ColorThemeCard\n\nconst Color = styled.div`\n    background-color: ${props=>props.backgroundColor};\n    height: 15px;\n    width: 15px;\n    border: 1px solid var(--primary-text);\n    /* border: 1px solid var(--sidebar); */\n    margin-right: 5px;\n`\n\nconst Colors = styled.div`\n    display: flex;\n    /* gap: 5px; */\n    margin-top: 5px;\n`\n\nconst SelectOption = styled.button`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n`\n\nconst DeleteOption = styled.button`\n    margin-left: 20px;\n    /* color: var(--sidebar); */\n`\n\nconst Name = styled.p`\n    text-align: left;\n    /* color: var(--sidebar); */\n`\n\nconst Option = styled.article`\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    background-color: var(--sidebar);\n    padding: 20px;\n    border-radius: 5px;\n    max-width: 300px;\n    width: 100%;\n    min-height: 50px;\n    @media(max-width: 520px) {\n        min-height: 80px;\n        max-width: 500px;\n    } \n`","import { connect } from 'react-redux'\nimport { colors } from '../../redux/actions/appActions'\nimport { db } from '../../firebase'\nimport ColorThemeCard from './ColorThemeCard'\nimport styled from 'styled-components'\n\nconst ColorTemplates = (props) => {\n\n    const updateColorPickers = (colorsArray) => {\n        const colorsObject = {}\n        colorsArray.forEach(color=> {\n            if(color[0] === 'name') return\n            if(color[0] === 'isDefault') return\n            colorsObject[color[0]] = color[1]\n        })\n    }\n\n    const selectTheme = (themeColors) => {\n        updateColorPickers(Object.entries(themeColors))\n        props.dispatch(colors(themeColors))\n        db.collection('users')\n        .doc(props.userData.userID)\n        .update({\n            'preferences.colors': themeColors,\n        })\n        .catch(err=>console.log(err))\n    }\n\n    return(\n        <Container>\n            <Title>Color themes</Title>\n            <Cards>\n                {props.colorThemes.map((theme, index)=> {\n                    return(\n                        <ColorThemeCard index={index} deleteTheme={props.deleteTheme} selectTheme={selectTheme} theme={theme} key={index} />\n                    )\n                })}\n            </Cards>\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    colorThemes: state.app.colorThemes,\n    colors: state.app.colors,\n})\n\nexport default connect(mapStateToProps)(ColorTemplates)\n\nconst Title = styled.h2`\n    font-size: 1.125rem;\n    margin-bottom: 10px;\n    font-weight: 600;\n`\n\nconst Container = styled.div`\n    padding-bottom: 20px;\n`\n\nconst Cards = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n    grid-gap: 15px;\n    @media(max-width: 520px) {\n        grid-template-columns: 1fr;\n    }\n`","import { db } from '../../firebase'\nimport { useEffect } from 'react'\nimport ColorSelection from './ColorSelection'\nimport ColorTemplates from './ColorTemplates'\nimport { connect } from 'react-redux'\nimport { colorThemes } from '../../redux/actions/appActions'\nimport styled from 'styled-components'\n\nconst ChangeColors = (props) => {\n\n    useEffect(()=> {\n        if(props.colorThemes.length === 0) {\n            getColors()\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const getColors = () => {\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('page-preferences')\n        .doc('color-themes')\n        .get()\n        .then(data=> {\n            props.dispatch(colorThemes(data.data().themes.reverse()))\n        })\n    }\n\n    const addTheme = (theme) => {\n        const themesCopy = [...props.colorThemes]\n        themesCopy.unshift(theme)\n        props.dispatch(colorThemes(themesCopy))\n    }\n\n    const deleteTheme = (themeIndex) => {\n        const themesCopy = [...props.colorThemes]\n        themesCopy.splice(themeIndex, 1)\n        deleteThemeFromState(themesCopy)\n        deleteThemeFromDatabase(themesCopy)\n    }\n\n    const deleteThemeFromState = (newThemes) => {\n        props.dispatch(colorThemes(newThemes))\n    }\n\n    const deleteThemeFromDatabase = (newThemes) => {\n        const reversedThemes = [...newThemes].reverse()\n        db.collection('users')\n        .doc(props.userData.userID)\n        .collection('page-preferences')\n        .doc('color-themes')\n        .update({\n            themes: reversedThemes\n        })\n        .catch(err=>console.log(err))\n    }\n\n    return(\n        <Container>\n            <ColorSelection addTheme={addTheme} />\n            <ColorTemplates deleteTheme={deleteTheme} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData,\n    colorThemes: state.app.colorThemes\n})\n\nexport default connect(mapStateToProps)(ChangeColors)\n\nconst Container = styled.div`\n    width: 100%;\n    padding: 0 30px;\n    overflow: scroll;\n    height: 100%;\n    @media(max-width: 800px) {\n        margin-top: 80px;\n        padding-bottom: 0px;\n        height: calc(100% - 80px);\n    }\n    @media(max-width: 500px) {\n        padding: 0 15px;\n        padding-bottom: 0px;\n    }\n`","import styled from 'styled-components'\nimport { Route } from 'react-router-dom'\nimport AllFiles from './FilesList/AllFiles'\nimport Sidebar from './Sidebar/Sidebar'\nimport { useEffect } from 'react'\nimport ToDo from '../Goals/ToDo/ToDo'\nimport MobileHeader from '../MobileNavigation/MobileHeader'\nimport ChangeColors from '../ChangeColors/ChangeColors'\nimport { connect } from 'react-redux'\n\nconst Dashboard = (props) => {\n    useEffect(()=> {\n        document.title='Redraft'\n    }, [])\n    return(\n        <Container>\n            <Sidebar match={props.match} />\n            <FilesContainer>\n                <Route exact path='/writing-app/' render={(props)=> (\n                    <FileContainer>\n                        <AllFiles {...props} />\n                    </FileContainer>\n                )} />\n                <Route exact path='/writing-app/tasks' render={(props)=> (\n                    <ToDo {...props} />\n                )} />\n                <Route exact path='/writing-app/themes' render={(props)=> (\n                    <ChangeColors {...props} />\n                )} />\n            </FilesContainer>\n            <MobileHeader />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    showProjects: state.dashboard.showProjects,\n})\n\nexport default connect(mapStateToProps)(Dashboard)\n\nconst FileContainer = styled.div`\n    padding: 0 30px;\n    padding-top: 10px;\n    overflow-y: scroll;\n    @media(max-width: 800px) {\n        height: calc(100% - 80px);\n        margin-top: 80px;\n    }\n    @media(max-width: 500px) {\n        padding: 0 15px;\n    }\n    height: 100%;\n`\n\nexport const FilesContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    margin-left: 250px;\n    margin-bottom: 250px;\n    @media(max-width: 800px) {\n        margin-left: 0;\n        padding-left: 0;\n    } \n`\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    @media(min-width: 800px) {\n        display: flex;\n    } \n`","import LandingPage from './LandingPage/LandingPage'\nimport Dashboard from './Dashboard/Dashboard'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\n\nconst Homepage = (props) => {\n    return(\n        props.userData.userID ? \n        <Route path='/writing-app/:page?' render={(props)=> (\n            <Dashboard {...props} />\n          )} />\n        :\n        <LandingPage setIsLoading={props.setIsLoading} />\n    )\n}\n\nconst mapStateToProps = state => ({\n    userData: state.app.userData\n})\n\nexport default connect(mapStateToProps)(Homepage)","import { useEffect, useState } from 'react'\nimport Signup from './Components/Signup/Signup'\nimport Signin from './Components/Signup/Signin'\nimport Outline from './Components/Edit/Outline/Outline'\nimport Screenplay from './Components/Edit/Screenplay/Screenplay'\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport Notes from './Components/Edit/Notes/Notes'\nimport { connect } from 'react-redux'\nimport GlobalStyles from './GlobalStyles'\nimport { Route, useHistory, Switch } from 'react-router-dom'\nimport { userData, colors } from './redux/actions/appActions'\nimport Homepage from './Components/Homepage'\nimport moment from 'moment'\nimport { goals, goalIsVisible } from './redux/actions/appActions'\nimport { db } from './firebase'\n\nconst App = (props) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const history = useHistory()\n\n  useEffect(()=> {\n    if(props.userData.userID.length > 0) {\n      const unsubscribe = goalListener()\n      return ()=> unsubscribe()\n    }\n    // eslint-disable-next-line\n  }, [props.userData.userID])\n\n  useEffect(()=> {\n    checkAuthentication()\n    // eslint-disable-next-line\n  }, [])\n\n  const getUserData = (user) => {\n    return db.collection('users')\n    .doc(user.uid)\n    .get()\n  }\n\n  const sendPreferencesToState = (data) => {\n    const preferences = data.data().preferences\n    const colorsData = preferences.colors\n    props.dispatch(colors(colorsData))\n  }\n\n  const handleAuthenticatedUser = (user) => {\n    props.dispatch(userData({ userID: user.uid }))\n    getGoalData(user.uid)\n    getUserData(user)\n    .then(data=> {\n      sendPreferencesToState(data)\n      if(props.match.params.page==='signup' \n      || props.match.params.page==='signin') {\n        history.push('/writing-app')\n      }\n      setIsLoading(false)\n    })\n  }\n\n  const handleUnauthenticatedUser = () => {\n    if(props.match.params.page!==undefined \n      && props.match.params.page!=='signup' \n      && props.match.params.page!=='signin') {\n      history.push('/writing-app')\n    }\n    setIsLoading(false)\n  }\n \n  const checkAuthentication = () => {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) return handleAuthenticatedUser(user)\n      return handleUnauthenticatedUser()\n    })\n  }\n\n  const updateGoalsAfterListen = (data) => {\n    const currentDate = moment().format('L')\n    const goalsObject = createGoalsObject(data, currentDate)\n    updateGoalsInState(goalsObject)\n  }\n\n  const createGoalsObject = (data, currentDate) => {\n    if(data.exists) return data.data()\n    return {\n      goal: 100,\n      wordsWritten: {\n        words: 0,\n        date: currentDate,\n      }\n    }\n  }\n\n  const goalListener = () => {\n    return db.collection('users')\n    .doc(props.userData.userID)\n    .collection('goals')\n    .doc('daily-goal')\n    .onSnapshot((data)=> {\n      updateGoalsAfterListen(data)\n    }) \n  }\n\n  const updateGoalsInState = (goalsObject) => {\n    props.dispatch(goals({\n      goal: goalsObject.goal,\n      wordsWritten: goalsObject.wordsWritten.words\n    }))\n  }\n\n  const handleGoalData = (data, userID) => {\n    const currentDate = moment().format('L')\n    const goalsObject = createGoalsObject(data, currentDate)\n    const date = goalsObject.wordsWritten.date\n    if(date === currentDate) {\n      updateGoalsInState(goalsObject)\n    }else{\n      resetDailyGoalDatabase(userID, currentDate)\n      resetDailyGoalState(goalsObject)\n    }\n    props.dispatch(goalIsVisible(true))\n  }\n\n  const getGoalData = (userID) => {\n    db.collection('users')\n    .doc(userID)\n    .collection('goals')\n    .doc('daily-goal')\n    .get()\n    .then(data=> {\n      handleGoalData(data, userID)\n    })\n  }\n\n  const resetDailyGoalDatabase = (userID, currentDate) => {\n    db.collection('users')\n    .doc(userID)\n    .collection('goals')\n    .doc('daily-goal')\n    .update({\n      wordsWritten: {\n        date: currentDate,\n        words: 0,\n      }\n    })\n  }\n\n  const resetDailyGoalState = (goalsObject) => {\n    props.dispatch(goals({\n      goal: goalsObject.goal,\n      wordsWritten: 0\n    }))\n  }\n\n  return (\n    isLoading ? \n    null\n    :\n    <div style={{height: '100%'}}>\n      <Switch>\n        <Route exact path='/writing-app/signup' render={(props)=> (\n          <Signup {...props} />\n        )} />\n        <Route exact path='/writing-app/signin' render={(props)=> (\n          <Signin {...props} />\n        )} />\n        <Route path='/writing-app/edit/outline/:fileID' render={(props)=> (\n          <Outline {...props} />\n        )} />\n        <Route path='/writing-app/edit/notes/:fileID' render={(props)=> (\n          <Notes {...props} />\n        )} />\n        <Route path='/writing-app/edit/screenplay/:fileID' render={(props)=> (\n          <Screenplay {...props} />\n        )} />\n        <Route path='/writing-app' render={(props)=> (\n          <Homepage setIsLoading={setIsLoading} {...props} />\n          )} />\n      </Switch>\n      <GlobalStyles page={props.match.params.page} userID={props.userData.userID} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  userData: state.app.userData\n})\n\nexport default connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from '../actions/appActions'\n\nconst initialState = {\n    userData: {userID: ''},\n    currentProjectID: '',\n    projectFiles: [],\n    currentFileID: '',\n    outlineData: {},\n    notesData: {},\n    dashboardCurrentSection: 'projects',\n    outlineItemsForUpdate: [],\n    outlineItemsDisplay: [],\n    rootDocs: [],\n    layerOneDocs: [],\n    layerTwoDocs: [],\n    layerThreeDocs: [],\n    currentLayer: 0,\n    colorThemes: [],\n    colors: {},\n    tasks: [],\n    goals: {goal: 100, wordsWritten: 0},\n    goalIsVisible: false,\n    isArrowVisible: false,\n}\n\nconst appReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actions.IS_ARROW_VISIBLE:\n            return {\n                ...state,\n                isArrowVisible: action.payload\n            }\n        case actions.GOAL_IS_VISIBLE:\n            return {\n                ...state,\n                goalIsVisible: action.payload\n            }\n        case actions.RESET:\n            return initialState\n        case actions.GOALS:\n            return {\n                ...state,\n                goals: action.payload\n            }\n        case actions.TASKS:\n            return {\n                ...state,\n                tasks: action.payload\n            }\n        case actions.COLORS:\n            return {\n                ...state,\n                colors: action.payload\n            }\n        case actions.COLOR_THEMES:\n            return {\n                ...state,\n                colorThemes: action.payload\n            }\n        case actions.CURRENT_LAYER:\n            return {\n                ...state,\n                currentLayer: action.payload\n            }\n        case actions.LAYER_THREE_DOCS:\n            return {\n                ...state,\n                layerThreeDocs: action.payload\n            }\n        case actions.LAYER_TWO_DOCS:\n            return {\n                ...state,\n                layerTwoDocs: action.payload\n            }\n        case actions.LAYER_ONE_DOCS:\n            return {\n                ...state,\n                layerOneDocs: action.payload\n            }\n        case actions.ROOT_DOCS:\n            return {\n                ...state,\n                rootDocs: action.payload\n            }\n        case actions.OUTLINE_ITEMS_DISPLAY:\n            return {\n                ...state,\n                outlineItemsDisplay: action.payload\n            }\n        case actions.OUTLINE_ITEMS_FOR_UPDATE:\n            return {\n                ...state,\n                outlineItemsForUpdate: action.payload\n            }\n        case actions.DASHBOARD_CURRENT_SECTION:\n            return {\n                ...state,\n                dashboardCurrentSection: action.payload\n            }\n        case actions.NOTES_DATA:\n            return {\n                ...state,\n                notesData: action.payload\n            }\n        case actions.OUTLINE_DATA:\n            return {\n                ...state,\n                outlineData: action.payload\n            }\n        case actions.CURRENT_FILE_ID:\n            return {\n                ...state,\n                currentFileID: action.payload\n            }\n        case actions.PROJECT_FILES:\n            return {\n                ...state,\n                projectFiles: action.payload\n            }\n        case actions.USER_DATA:\n            return {\n                ...state,\n                userData: action.payload\n            }\n        case actions.CURRENT_PROJECT_ID:\n            return {\n                ...state,\n                currentProjectID: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default appReducer","import * as actions from '../actions/dashboardActions'\n\nconst initialState = {\n    breadcrumbs: [{name: 'all files', docId: null}],\n    sortMethod: null,\n}\n\nconst dashboardReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actions.RESET_DASHBOARD:\n            return initialState\n        case actions.SORT_METHOD:\n            return {\n                ...state,\n                sortMethod: action.payload\n            }\n        case actions.BREADCRUMBS:\n            return {\n                ...state,\n                breadcrumbs: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default dashboardReducer","import { combineReducers } from 'redux'\nimport appReducer from './reducers/appReducer'\nimport dashboardReducer from './reducers/dashboardReducer'\n\nexport default combineReducers({\n    app: appReducer,\n    dashboard: dashboardReducer,\n})","import { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport thunk from 'redux-thunk'\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './redux/rootReducer'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path='/writing-app/:page?' render={(props)=> (\n          <App {...props} />\n        )} />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}